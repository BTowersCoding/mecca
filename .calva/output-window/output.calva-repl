; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx.cmd shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
; nREPL Connection was closed
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx.cmd shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
[{:time 2.5, :instrument 1, :pitch 71} {:time 5.5, :instrument 1, :pitch 67}]
cljs꞉mecca.view꞉> 
[]
nil
cljs꞉mecca.view꞉> 
"[]\n"
cljs꞉mecca.view꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx.cmd shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx.cmd shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
[]
clj꞉mecca.music꞉> 
"[{:time 2.5,:instrument 1,:pitch 74} {:time 5.5,:instrument 1,:pitch 67} {:instrument 1,:time 7,:pitch 72}]"
clj꞉mecca.editor꞉> 
({:time 0, :instrument 15, :pitch 71}
 {:time 1.5, :instrument 15, :pitch 71}
 {:time 2, :instrument 15, :pitch 71}
 {:time 3, :instrument 15, :pitch 73}
 {:time 3.5, :instrument 15, :pitch 69}
 {:time 4, :instrument 15, :pitch 69}
 {:time 5.5, :instrument 15, :pitch 69}
 {:time 6, :instrument 15, :pitch 69}
 {:time 8, :instrument 15, :pitch 64}
 {:time 9.5, :instrument 15, :pitch 64}
 {:time 10, :instrument 15, :pitch 64}
 {:time 12, :instrument 15, :pitch 64}
 {:time 13.5, :instrument 15, :pitch 64}
 {:time 14, :instrument 15, :pitch 64}
 {:time 16, :instrument 15, :pitch 71}
 {:time 17.5, :instrument 15, :pitch 71}
 {:time 18, :instrument 15, :pitch 71}
 {:time 19, :instrument 15, :pitch 73}
 {:time 19.5, :instrument 15, :pitch 69}
 {:time 20, :instrument 15, :pitch 69}
 {:time 21.5, :instrument 15, :pitch 69}
 {:time 22, :instrument 15, :pitch 69}
 {:time 24, :instrument 15, :pitch 64}
 {:time 25.5, :instrument 15, :pitch 64}
 {:time 26, :instrument 15, :pitch 64}
 {:time 28, :instrument 15, :pitch 64}
 {:time 29.5, :instrument 15, :pitch 64}
 {:time 30, :instrument 15, :pitch 64}
 {:time 61.5, :instrument 15, :pitch 69}
 {:time 61, :instrument 15, :pitch 64}
 {:time 63, :instrument 15, :pitch 64}
 {:time 58, :instrument 15, :pitch 69}
 {:time 57.5, :instrument 15, :pitch 69}
 {:time 56, :instrument 15, :pitch 69}
 {:time 55, :instrument 15, :pitch 67}
 {:time 54.5, :instrument 15, :pitch 66}
 {:time 49.5, :instrument 15, :pitch 64}
 {:time 32, :instrument 15, :pitch 71}
 {:time 33.5, :instrument 15, :pitch 66}
 {:time 34, :instrument 15, :pitch 64}
 {:time 34.5, :instrument 15, :pitch 62}
 {:time 35.5, :instrument 15, :pitch 59}
 {:time 37.5, :instrument 15, :pitch 66}
 {:time 38, :instrument 15, :pitch 64}
 {:time 39, :instrument 15, :pitch 62}
 {:time 40, :instrument 15, :pitch 69}
 {:time 41.5, :instrument 15, :pitch 64}
 {:time 42, :instrument 15, :pitch 62}
 {:time 42.5, :instrument 15, :pitch 61}
 {:time 43.5, :instrument 15, :pitch 57}
 ...)
clj꞉mecca.view꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:2
;  Use of undeclared Var mecca.view/spit
; --------------------------------------------------------------------------------
; 
clj꞉mecca.view꞉> 
#'mecca.view/demo
clj꞉mecca.view꞉> 
({:time 0, :instrument 15, :pitch 71}
 {:time 1.5, :instrument 15, :pitch 71}
 {:time 2, :instrument 15, :pitch 71}
 {:time 3, :instrument 15, :pitch 73}
 {:time 3.5, :instrument 15, :pitch 69}
 {:time 4, :instrument 15, :pitch 69}
 {:time 5.5, :instrument 15, :pitch 69}
 {:time 6, :instrument 15, :pitch 69}
 {:time 8, :instrument 15, :pitch 64}
 {:time 9.5, :instrument 15, :pitch 64}
 {:time 10, :instrument 15, :pitch 64}
 {:time 12, :instrument 15, :pitch 64}
 {:time 13.5, :instrument 15, :pitch 64}
 {:time 14, :instrument 15, :pitch 64}
 {:time 16, :instrument 15, :pitch 71}
 {:time 17.5, :instrument 15, :pitch 71}
 {:time 18, :instrument 15, :pitch 71}
 {:time 19, :instrument 15, :pitch 73}
 {:time 19.5, :instrument 15, :pitch 69}
 {:time 20, :instrument 15, :pitch 69}
 {:time 21.5, :instrument 15, :pitch 69}
 {:time 22, :instrument 15, :pitch 69}
 {:time 24, :instrument 15, :pitch 64}
 {:time 25.5, :instrument 15, :pitch 64}
 {:time 26, :instrument 15, :pitch 64}
 {:time 28, :instrument 15, :pitch 64}
 {:time 29.5, :instrument 15, :pitch 64}
 {:time 30, :instrument 15, :pitch 64}
 {:time 61.5, :instrument 15, :pitch 69}
 {:time 61, :instrument 15, :pitch 64}
 {:time 63, :instrument 15, :pitch 64}
 {:time 58, :instrument 15, :pitch 69}
 {:time 57.5, :instrument 15, :pitch 69}
 {:time 56, :instrument 15, :pitch 69}
 {:time 55, :instrument 15, :pitch 67}
 {:time 54.5, :instrument 15, :pitch 66}
 {:time 49.5, :instrument 15, :pitch 64}
 {:time 32, :instrument 15, :pitch 71}
 {:time 33.5, :instrument 15, :pitch 66}
 {:time 34, :instrument 15, :pitch 64}
 {:time 34.5, :instrument 15, :pitch 62}
 {:time 35.5, :instrument 15, :pitch 59}
 {:time 37.5, :instrument 15, :pitch 66}
 {:time 38, :instrument 15, :pitch 64}
 {:time 39, :instrument 15, :pitch 62}
 {:time 40, :instrument 15, :pitch 69}
 {:time 41.5, :instrument 15, :pitch 64}
 {:time 42, :instrument 15, :pitch 62}
 {:time 42.5, :instrument 15, :pitch 61}
 {:time 43.5, :instrument 15, :pitch 57}
 ...)
clj꞉mecca.view꞉> 
#object[EditorView [object Object]]
clj꞉mecca.editor꞉> 
:repl/print-error!
; The result object failed to print. It is available via *1 if you want to interact with it.
; 
; The exception was: 
; 
; #error {:message "Cannot call 0 as a function.", :data {:type :sci/error, :line 132, :column 10, :message "Cannot call 0 as a function.", :sci.impl/callstack #object[cljs.core.Delay {:status :pending, :val nil}], :file nil, :locals {%1 {:time 0, :instrument 15, :pitch 71}}}, :cause #object[Error Error: Cannot call 0 as a function.]}
clj꞉mecca.editor꞉> 
"(defn bass1 [time]\n  [{:time (+ time 0), :instrument 15, :pitch 71} {:time (+ time 1.5) :instrument 15, :pitch 71} {:time (+ time 2) :instrument 15, :pitch 71} {:time (+ time 3) :instrument 15, :pitch 73} {:time (+ time 3.5) :instrument 15, :pitch 69} {:time (+ time 4) :instrument 15, :pitch 69} {:time (+ time 5.5) :instrument 15, :pitch 69} {:time (+ time 6) :instrument 15, :pitch 69} {:time (+ time 8) :instrument 15, :pitch 64} {:time (+ time 9.5) :instrument 15, :pitch 64} {:time (+ time 10) :instrument 15, :pitch 64} {:time (+ time 12) :instrument 15, :pitch 64} {:time (+ time 13.5) :instrument 15, :pitch 64} {:time (+ time 14) :instrument 15, :pitch 64}])\n\n(defn bass2 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 29.5, :instrument 15, :pitch 69} {:time 29, :instrument 15, :pitch 64} {:time 31, :instrument 15, :pitch 64} {:time 26, :instrument 15, :pitch 69} {:time 25.5, :instrument 15, :pitch 69} {:time 24, :instrument 15, :pitch 69} {:time 23, :instrument 15, :pitch 67} {:time 22.5, :instrument 15, :pitch 66} {:time 17.5, :instrument 15, :pitch 64} {:time 0, :instrument 15, :pitch 71} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 64} {:time 2.5, :instrument 15, :pitch 62} {:time 3.5, :instrument 15, :pitch 59} {:time 5.5, :instrument 15, :pitch 66} {:time 6, :instrument 15, :pitch 64} {:time 7, :instrument 15, :pitch 62} {:time 8, :instrument 15, :pitch 69} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 62} {:time 10.5, :instrument 15, :pitch 61} {:time 11.5, :instrument 15, :pitch 57} {:time 13.5, :instrument 15, :pitch 64} {:time 14, :instrument 15, :pitch 62} {:time 15, :instrument 15, :pitch 61} {:time 16, :instrument 15, :pitch 64} {:time 18.5, :instrument 15, :pitch 64} {:time 19, :instrument 15, :pitch 66} {:time 19.5, :instrument 15, :pitch 67} {:time 20.5, :instrument 15, :pitch 66} {:time 21, :instrument 15, :pitch 64} {:time 21.5, :instrument 15, :pitch 64}]))\n\n(defn bass3 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 0, :instrument 15, :pitch 66} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 66} {:time 3, :instrument 15, :pitch 69} {:time 4, :instrument 15, :pitch 64} {:time 5.5, :instrument 15, :pitch 64} {:time 6, :instrument 15, :pitch 64} {:time 8, :instrument 15, :pitch 64} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 64} {:time 11, :instrument 15, :pitch 61} {:time 12, :instrument 15, :pitch 62} {:time 13.5, :instrument 15, :pitch 62} {:time 14, :instrument 15, :pitch 62} {:time 16, :instrument 15, :pitch 62} {:time 17.5, :instrument 15, :pitch 62} {:time 18, :instrument 15, :pitch 62} {:time 20, :instrument 15, :pitch 61} {:time 21.5, :instrument 15, :pitch 61} {:time 22, :instrument 15, :pitch 61} {:time 24, :instrument 15, :pitch 61} {:time 25.5, :instrument 15, :pitch 73} {:time 26.5, :instrument 15, :pitch 71} {:time 27, :instrument 15, :pitch 69} {:time 27.5, :instrument 15, :pitch 68}]))\n\n(defn bass4 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 0, :instrument 15, :pitch 66} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 66} {:time 4, :instrument 15, :pitch 64} {:time 5.5, :instrument 15, :pitch 64} {:time 6, :instrument 15, :pitch 64} {:time 7, :instrument 15, :pitch 61} {:time 8, :instrument 15, :pitch 62} {:time 9.5, :instrument 15, :pitch 62} {:time 10, :instrument 15, :pitch 62} {:time 12, :instrument 15, :pitch 69} {:time 13.5, :instrument 15, :pitch 69} {:time 14, :instrument 15, :pitch 69}]))\n\n(defn bass5 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 0, :instrument 15, :pitch 67} {:time 8, :instrument 15, :pitch 66} {:time 16, :instrument 15, :pitch 64} {:time 17, :instrument 15, :pitch 62} {:time 18, :instrument 15, :pitch 61} {:time 19, :instrument 15, :pitch 59}]))\n\n(def bass-pat-1\n  (concat (bass1 0) (bass1 16) (bass2 32) (bass3 64) (bass4 92) (bass4 108) (bass5 124)))\n\n(defn bass6 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 0, :instrument 15, :pitch 71} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 71} {:time 2.5, :instrument 15, :pitch 66} {:time 3.5, :instrument 15, :pitch 66} {:time 4, :instrument 15, :pitch 69} {:time 5.5, :instrument 15, :pitch 69} {:time 6, :instrument 15, :pitch 69} {:time 8, :instrument 15, :pitch 68} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 68} {:time 10.5, :instrument 15, :pitch 64} {:time 11.5, :instrument 15, :pitch 64} {:time 12, :instrument 15, :pitch 66} {:time 13.5, :instrument 15, :pitch 66} {:time 14, :instrument 15, :pitch 66}]))\n\n(defn bass7 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 0, :instrument 15, :pitch 67} {:time 1, :instrument 15, :pitch 62} {:time 1.5, :instrument 15, :pitch 64} {:time 2, :instrument 15, :pitch 67} {:time 2.5, :instrument 15, :pitch 62} {:time 3, :instrument 15, :pitch 67} {:time 3.5, :instrument 15, :pitch 67} {:time 4, :instrument 15, :pitch 66} {:time 5.5, :instrument 15, :pitch 66} {:time 6, :instrument 15, :pitch 66} {:time 8, :instrument 15, :pitch 67} {:time 9, :instrument 15, :pitch 62} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 67} {:time 10.5, :instrument 15, :pitch 62} {:time 11, :instrument 15, :pitch 67} {:time 11.5, :instrument 15, :pitch 66} {:time 12, :instrument 15, :pitch 64} {:time 13.5, :instrument 15, :pitch 64} {:time 14, :instrument 15, :pitch 64} {:time 16, :instrument 15, :pitch 64} {:time 17.5, :instrument 15, :pitch 64} {:time 18, :instrument 15, :pitch 64}]))\n\n(def bass-pat-2\n  (concat (bass6 144) (bass6 160) (bass7 176) (bass1 196) (bass1 212)))\n\n(defn drums1 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 15, :instrument 2, :pitch 67} {:time 14, :instrument 13, :pitch 77} {:time 13, :instrument 13, :pitch 77} {:time 12, :instrument 13, :pitch 77} {:time 11, :instrument 2, :pitch 67} {:time 10, :instrument 13, :pitch 77} {:time 9, :instrument 13, :pitch 77} {:time 8, :instrument 13, :pitch 77} {:time 7, :instrument 2, :pitch 67} {:time 6, :instrument 13, :pitch 77} {:time 5, :instrument 13, :pitch 77} {:time 4, :instrument 13, :pitch 77} {:time 3, :instrument 2, :pitch 67} {:time 2, :instrument 13, :pitch 77} {:time 1, :instrument 13, :pitch 77} {:time 0, :instrument 13, :pitch 77}]))\n\n(defn drums2 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 7.5, :instrument 13, :pitch 77} {:time 7, :instrument 2, :pitch 67} {:time 6.5, :instrument 13, :pitch 77} {:time 6, :instrument 13, :pitch 77} {:time 5.5, :instrument 13, :pitch 77} {:time 5, :instrument 2, :pitch 67} {:time 4.5, :instrument 13, :pitch 77} {:time 4, :instrument 13, :pitch 77} {:time 3.5, :instrument 13, :pitch 77} {:time 3, :instrument 2, :pitch 67} {:time 2.5, :instrument 13, :pitch 77} {:time 2, :instrument 13, :pitch 77} {:time 1.5, :instrument 13, :pitch 77} {:time 1, :instrument 2, :pitch 67} {:time 0.5, :instrument 13, :pitch 77} {:time 0, :instrument 13, :pitch 77}]))\n\n(defn drums-pat-1 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       (concat (drums1 0) (drums1 16))))\n\n(defn drums-pat-2 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       (concat\n        (drums2 132)\n        (drums2 140)\n        (drums2 148)\n        (drums2 156)\n        (drums2 164)\n        (drums2 172)\n        (drums2 180)\n        (drums2 188))))\n\n(defn glis [notes]\n  (let [chord (reverse (sort-by :pitch notes))\n        times (for [note (range (count chord))]\n                (update (nth chord note) :time #(+ % (* 0.1 note))))\n        pitches (for [note (range (count times))]\n                  (update (nth times note) :pitch #(- % note)))\n        last-note (repeat 3 (last pitches))\n        last-note (for [note (range 1 3)]\n                    (update (nth last-note note) :time #(+ % (/ note 10.0))))]\n    (concat pitches last-note)))\n\n(defn lead1 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       (concat [{:time 1.5, :instrument 14, :pitch 69} {:time 2, :instrument 14, :pitch 71} {:time 2.5, :instrument 14, :pitch 74} {:time 3, :instrument 14, :pitch 76} {:time 3.5, :instrument 14, :pitch 78} {:time 4, :instrument 14, :pitch 78} {:time 4.5, :instrument 14, :pitch 78} {:time 5, :instrument 14, :pitch 76} {:time 6, :instrument 14, :pitch 74} {:time 6.5, :instrument 14, :pitch 76} {:time 7.5, :instrument 14, :pitch 74} {:time 7.75, :instrument 14, :pitch 76} {:time 8, :instrument 14, :pitch 74} {:time 9, :instrument 14, :pitch 74} {:time 9.5, :instrument 14, :pitch 71}]\n               (glis (repeat 12 {:time 10 :instrument 14, :pitch 71}))\n               [{:time 12, :instrument 14, :pitch 74} {:time 12.5, :instrument 14, :pitch 74} {:time 13.5, :instrument 14, :pitch 74} {:time 14.5, :instrument 14, :pitch 71} {:time 15.5, :instrument 14, :pitch 69} {:time 16, :instrument 14, :pitch 71}]\n               (glis (repeat 8 {:time 16, :instrument 14, :pitch 71}))\n               [{:time 17.5, :instrument 14, :pitch 64} {:time 18, :instrument 14, :pitch 66} {:time 18.5, :instrument 14, :pitch 69} {:time 19, :instrument 14, :pitch 71} {:time 20, :instrument 14, :pitch 71} {:time 20.5, :instrument 14, :pitch 73} {:time 21.5, :instrument 14, :pitch 69} {:time 22.5, :instrument 14, :pitch 69} {:time 24, :instrument 14, :pitch 66} {:time 24.5, :instrument 14, :pitch 64} {:time 25.5, :instrument 14, :pitch 64}])))\n\n(defn lead2 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 0, :instrument 5, :pitch 66} {:time 1.5, :instrument 5, :pitch 71} {:time 7, :instrument 5, :pitch 71} {:time 8, :instrument 5, :pitch 71} {:time 8.5, :instrument 5, :pitch 69} {:time 9.5, :instrument 5, :pitch 64} {:time 15, :instrument 5, :pitch 66} {:time 16, :instrument 5, :pitch 67} {:time 16.5, :instrument 5, :pitch 64} {:time 17, :instrument 5, :pitch 59} {:time 17.5, :instrument 5, :pitch 64} {:time 21, :instrument 5, :pitch 61} {:time 21.5, :instrument 5, :pitch 61} {:time 22.5, :instrument 5, :pitch 62} {:time 24, :instrument 5, :pitch 66} {:time 25.5, :instrument 5, :pitch 64}]))\n\n(defn lead3 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 65, :instrument 5, :pitch 73} {:time 65.5, :instrument 5, :pitch 73} {:time 67, :instrument 5, :pitch 73} {:time 68, :instrument 5, :pitch 73} {:time 69, :instrument 5, :pitch 74} {:time 69.5, :instrument 5, :pitch 71} {:time 73.5, :instrument 5, :pitch 71} {:time 74, :instrument 5, :pitch 71} {:time 75, :instrument 5, :pitch 71} {:time 76, :instrument 5, :pitch 71} {:time 76.5, :instrument 5, :pitch 73} {:time 77, :instrument 5, :pitch 71} {:time 77.5, :instrument 5, :pitch 69} {:time 81, :instrument 5, :pitch 69} {:time 81.5, :instrument 5, :pitch 69} {:time 82.5, :instrument 5, :pitch 68} {:time 83.5, :instrument 5, :pitch 66} {:time 84, :instrument 5, :pitch 68} {:time 85.5, :instrument 5, :pitch 66} {:time 88, :instrument 5, :pitch 65} {:time 88.5, :instrument 5, :pitch 66} {:time 89.5, :instrument 5, :pitch 68} {:time 92, :instrument 5, :pitch 69}]))\n\n(defn lead4 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 93.5, :instrument 14, :pitch 64} {:time 94, :instrument 14, :pitch 66} {:time 94.5, :instrument 14, :pitch 69} {:time 95, :instrument 14, :pitch 71} {:time 95.5, :instrument 14, :pitch 73} {:time 97, :instrument 14, :pitch 71} {:time 98, :instrument 14, :pitch 69} {:time 98.5, :instrument 14, :pitch 71} {:time 99.5, :instrument 14, :pitch 69} {:time 99.75, :instrument 14, :pitch 71} {:time 100, :instrument 14, :pitch 69} {:time 101.5, :instrument 14, :pitch 66}]))\n\n(defn gb1 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 102, :instrument 6, :pitch 66} {:time 103, :instrument 6, :pitch 74} {:time 104, :instrument 6, :pitch 73} {:time 118, :instrument 6, :pitch 66} {:time 119, :instrument 6, :pitch 74} {:time 120, :instrument 6, :pitch 73} {:time 125.5, :instrument 6, :pitch 71} {:time 126, :instrument 6, :pitch 71} {:time 126.5, :instrument 6, :pitch 71} {:time 128, :instrument 6, :pitch 71} {:time 128.5, :instrument 6, :pitch 73} {:time 129.5, :instrument 6, :pitch 69} {:time 133.5, :instrument 6, :pitch 69} {:time 134, :instrument 6, :pitch 69} {:time 135, :instrument 6, :pitch 66} {:time 136, :instrument 6, :pitch 69} {:time 137.5, :instrument 6, :pitch 68}]))\n\n(defn lead5 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 93.5, :instrument 14, :pitch 64} {:time 94, :instrument 14, :pitch 66} {:time 94.5, :instrument 14, :pitch 69} {:time 95, :instrument 14, :pitch 71} {:time 95.5, :instrument 14, :pitch 73} {:time 97, :instrument 14, :pitch 71} {:time 98, :instrument 14, :pitch 69} {:time 98.5, :instrument 14, :pitch 71} {:time 99.5, :instrument 14, :pitch 69} {:time 99.75, :instrument 14, :pitch 71} {:time 100, :instrument 14, :pitch 69} {:time 101.5, :instrument 14, :pitch 66} {:time 105.5, :instrument 14, :pitch 69} {:time 106, :instrument 14, :pitch 69} {:time 106.5, :instrument 14, :pitch 69} {:time 107, :instrument 14, :pitch 68} {:time 107.5, :instrument 14, :pitch 68} {:time 108, :instrument 14, :pitch 66} {:time 105.5, :instrument 14, :pitch 57} {:time 106, :instrument 14, :pitch 57} {:time 106.5, :instrument 14, :pitch 57} {:time 107, :instrument 14, :pitch 56} {:time 107.5, :instrument 14, :pitch 56} {:time 108, :instrument 14, :pitch 54} {:time 110, :instrument 14, :pitch 78} {:time 110.5, :instrument 14, :pitch 76} {:time 111, :instrument 14, :pitch 73} {:time 111.5, :instrument 14, :pitch 71} {:time 112, :instrument 14, :pitch 73} {:time 114.5, :instrument 14, :pitch 71} {:time 115, :instrument 14, :pitch 73} {:time 115.5, :instrument 14, :pitch 71} {:time 116, :instrument 14, :pitch 71} {:time 116.5, :instrument 14, :pitch 69} {:time 117.5, :instrument 14, :pitch 69} {:time 118, :instrument 6, :pitch 66} {:time 119, :instrument 6, :pitch 74} {:time 120, :instrument 6, :pitch 73}]))\n\n(defn plane1 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 125.5, :instrument 6, :pitch 74} {:time 126, :instrument 6, :pitch 74} {:time 126.5, :instrument 6, :pitch 74} {:time 128, :instrument 6, :pitch 74} {:time 128.5, :instrument 6, :pitch 76} {:time 129.5, :instrument 6, :pitch 73} {:time 133.5, :instrument 6, :pitch 73} {:time 134, :instrument 6, :pitch 73} {:time 135, :instrument 6, :pitch 69} {:time 136, :instrument 6, :pitch 73} {:time 137.5, :instrument 6, :pitch 71}]))\n\n(defn flower1 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 144, :instrument 12, :pitch 78} {:time 144.5, :instrument 12, :pitch 74} {:time 145, :instrument 12, :pitch 71} {:time 145.5, :instrument 12, :pitch 78} {:time 146.5, :instrument 12, :pitch 74} {:time 147, :instrument 12, :pitch 71} {:time 147.5, :instrument 12, :pitch 76} {:time 148.5, :instrument 12, :pitch 73} {:time 149.5, :instrument 12, :pitch 71} {:time 150, :instrument 12, :pitch 69} {:time 152, :instrument 12, :pitch 80} {:time 152.5, :instrument 12, :pitch 76} {:time 153, :instrument 12, :pitch 73} {:time 153.5, :instrument 12, :pitch 80} {:time 154.5, :instrument 12, :pitch 76} {:time 155.5, :instrument 12, :pitch 78}]))\n\n(defn star1 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 157, :instrument 4, :pitch 70} {:time 158, :instrument 4, :pitch 71} {:time 159, :instrument 4, :pitch 73} {:time 157, :instrument 6, :pitch 70} {:time 158, :instrument 6, :pitch 71} {:time 159, :instrument 6, :pitch 73}]))\n\n(defn lead6 [time]\n  (map (fn [m] (update m :time #(+ % time)))\n       [{:time 176, :instrument 12, :pitch 86} {:time 177, :instrument 12, :pitch 86} {:time 178, :instrument 12, :pitch 86} {:time 179.5, :instrument 12, :pitch 86} {:time 180.5, :instrument 12, :pitch 85} {:time 184, :instrument 12, :pitch 86} {:time 185, :instrument 12, :pitch 86} {:time 186, :instrument 12, :pitch 86} {:time 188, :instrument 12, :pitch 88} {:time 189, :instrument 12, :pitch 90} {:time 189.5, :instrument 12, :pitch 88} {:time 193.5, :instrument 12, :pitch 88} {:time 194, :instrument 12, :pitch 88} {:time 194.5, :instrument 12, :pitch 86} {:time 195, :instrument 12, :pitch 85} {:time 195.5, :instrument 12, :pitch 83}\n        {:time 176, :instrument 4, :pitch 74} {:time 177, :instrument 4, :pitch 74} {:time 178, :instrument 4, :pitch 74} {:time 179.5, :instrument 4, :pitch 74} {:time 180.5, :instrument 4, :pitch 73} {:time 184, :instrument 4, :pitch 74} {:time 185, :instrument 4, :pitch 74} {:time 186, :instrument 4 :pitch 74} {:time 188, :instrument 4, :pitch 76} {:time 189, :instrument 4, :pitch 78} {:time 189.5, :instrument 4, :pitch 76} {:time 193.5, :instrument 4, :pitch 76} {:time 194, :instrument 4, :pitch 76} {:time 194.5, :instrument 4, :pitch 74} {:time 195, :instrument 4, :pitch 73} {:time 195.5, :instrument 4, :pitch 71}\n        {:time 176, :instrument 6, :pitch 74} {:time 177, :instrument 6 :pitch 74} {:time 178, :instrument 6, :pitch 74} {:time 179.5, :instrument 6 :pitch 74} {:time 180.5, :instrument 6 :pitch 73} {:time 184, :instrument 6, :pitch 74} {:time 185, :instrument 6, :pitch 74} {:time 186, :instrument 6 :pitch 74} {:time 188, :instrument 6, :pitch 76} {:time 189, :instrument 6, :pitch 78} {:time 189.5, :instrument 6, :pitch 76} {:time 193.5, :instrument 6 :pitch 76} {:time 194, :instrument 6 :pitch 76} {:time 194.5, :instrument 6, :pitch 74} {:time 195, :instrument 6 :pitch 73} {:time 195.5, :instrument 6 :pitch 71}]))\n\n(def rhythm\n  (concat\n   bass-pat-1 bass-pat-2\n   (drums-pat-1 0)\n   (drums-pat-1 32)\n   (drums-pat-1 64)\n   (drums-pat-1 96)\n   (drums-pat-2 0)\n   (drums-pat-1 196)\n   (lead1 0) (lead2 32) (lead3 0) (lead4 0)\n   (gb1 0)\n   (lead5 0)\n   (plane1 0)\n   (flower1 0)\n   (map (fn [m] (update m :time #(+ % 16)))\n        (flower1 0))))\n\n(filter #( (:time %) 196)\n        (concat rhythm\n                (star1 0)\n                (map (fn [m] (update m :time #(+ % 16)))\n                     (star1 0))\n                (lead6 0)\n                (lead1 196)\n                (lead5 196)))"
clj꞉mecca.editor꞉> 
:repl/print-error!
; The result object failed to print. It is available via *1 if you want to interact with it.
; 
; The exception was: 
; 
; #error {:message "Cannot call 0 as a function.", :data {:type :sci/error, :line 132, :column 10, :message "Cannot call 0 as a function.", :sci.impl/callstack #object[cljs.core.Delay {:status :pending, :val nil}], :file nil, :locals {%1 {:time 0, :instrument 15, :pitch 71}}}, :cause #object[Error Error: Cannot call 0 as a function.]}
clj꞉mecca.editor꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx.cmd shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx.cmd shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
#'mecca.view/bass1
clj꞉mecca.view꞉> 
#'mecca.view/bass-pat-1
clj꞉mecca.view꞉> 
#'mecca.view/drums1
clj꞉mecca.view꞉> 
#'mecca.view/drums-pat-1
clj꞉mecca.view꞉> 
#'mecca.view/glis
clj꞉mecca.view꞉> 
#'mecca.view/lead1
clj꞉mecca.view꞉> 
#'mecca.view/gb1
clj꞉mecca.view꞉> 
#'mecca.view/plane1
clj꞉mecca.view꞉> 
#'mecca.view/flower1
clj꞉mecca.view꞉> 
#'mecca.view/star1
clj꞉mecca.view꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:3:15
;  Use of undeclared Var mecca.view/bass-pat-2
; --------------------------------------------------------------------------------
; 
clj꞉mecca.view꞉> 
#'mecca.view/rhythm
clj꞉mecca.view꞉> 
({:time 0, :instrument 15, :pitch 71}
 {:time 1.5, :instrument 15, :pitch 71}
 {:time 2, :instrument 15, :pitch 71}
 {:time 3, :instrument 15, :pitch 73}
 {:time 3.5, :instrument 15, :pitch 69}
 {:time 4, :instrument 15, :pitch 69}
 {:time 5.5, :instrument 15, :pitch 69}
 {:time 6, :instrument 15, :pitch 69}
 {:time 8, :instrument 15, :pitch 64}
 {:time 9.5, :instrument 15, :pitch 64}
 {:time 10, :instrument 15, :pitch 64}
 {:time 12, :instrument 15, :pitch 64}
 {:time 13.5, :instrument 15, :pitch 64}
 {:time 14, :instrument 15, :pitch 64}
 {:time 16, :instrument 15, :pitch 71}
 {:time 17.5, :instrument 15, :pitch 71}
 {:time 18, :instrument 15, :pitch 71}
 {:time 19, :instrument 15, :pitch 73}
 {:time 19.5, :instrument 15, :pitch 69}
 {:time 20, :instrument 15, :pitch 69}
 {:time 21.5, :instrument 15, :pitch 69}
 {:time 22, :instrument 15, :pitch 69}
 {:time 24, :instrument 15, :pitch 64}
 {:time 25.5, :instrument 15, :pitch 64}
 {:time 26, :instrument 15, :pitch 64}
 {:time 28, :instrument 15, :pitch 64}
 {:time 29.5, :instrument 15, :pitch 64}
 {:time 30, :instrument 15, :pitch 64}
 {:time 15, :instrument 2, :pitch 67}
 {:time 14, :instrument 13, :pitch 77}
 {:time 13, :instrument 13, :pitch 77}
 {:time 12, :instrument 13, :pitch 77}
 {:time 11, :instrument 2, :pitch 67}
 {:time 10, :instrument 13, :pitch 77}
 {:time 9, :instrument 13, :pitch 77}
 {:time 8, :instrument 13, :pitch 77}
 {:time 7, :instrument 2, :pitch 67}
 {:time 6, :instrument 13, :pitch 77}
 {:time 5, :instrument 13, :pitch 77}
 {:time 4, :instrument 13, :pitch 77}
 {:time 3, :instrument 2, :pitch 67}
 {:time 2, :instrument 13, :pitch 77}
 {:time 1, :instrument 13, :pitch 77}
 {:time 0, :instrument 13, :pitch 77}
 {:time 31, :instrument 2, :pitch 67}
 {:time 30, :instrument 13, :pitch 77}
 {:time 29, :instrument 13, :pitch 77}
 {:time 28, :instrument 13, :pitch 77}
 {:time 27, :instrument 2, :pitch 67}
 {:time 26, :instrument 13, :pitch 77}
 ...)
clj꞉mecca.view꞉> 
#'mecca.view/bass1
clj꞉mecca.view꞉> 
#'mecca.view/bass-pat-1
clj꞉mecca.view꞉> 
#'mecca.view/drums1
clj꞉mecca.view꞉> 
#'mecca.view/drums-pat-1
clj꞉mecca.view꞉> 
#'mecca.view/glis
clj꞉mecca.view꞉> 
#'mecca.view/lead1
clj꞉mecca.view꞉> 
#'mecca.view/rhythm
clj꞉mecca.view꞉> 
; nREPL Connection was closed

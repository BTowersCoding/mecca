["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\r\nreagent.ratom.debug = false;\r\nreagent.ratom.generation = (0);\r\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\r\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\r\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\r\n});\r\nreagent.ratom.running = (function reagent$ratom$running(){\r\nreturn (cljs.core.deref(reagent.ratom._running));\r\n});\r\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\r\nif((x == null)){\r\nreturn (0);\r\n} else {\r\nreturn x.length;\r\n}\r\n});\r\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\r\nvar len = reagent.ratom.arr_len(x);\r\nvar and__4221__auto__ = (len === reagent.ratom.arr_len(y));\r\nif(and__4221__auto__){\r\nvar i = (0);\r\nwhile(true){\r\nvar or__4223__auto__ = (i === len);\r\nif(or__4223__auto__){\r\nreturn or__4223__auto__;\r\n} else {\r\nif(((x[i]) === (y[i]))){\r\nvar G__20888 = (i + (1));\r\ni = G__20888;\r\ncontinue;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn and__4221__auto__;\r\n}\r\n});\r\n/**\r\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\r\n * \r\n *   See function notify-deref-watcher! to know how *ratom-context* is updated\r\n */\r\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\r\nvar _STAR_ratom_context_STAR__orig_val__20337 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__20338 = obj;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20338);\r\n\r\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20337);\r\n}});\r\n/**\r\n * Returns `(in-context r f)`.  Calls `_update-watching` on r with any\r\n *   `deref`ed atoms captured during `in-context`, if any differ from the\r\n *   `watching` field of r.  Clears the `dirty?` flag on r.\r\n * \r\n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\r\n *   the reaction is also added to the list of watches on each ratoms f derefs.\r\n */\r\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\r\n(r.captured = null);\r\n\r\n\r\n\r\nvar res = reagent.ratom.in_context(r,f);\r\nvar c = r.captured;\r\n(r.dirty_QMARK_ = false);\r\n\r\nif(reagent.ratom.arr_eq(c,r.watching)){\r\n} else {\r\nr._update_watching(c);\r\n}\r\n\r\nreturn res;\r\n});\r\n/**\r\n * Add `derefed` to the `captured` field of `*ratom-context*`.\r\n * \r\n *   See also `in-context`\r\n */\r\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\r\nvar temp__5757__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\r\nif((temp__5757__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar r = temp__5757__auto__;\r\nvar c = r.captured;\r\nif((c == null)){\r\nreturn (r.captured = [derefed]);\r\n} else {\r\nreturn c.push(derefed);\r\n}\r\n}\r\n});\r\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\r\n} else {\r\n}\r\n\r\nreturn new$;\r\n});\r\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\r\nvar w = this$.watches;\r\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\r\n\r\nreturn (this$.watchesArr = null);\r\n});\r\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\r\nvar w = this$.watches;\r\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\r\n\r\nreturn (this$.watchesArr = null);\r\n});\r\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\r\nvar w = this$.watchesArr;\r\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__20359_SHARP_,p2__20360_SHARP_,p3__20361_SHARP_){\r\nvar G__20362 = p1__20359_SHARP_;\r\nG__20362.push(p2__20360_SHARP_);\r\n\r\nG__20362.push(p3__20361_SHARP_);\r\n\r\nreturn G__20362;\r\n}),[],this$.watches)):w);\r\nvar len = a.length;\r\nvar i = (0);\r\nwhile(true){\r\nif((i < len)){\r\nvar k_20890 = (a[i]);\r\nvar f_20891 = (a[(i + (1))]);\r\n(f_20891.cljs$core$IFn$_invoke$arity$4 ? f_20891.cljs$core$IFn$_invoke$arity$4(k_20890,this$,old,new$) : f_20891.call(null,k_20890,this$,old,new$));\r\n\r\nvar G__20892 = ((2) + i);\r\ni = G__20892;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n});\r\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s,v){\r\ncljs.core._write(writer,[\"#object[reagent.ratom.\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\r\n\r\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__20366 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__20367 = null;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20367);\r\n\r\ntry{return v;\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20366);\r\n}})(),writer,opts);\r\n\r\nreturn cljs.core._write(writer,\"]\");\r\n});\r\nreagent.ratom.rea_queue = null;\r\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\r\nif((reagent.ratom.rea_queue == null)){\r\n(reagent.ratom.rea_queue = []);\r\n\r\nreagent.impl.batching.schedule();\r\n} else {\r\n}\r\n\r\nreturn reagent.ratom.rea_queue.push(r);\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IReactiveAtom = function(){};\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IWithMeta}\r\n*/\r\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\r\nthis.state = state;\r\nthis.meta = meta;\r\nthis.validator = validator;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RAtom\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn self__.meta;\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn goog.getUid(this$__$1);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\r\nvar self__ = this;\r\nvar o__$1 = this;\r\nreturn (o__$1 === other);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nif((self__.validator == null)){\r\n} else {\r\n}\r\n\r\nvar old_value = self__.state;\r\n(self__.state = new_value);\r\n\r\nif((self__.watches == null)){\r\n} else {\r\nreagent.ratom.notify_w(a__$1,old_value,new_value);\r\n}\r\n\r\nreturn new_value;\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\r\n}));\r\n\r\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\r\n\r\nreturn self__.state;\r\n}));\r\n\r\n(reagent.ratom.RAtom.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.RAtom.cljs$lang$type = true);\r\n\r\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\r\n\r\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\r\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/RAtom\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/RAtom.\r\n */\r\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\r\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\r\n});\r\n\r\n/**\r\n * Like clojure.core/atom, except that it keeps track of derefs.\r\n */\r\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\r\nvar G__20417 = arguments.length;\r\nswitch (G__20417) {\r\ncase 1:\r\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\r\n\r\nbreak;\r\ndefault:\r\nvar args_arr__4850__auto__ = [];\r\nvar len__4829__auto___20930 = arguments.length;\r\nvar i__4830__auto___20931 = (0);\r\nwhile(true){\r\nif((i__4830__auto___20931 < len__4829__auto___20930)){\r\nargs_arr__4850__auto__.push((arguments[i__4830__auto___20931]));\r\n\r\nvar G__20932 = (i__4830__auto___20931 + (1));\r\ni__4830__auto___20931 = G__20932;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4851__auto__ = (new cljs.core.IndexedSeq(args_arr__4850__auto__.slice((1)),(0),null));\r\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4851__auto__);\r\n\r\n}\r\n});\r\n\r\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\r\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\r\n}));\r\n\r\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__20429){\r\nvar map__20430 = p__20429;\r\nvar map__20430__$1 = cljs.core.__destructure_map(map__20430);\r\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20430__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\r\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20430__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\r\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\r\n}));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq20415){\r\nvar G__20416 = cljs.core.first(seq20415);\r\nvar seq20415__$1 = cljs.core.next(seq20415);\r\nvar self__4816__auto__ = this;\r\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20416,seq20415__$1);\r\n}));\r\n\r\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\r\n\r\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\r\nvar m = o.reagReactionCache;\r\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\r\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\r\nif((!((r == null)))){\r\nreturn cljs.core._deref(r);\r\n} else {\r\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n} else {\r\nvar r__$1 = (function (){var G__20431 = f;\r\nvar G__20432 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\r\nvar G__20433 = (function (x){\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\r\n} else {\r\n}\r\n\r\nvar __20962 = o.reagReactionCache;\r\nvar __20963__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__20962,k);\r\n(o.reagReactionCache = __20963__$1);\r\n\r\nif((!((obj == null)))){\r\n(obj.reaction = null);\r\n} else {\r\n}\r\n\r\nif((!((destroy == null)))){\r\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\r\n} else {\r\nreturn null;\r\n}\r\n});\r\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20431,G__20432,G__20433) : reagent.ratom.make_reaction.call(null,G__20431,G__20432,G__20433));\r\n})();\r\nvar v = cljs.core._deref(r__$1);\r\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\r\n\r\nif(reagent.ratom.debug){\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\r\n} else {\r\n}\r\n\r\nif((!((obj == null)))){\r\n(obj.reaction = r__$1);\r\n} else {\r\n}\r\n\r\nreturn v;\r\n\r\n}\r\n}\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Track = (function (f,args,reaction){\r\nthis.f = f;\r\nthis.args = args;\r\nthis.reaction = reaction;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 0;\r\n});\r\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5755__auto__ = self__.reaction;\r\nif((temp__5755__auto__ == null)){\r\nreturn reagent.ratom.cached_reaction((function (){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\r\n}),self__.f,self__.args,this$__$1,null);\r\n} else {\r\nvar r = temp__5755__auto__;\r\nreturn cljs.core._deref(r);\r\n}\r\n}));\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.Track)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\r\n}));\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\r\n}));\r\n\r\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),self__.f], null));\r\n}));\r\n\r\n(reagent.ratom.Track.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.Track.cljs$lang$type = true);\r\n\r\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\r\n\r\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\r\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/Track\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Track.\r\n */\r\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\r\nreturn (new reagent.ratom.Track(f,args,reaction));\r\n});\r\n\r\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\r\nreturn (new reagent.ratom.Track(f,args,null));\r\n});\r\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\r\nvar t = reagent.ratom.make_track(f,args);\r\nvar r = (function (){var G__20439 = (function (){\r\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\r\n});\r\nvar G__20440 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\r\nvar G__20441 = true;\r\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__20439,G__20440,G__20441) : reagent.ratom.make_reaction.call(null,G__20439,G__20440,G__20441));\r\n})();\r\ncljs.core.deref(r);\r\n\r\nreturn r;\r\n});\r\nreagent.ratom.track = (function reagent$ratom$track(var_args){\r\nvar args__4835__auto__ = [];\r\nvar len__4829__auto___20964 = arguments.length;\r\nvar i__4830__auto___20965 = (0);\r\nwhile(true){\r\nif((i__4830__auto___20965 < len__4829__auto___20964)){\r\nargs__4835__auto__.push((arguments[i__4830__auto___20965]));\r\n\r\nvar G__20966 = (i__4830__auto___20965 + (1));\r\ni__4830__auto___20965 = G__20966;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4836__auto__ = ((((1) < args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\r\n});\r\n\r\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\r\n\r\nreturn reagent.ratom.make_track(f,args);\r\n}));\r\n\r\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq20444){\r\nvar G__20445 = cljs.core.first(seq20444);\r\nvar seq20444__$1 = cljs.core.next(seq20444);\r\nvar self__4816__auto__ = this;\r\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20445,seq20444__$1);\r\n}));\r\n\r\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\r\nvar args__4835__auto__ = [];\r\nvar len__4829__auto___20970 = arguments.length;\r\nvar i__4830__auto___20971 = (0);\r\nwhile(true){\r\nif((i__4830__auto___20971 < len__4829__auto___20970)){\r\nargs__4835__auto__.push((arguments[i__4830__auto___20971]));\r\n\r\nvar G__20972 = (i__4830__auto___20971 + (1));\r\ni__4830__auto___20971 = G__20972;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4836__auto__ = ((((1) < args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\r\n});\r\n\r\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\r\n\r\nreturn reagent.ratom.make_track_BANG_(f,args);\r\n}));\r\n\r\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq20446){\r\nvar G__20447 = cljs.core.first(seq20446);\r\nvar seq20446__$1 = cljs.core.next(seq20446);\r\nvar self__4816__auto__ = this;\r\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20447,seq20446__$1);\r\n}));\r\n\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\r\nthis.ratom = ratom;\r\nthis.path = path;\r\nthis.reaction = reaction;\r\nthis.state = state;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\n(reagent.ratom.RCursor.prototype._peek = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar _STAR_ratom_context_STAR__orig_val__20460 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__20461 = null;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20461);\r\n\r\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20460);\r\n}}));\r\n\r\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif((oldstate === newstate)){\r\nreturn null;\r\n} else {\r\n(self__.state = newstate);\r\n\r\nif((!((self__.watches == null)))){\r\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\r\n} else {\r\nreturn null;\r\n}\r\n}\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RCursor\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),self__.path], null));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\r\nvar self__ = this;\r\nvar ___$1 = this;\r\nreturn (((other instanceof reagent.ratom.RCursor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)))));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldstate = self__.state;\r\nthis$__$1._set_state(oldstate,new_value);\r\n\r\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\r\ncljs.core.reset_BANG_(self__.ratom,new_value);\r\n} else {\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\r\n}\r\n} else {\r\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\r\n}\r\n\r\nreturn new_value;\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20486 = a__$1._peek();\r\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20486) : f.call(null,G__20486));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20487 = a__$1._peek();\r\nvar G__20488 = x;\r\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20487,G__20488) : f.call(null,G__20487,G__20488));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20489 = a__$1._peek();\r\nvar G__20490 = x;\r\nvar G__20491 = y;\r\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20489,G__20490,G__20491) : f.call(null,G__20489,G__20490,G__20491));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n}));\r\n\r\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldstate = self__.state;\r\nvar newstate = (function (){var temp__5755__auto__ = self__.reaction;\r\nif((temp__5755__auto__ == null)){\r\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\r\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\r\n}):(function (){\r\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\r\n}));\r\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\r\n} else {\r\nvar r = temp__5755__auto__;\r\nreturn cljs.core._deref(r);\r\n}\r\n})();\r\nthis$__$1._set_state(oldstate,newstate);\r\n\r\nreturn newstate;\r\n}));\r\n\r\n(reagent.ratom.RCursor.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.RCursor.cljs$lang$type = true);\r\n\r\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\r\n\r\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\r\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/RCursor\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/RCursor.\r\n */\r\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\r\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\r\n});\r\n\r\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\r\n\r\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\r\n});\r\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\r\nvar temp__5757__auto__ = v.destroy;\r\nif((temp__5757__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar f = temp__5757__auto__;\r\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\r\n}\r\n});\r\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\r\nvar temp__5755__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\r\nif((temp__5755__auto__ == null)){\r\nreturn [];\r\n} else {\r\nvar c = temp__5755__auto__;\r\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\r\n}\r\n});\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IDisposable = function(){};\r\n\r\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_21028 = (function (this$){\r\nvar x__4521__auto__ = (((this$ == null))?null:this$);\r\nvar m__4522__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4521__auto__)]);\r\nif((!((m__4522__auto__ == null)))){\r\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4522__auto__.call(null,this$));\r\n} else {\r\nvar m__4519__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\r\nif((!((m__4519__auto__ == null)))){\r\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4519__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\r\n}\r\n}\r\n});\r\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\r\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\r\n} else {\r\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_21028(this$);\r\n}\r\n});\r\n\r\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_21029 = (function (this$,f){\r\nvar x__4521__auto__ = (((this$ == null))?null:this$);\r\nvar m__4522__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4521__auto__)]);\r\nif((!((m__4522__auto__ == null)))){\r\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4522__auto__.call(null,this$,f));\r\n} else {\r\nvar m__4519__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\r\nif((!((m__4519__auto__ == null)))){\r\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4519__auto__.call(null,this$,f));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\r\n}\r\n}\r\n});\r\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\r\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\r\n} else {\r\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_21029(this$,f);\r\n}\r\n});\r\n\r\n\r\n/**\r\n * @interface\r\n */\r\nreagent.ratom.IRunnable = function(){};\r\n\r\nvar reagent$ratom$IRunnable$run$dyn_21030 = (function (this$){\r\nvar x__4521__auto__ = (((this$ == null))?null:this$);\r\nvar m__4522__auto__ = (reagent.ratom.run[goog.typeOf(x__4521__auto__)]);\r\nif((!((m__4522__auto__ == null)))){\r\nreturn (m__4522__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4522__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4522__auto__.call(null,this$));\r\n} else {\r\nvar m__4519__auto__ = (reagent.ratom.run[\"_\"]);\r\nif((!((m__4519__auto__ == null)))){\r\nreturn (m__4519__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4519__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4519__auto__.call(null,this$));\r\n} else {\r\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\r\n}\r\n}\r\n});\r\nreagent.ratom.run = (function reagent$ratom$run(this$){\r\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\r\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\r\n} else {\r\nreturn reagent$ratom$IRunnable$run$dyn_21030(this$);\r\n}\r\n});\r\n\r\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\r\nreturn this$._handle_change(sender,old,new$);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {reagent.ratom.IReactiveAtom}\r\n * @implements {reagent.ratom.IRunnable}\r\n * @implements {reagent.ratom.IDisposable}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\r\nthis.f = f;\r\nthis.state = state;\r\nthis.dirty_QMARK_ = dirty_QMARK_;\r\nthis.nocache_QMARK_ = nocache_QMARK_;\r\nthis.watching = watching;\r\nthis.watches = watches;\r\nthis.auto_run = auto_run;\r\nthis.caught = caught;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\n});\r\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar _STAR_ratom_context_STAR__orig_val__20764 = reagent.ratom._STAR_ratom_context_STAR_;\r\nvar _STAR_ratom_context_STAR__temp_val__20765 = null;\r\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__20765);\r\n\r\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\r\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__20764);\r\n}}));\r\n\r\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\r\nreturn null;\r\n} else {\r\nif((self__.auto_run == null)){\r\n(self__.dirty_QMARK_ = true);\r\n\r\nreturn reagent.ratom.rea_enqueue(this$);\r\n} else {\r\nif(self__.auto_run === true){\r\nreturn this$._run(false);\r\n} else {\r\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\r\n}\r\n}\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar new$ = cljs.core.set(derefed);\r\nvar old = cljs.core.set(self__.watching);\r\n(self__.watching = derefed);\r\n\r\nvar seq__20770_21044 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\r\nvar chunk__20771_21045 = null;\r\nvar count__20772_21046 = (0);\r\nvar i__20773_21047 = (0);\r\nwhile(true){\r\nif((i__20773_21047 < count__20772_21046)){\r\nvar w_21048 = chunk__20771_21045.cljs$core$IIndexed$_nth$arity$2(null,i__20773_21047);\r\ncljs.core._add_watch(w_21048,this$,reagent.ratom.handle_reaction_change);\r\n\r\n\r\nvar G__21049 = seq__20770_21044;\r\nvar G__21050 = chunk__20771_21045;\r\nvar G__21051 = count__20772_21046;\r\nvar G__21052 = (i__20773_21047 + (1));\r\nseq__20770_21044 = G__21049;\r\nchunk__20771_21045 = G__21050;\r\ncount__20772_21046 = G__21051;\r\ni__20773_21047 = G__21052;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___21053 = cljs.core.seq(seq__20770_21044);\r\nif(temp__5753__auto___21053){\r\nvar seq__20770_21054__$1 = temp__5753__auto___21053;\r\nif(cljs.core.chunked_seq_QMARK_(seq__20770_21054__$1)){\r\nvar c__4649__auto___21055 = cljs.core.chunk_first(seq__20770_21054__$1);\r\nvar G__21056 = cljs.core.chunk_rest(seq__20770_21054__$1);\r\nvar G__21057 = c__4649__auto___21055;\r\nvar G__21058 = cljs.core.count(c__4649__auto___21055);\r\nvar G__21059 = (0);\r\nseq__20770_21044 = G__21056;\r\nchunk__20771_21045 = G__21057;\r\ncount__20772_21046 = G__21058;\r\ni__20773_21047 = G__21059;\r\ncontinue;\r\n} else {\r\nvar w_21060 = cljs.core.first(seq__20770_21054__$1);\r\ncljs.core._add_watch(w_21060,this$,reagent.ratom.handle_reaction_change);\r\n\r\n\r\nvar G__21061 = cljs.core.next(seq__20770_21054__$1);\r\nvar G__21062 = null;\r\nvar G__21063 = (0);\r\nvar G__21064 = (0);\r\nseq__20770_21044 = G__21061;\r\nchunk__20771_21045 = G__21062;\r\ncount__20772_21046 = G__21063;\r\ni__20773_21047 = G__21064;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nvar seq__20804 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\r\nvar chunk__20805 = null;\r\nvar count__20806 = (0);\r\nvar i__20807 = (0);\r\nwhile(true){\r\nif((i__20807 < count__20806)){\r\nvar w = chunk__20805.cljs$core$IIndexed$_nth$arity$2(null,i__20807);\r\ncljs.core._remove_watch(w,this$);\r\n\r\n\r\nvar G__21065 = seq__20804;\r\nvar G__21066 = chunk__20805;\r\nvar G__21067 = count__20806;\r\nvar G__21068 = (i__20807 + (1));\r\nseq__20804 = G__21065;\r\nchunk__20805 = G__21066;\r\ncount__20806 = G__21067;\r\ni__20807 = G__21068;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto__ = cljs.core.seq(seq__20804);\r\nif(temp__5753__auto__){\r\nvar seq__20804__$1 = temp__5753__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__20804__$1)){\r\nvar c__4649__auto__ = cljs.core.chunk_first(seq__20804__$1);\r\nvar G__21069 = cljs.core.chunk_rest(seq__20804__$1);\r\nvar G__21070 = c__4649__auto__;\r\nvar G__21071 = cljs.core.count(c__4649__auto__);\r\nvar G__21072 = (0);\r\nseq__20804 = G__21069;\r\nchunk__20805 = G__21070;\r\ncount__20806 = G__21071;\r\ni__20807 = G__21072;\r\ncontinue;\r\n} else {\r\nvar w = cljs.core.first(seq__20804__$1);\r\ncljs.core._remove_watch(w,this$);\r\n\r\n\r\nvar G__21073 = cljs.core.next(seq__20804__$1);\r\nvar G__21074 = null;\r\nvar G__21075 = (0);\r\nvar G__21076 = (0);\r\nseq__20804 = G__21073;\r\nchunk__20805 = G__21074;\r\ncount__20806 = G__21075;\r\ni__20807 = G__21076;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\r\nvar self__ = this;\r\nvar this$ = this;\r\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\r\nreturn this$._run(true);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\r\nvar self__ = this;\r\nvar this$ = this;\r\ntry{(self__.caught = null);\r\n\r\nreturn reagent.ratom.deref_capture(f__$1,this$);\r\n}catch (e20814){var e = e20814;\r\n(self__.state = e);\r\n\r\n(self__.caught = e);\r\n\r\nreturn (self__.dirty_QMARK_ = false);\r\n}}));\r\n\r\n(reagent.ratom.Reaction.prototype._run = (function (check){\r\nvar self__ = this;\r\nvar this$ = this;\r\nvar oldstate = self__.state;\r\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\r\nif(self__.nocache_QMARK_){\r\n} else {\r\n(self__.state = res);\r\n\r\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\r\n} else {\r\nreagent.ratom.notify_w(this$,oldstate,res);\r\n}\r\n}\r\n\r\nreturn res;\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__20825){\r\nvar self__ = this;\r\nvar map__20826 = p__20825;\r\nvar map__20826__$1 = cljs.core.__destructure_map(map__20826);\r\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20826__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\r\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20826__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\r\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20826__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\r\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20826__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\r\nvar this$ = this;\r\nif((!((auto_run__$1 == null)))){\r\n(this$.auto_run = auto_run__$1);\r\n} else {\r\n}\r\n\r\nif((!((on_set == null)))){\r\n(this$.on_set = on_set);\r\n} else {\r\n}\r\n\r\nif((!((on_dispose == null)))){\r\n(this$.on_dispose = on_dispose);\r\n} else {\r\n}\r\n\r\nif((!((no_cache == null)))){\r\nreturn (this$.nocache_QMARK_ = no_cache);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Reaction\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn goog.getUid(this$__$1);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\r\nvar self__ = this;\r\nvar o__$1 = this;\r\nreturn (o__$1 === other);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar s = self__.state;\r\nvar wg = self__.watching;\r\n(self__.watching = null);\r\n\r\n(self__.state = null);\r\n\r\n(self__.auto_run = null);\r\n\r\n(self__.dirty_QMARK_ = true);\r\n\r\nvar seq__20831_21079 = cljs.core.seq(cljs.core.set(wg));\r\nvar chunk__20832_21080 = null;\r\nvar count__20833_21081 = (0);\r\nvar i__20834_21082 = (0);\r\nwhile(true){\r\nif((i__20834_21082 < count__20833_21081)){\r\nvar w_21096 = chunk__20832_21080.cljs$core$IIndexed$_nth$arity$2(null,i__20834_21082);\r\ncljs.core._remove_watch(w_21096,this$__$1);\r\n\r\n\r\nvar G__21097 = seq__20831_21079;\r\nvar G__21098 = chunk__20832_21080;\r\nvar G__21099 = count__20833_21081;\r\nvar G__21100 = (i__20834_21082 + (1));\r\nseq__20831_21079 = G__21097;\r\nchunk__20832_21080 = G__21098;\r\ncount__20833_21081 = G__21099;\r\ni__20834_21082 = G__21100;\r\ncontinue;\r\n} else {\r\nvar temp__5753__auto___21101 = cljs.core.seq(seq__20831_21079);\r\nif(temp__5753__auto___21101){\r\nvar seq__20831_21102__$1 = temp__5753__auto___21101;\r\nif(cljs.core.chunked_seq_QMARK_(seq__20831_21102__$1)){\r\nvar c__4649__auto___21103 = cljs.core.chunk_first(seq__20831_21102__$1);\r\nvar G__21104 = cljs.core.chunk_rest(seq__20831_21102__$1);\r\nvar G__21105 = c__4649__auto___21103;\r\nvar G__21106 = cljs.core.count(c__4649__auto___21103);\r\nvar G__21107 = (0);\r\nseq__20831_21079 = G__21104;\r\nchunk__20832_21080 = G__21105;\r\ncount__20833_21081 = G__21106;\r\ni__20834_21082 = G__21107;\r\ncontinue;\r\n} else {\r\nvar w_21108 = cljs.core.first(seq__20831_21102__$1);\r\ncljs.core._remove_watch(w_21108,this$__$1);\r\n\r\n\r\nvar G__21109 = cljs.core.next(seq__20831_21102__$1);\r\nvar G__21110 = null;\r\nvar G__21111 = (0);\r\nvar G__21112 = (0);\r\nseq__20831_21079 = G__21109;\r\nchunk__20832_21080 = G__21110;\r\ncount__20833_21081 = G__21111;\r\ni__20834_21082 = G__21112;\r\ncontinue;\r\n}\r\n} else {\r\n}\r\n}\r\nbreak;\r\n}\r\n\r\nif((!((this$__$1.on_dispose == null)))){\r\nthis$__$1.on_dispose(s);\r\n} else {\r\n}\r\n\r\nvar temp__5757__auto__ = this$__$1.on_dispose_arr;\r\nif((temp__5757__auto__ == null)){\r\nreturn null;\r\n} else {\r\nvar a = temp__5757__auto__;\r\nvar n__4706__auto__ = a.length;\r\nvar i = (0);\r\nwhile(true){\r\nif((i < n__4706__auto__)){\r\nvar fexpr__20839_21113 = (a[i]);\r\n(fexpr__20839_21113.cljs$core$IFn$_invoke$arity$1 ? fexpr__20839_21113.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__20839_21113.call(null,this$__$1));\r\n\r\nvar G__21114 = (i + (1));\r\ni = G__21114;\r\ncontinue;\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5755__auto__ = this$__$1.on_dispose_arr;\r\nif((temp__5755__auto__ == null)){\r\nreturn (this$__$1.on_dispose_arr = [f__$1]);\r\n} else {\r\nvar a = temp__5755__auto__;\r\nreturn a.push(f__$1);\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\n\r\nvar oldval = self__.state;\r\n(self__.state = newval);\r\n\r\na__$1.on_set(oldval,newval);\r\n\r\nreagent.ratom.notify_w(a__$1,oldval,newval);\r\n\r\nreturn newval;\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20840 = a__$1._peek_at();\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__20840) : f__$1.call(null,G__20840));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20841 = a__$1._peek_at();\r\nvar G__20842 = x;\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__20841,G__20842) : f__$1.call(null,G__20841,G__20842));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__20843 = a__$1._peek_at();\r\nvar G__20844 = x;\r\nvar G__20845 = y;\r\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__20843,G__20844,G__20845) : f__$1.call(null,G__20843,G__20844,G__20845));\r\n})());\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\r\n\r\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\r\n\r\nreturn this$__$1._run(false);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\r\nreagent.ratom.remove_w(this$__$1,key);\r\n\r\nif((((!(was_empty))) && (((cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))))){\r\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n\r\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar temp__5757__auto___21115 = self__.caught;\r\nif((temp__5757__auto___21115 == null)){\r\n} else {\r\nvar e_21116 = temp__5757__auto___21115;\r\nthrow e_21116;\r\n}\r\n\r\nvar non_reactive_21117 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\r\nif(non_reactive_21117){\r\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\r\n} else {\r\n}\r\n\r\nif(((non_reactive_21117) && ((self__.auto_run == null)))){\r\nif(self__.dirty_QMARK_){\r\nvar oldstate_21118 = self__.state;\r\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\r\n\r\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_21118,self__.state)))){\r\n} else {\r\nreagent.ratom.notify_w(this$__$1,oldstate_21118,self__.state);\r\n}\r\n} else {\r\n}\r\n} else {\r\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\r\n\r\nif(self__.dirty_QMARK_){\r\nthis$__$1._run(false);\r\n} else {\r\n}\r\n}\r\n\r\nreturn self__.state;\r\n}));\r\n\r\n(reagent.ratom.Reaction.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.Reaction.cljs$lang$type = true);\r\n\r\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\r\n\r\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\r\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/Reaction\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Reaction.\r\n */\r\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\r\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\r\n});\r\n\r\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\r\nwhile(true){\r\nvar q = reagent.ratom.rea_queue;\r\nif((q == null)){\r\nreturn null;\r\n} else {\r\n(reagent.ratom.rea_queue = null);\r\n\r\nvar n__4706__auto___21122 = q.length;\r\nvar i_21123 = (0);\r\nwhile(true){\r\nif((i_21123 < n__4706__auto___21122)){\r\nvar r_21124 = (q[i_21123]);\r\nr_21124._queued_run();\r\n\r\nvar G__21125 = (i_21123 + (1));\r\ni_21123 = G__21125;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\ncontinue;\r\n}\r\nbreak;\r\n}\r\n});\r\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\r\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\r\nvar args__4835__auto__ = [];\r\nvar len__4829__auto___21126 = arguments.length;\r\nvar i__4830__auto___21127 = (0);\r\nwhile(true){\r\nif((i__4830__auto___21127 < len__4829__auto___21126)){\r\nargs__4835__auto__.push((arguments[i__4830__auto___21127]));\r\n\r\nvar G__21128 = (i__4830__auto___21127 + (1));\r\ni__4830__auto___21127 = G__21128;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4836__auto__ = ((((1) < args__4835__auto__.length))?(new cljs.core.IndexedSeq(args__4835__auto__.slice((1)),(0),null)):null);\r\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4836__auto__);\r\n});\r\n\r\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__20856){\r\nvar map__20857 = p__20856;\r\nvar map__20857__$1 = cljs.core.__destructure_map(map__20857);\r\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20857__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\r\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20857__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\r\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20857__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\r\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\r\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\r\n\r\nreturn reaction;\r\n}));\r\n\r\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq20853){\r\nvar G__20854 = cljs.core.first(seq20853);\r\nvar seq20853__$1 = cljs.core.next(seq20853);\r\nvar self__4816__auto__ = this;\r\nreturn self__4816__auto__.cljs$core$IFn$_invoke$arity$variadic(G__20854,seq20853__$1);\r\n}));\r\n\r\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\r\n/**\r\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\r\n * creates a new Reaction that watches those atoms and calls `run` whenever\r\n * any of those watched ratoms change.  Also, the new reaction is added to\r\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\r\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\r\n * are any options accepted by a Reaction and will be set on the newly created\r\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\r\n */\r\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\r\nvar r = reagent.ratom.temp_reaction;\r\nvar res = reagent.ratom.deref_capture(f,r);\r\nif((r.watching == null)){\r\n} else {\r\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\r\n\r\nr._set_opts(opts);\r\n\r\n(r.f = f);\r\n\r\n(r.auto_run = (function (){\r\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\r\n}));\r\n\r\ngoog.object.set(obj,key,r);\r\n}\r\n\r\nreturn res;\r\n});\r\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\r\nvar ctx = ({});\r\nvar res = reagent.ratom.in_context(ctx,f);\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IWatchable}\r\n * @implements {cljs.core.IAtom}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IReset}\r\n * @implements {cljs.core.ISwap}\r\n * @implements {cljs.core.IDeref}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n*/\r\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\r\nthis.state = state;\r\nthis.callback = callback;\r\nthis.changed = changed;\r\nthis.watches = watches;\r\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\r\n});\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\n\r\n\r\nreturn self__.state;\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nvar oldval = self__.state;\r\n(self__.changed = true);\r\n\r\n(self__.state = newval);\r\n\r\nif((!((self__.watches == null)))){\r\nreagent.ratom.notify_w(this$__$1,oldval,newval);\r\n} else {\r\n}\r\n\r\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\r\n\r\nreturn newval;\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((((!(self__.changed))) && (((cljs.core.not(other.changed)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)))))))));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.add_w(this$__$1,key,f);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\r\nvar self__ = this;\r\nvar this$__$1 = this;\r\nreturn reagent.ratom.remove_w(this$__$1,key);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\r\nvar self__ = this;\r\nvar a__$1 = this;\r\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrapper\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\r\n}));\r\n\r\n(reagent.ratom.Wrapper.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\r\n}));\r\n\r\n(reagent.ratom.Wrapper.cljs$lang$type = true);\r\n\r\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\r\n\r\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4461__auto__,writer__4462__auto__,opt__4463__auto__){\r\nreturn cljs.core._write(writer__4462__auto__,\"reagent.ratom/Wrapper\");\r\n}));\r\n\r\n/**\r\n * Positional factory function for reagent.ratom/Wrapper.\r\n */\r\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\r\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\r\n});\r\n\r\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\r\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.core","~$cljs.core","~$clojure.tools.reader.reader-types","~$cljs.tools.reader.reader-types","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^J"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",20,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^Q",["^R",[["~$&","^T"]]],"^7",8,"^8",1,"^6","reagent/ratom.clj","^U","~$reagent.ratom/reaction","^W","^X","^Y",true],"~$run!",["^ ","^Q",["^R",[["~$&","^T"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",12,"^8",1,"^6","reagent/ratom.clj","^U","~$reagent.ratom/run!","^W","^X","^Y",true]],"^U","^X","~:op","^W","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^16","~$obj","~$goog.object","^C","^C","~$goog","^19","^18","^18","~$reagent.impl.batching","^1:","~$clojure.set","^1;","~$util","^16","~$s","^1;","~$batch","^1:","^J","^J"],"~:seen",["^M",["~:require","~:require-macros"]],"~:uses",null,"^1@",["^ ","^X","^X","^J","^J","^C","^C"],"~:form",["^R",["~$ns","^X",["^R",["~:refer-clojure","~:exclude",["^N"]]],["^R",["^1@",["^X"]]],["^R",["^1?",["^16","~:as","^1<"],["^J","~:refer-macros",["^I","^K"]],["^1:","^1F","^1="],["^1;","^1F","~$s"],["^18","^1F","^17"]]]]],"~:flags",["^ ","^1@",["^M",[]],"^1?",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^19","^C","^16","^J","^1:","^1;","^18"]],"^W","^X","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1676757607560,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare flush!)\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [^clj r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s v]\n  (-write writer (str \"#object[reagent.ratom.\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] v) writer opts)\n  (-write writer \"]\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RAtom\" {:val (-deref a)}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track\" {:val (-deref a)\n                                                    :f f})))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RCursor\" {:val (-deref a)\n                                                      :path path}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Reaction\" {:val (-deref a)}))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (let [^Reaction r (aget q i)]\n            (._queued-run r)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [this ^clj other]\n    (and (instance? Wrapper other)\n         ;; If either of the wrappers have changed, equality\n         ;; cannot be relied on.\n         (not changed)\n         (not (.-changed other))\n         (= state (.-state other))\n         (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrapper\" {:val (-deref a)})))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.ratom/debug","reagent.ratom/generation","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","and__4221__auto__","i","or__4223__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__20337","*ratom-context*-temp-val__20338","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5757__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__20359#","p2__20360#","p3__20361#","cljs.core/reduce-kv","G__20362","k","reagent.ratom/pr-atom","writer","opts","s","v","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__20366","*ratom-context*-temp-val__20367","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__20417","reagent.ratom/atom","args-arr__4850__auto__","len__4829__auto__","i__4830__auto__","argseq__4851__auto__","cljs.core/IndexedSeq","p__20429","map__20430","cljs.core/--destructure-map","cljs.core.get","seq20415","G__20416","cljs.core/first","cljs.core/next","self__4816__auto__","reagent.ratom/cached-reaction","destroy","m","cljs.core/-deref","G__20431","G__20432","G__20433","reagent.ratom/make-reaction","cljs.core/dec","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5755__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__20439","G__20440","G__20441","args__4835__auto__","argseq__4836__auto__","reagent.ratom/track","seq20444","G__20445","reagent.ratom/track!","seq20446","G__20447","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__20460","*ratom-context*-temp-val__20461","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__20486","G__20487","G__20488","G__20489","G__20490","G__20491","reagent.ratom/cursor","src","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","reagent$ratom$IDisposable$dispose_BANG_$dyn","x__4521__auto__","m__4522__auto__","reagent.ratom/dispose!","goog/typeOf","m__4519__auto__","cljs.core/missing-protocol","reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent$ratom$IRunnable$run$dyn","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__20825","map__20826","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","oldval","G__20840","G__20841","G__20842","G__20843","G__20844","G__20845","*ratom-context*-orig-val__20764","*ratom-context*-temp-val__20765","cljs.core/set","seq__20770","cljs.core/seq","chunk__20771","count__20772","i__20773","temp__5753__auto__","cljs.core/chunked-seq?","c__4649__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__20804","chunk__20805","count__20806","i__20807","cljs.core/-remove-watch","e20814","e","check","on-set","on-dispose","no-cache","reagent.ratom/flush!","non-reactive","wg","seq__20831","chunk__20832","count__20833","i__20834","n__4706__auto__","fexpr__20839","q","reagent.impl.batching/ratom-flush","p__20856","map__20857","seq20853","G__20854","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^M",["~$cljs.core/--destructure-map","~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$cljs.core/=","~$cljs.core/dec","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/IndexedSeq","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$goog/typeOf","~$reagent.ratom/arr-len","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/apply","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.ratom/RCursor","~$cljs.core/set","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$cljs.core/get-in","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$reagent.ratom/arr-eq","~$cljs.core/get","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$cljs.core/-nth","~$clojure.set/difference","~$cljs.core/-remove-watch","~$cljs.core/missing-protocol","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$cljs.core/reduce-kv","~$reagent.ratom/RAtom","~$cljs.core/first","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1L","reagent/impl/batching.cljs"],["ce6f8f6440a38b5c1f0e94d72353c02f59f66557","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^19","^C","^J","^16"]]],["^1L","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","~$goog.dom.HtmlElement"]]],["^1L","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","~$goog.array","~$goog.asserts"]]],["^1L","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4<","~$goog.labs.userAgent.util","^18","~$goog.string.internal"]]],["^1L","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4=","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4?"]]],["^1L","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4="]]],["^1L","reagent/impl/util.cljs"],["ce6f8f6440a38b5c1f0e94d72353c02f59f66557","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^C","~$clojure.string","~$clojure.walk","^18","^J"]]],["^1L","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","reagent/ratom.cljs"],["ce6f8f6440a38b5c1f0e94d72353c02f59f66557","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^C","^16","^J","^1:","^1;","^18"]]],["^1L","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4="]]],"~:SHADOW-TIMESTAMP",[1656456277000,1656456277000,1656456276000],["^1L","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4=","~$goog.reflect"]]],["^1L","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4=","~$goog.fs.blob","^4@","~$goog.html.SafeScript","~$goog.html.trustedtypes","^4B","^4C","^4D","^4E"]]],["^1L","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4<","^4=","~$goog.html.SafeUrl","^4D","^4E","^4?"]]],["^1L","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4=","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4K","~$goog.html.SafeStyle","^4M","^4A","~$goog.html.uncheckedconversions","^4D","^4?"]]],["^1L","clojure/walk.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^C"]]],["^1L","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1L","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4<","^4=","~$goog.dom.TagName","~$goog.dom.tags","^4K","^4Q","~$goog.html.SafeStyleSheet","^4M","^4A","^4L","^4B","^4C","~$goog.labs.userAgent.browser","^18","^4D","^4E","^4?"]]],["^1L","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^18"]]],["^1L","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4<"]]],["^1L","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1L","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4<","^4=","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1L","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",[]]],["^1L","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4<","^18"]]],["^1L","clojure/string.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^C","^4[","~$goog.string.StringBuffer"]]],["^1L","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","~$goog.dom.safe","^4R","^4D","^4?"]]],["^1L","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4?"]]],["^1L","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4<","^4=","^4O","~$goog.math"]]],["^1L","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4=","^4P","^4K","^4Q","^4W","^4M","^4A","^4D","^4?","^4B"]]],["^1L","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19"]]],["^1L","cljs/core.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","~$goog.math.Long","~$goog.math.Integer","^4[","^18","^4<","~$goog.Uri","^55"]]],["^1L","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4D","^4E","^4L","^4="]]],["^1L","reagent/debug.cljs"],["ce6f8f6440a38b5c1f0e94d72353c02f59f66557","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^C"]]],["^1L","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4D","^4Q","^4E","^4<","^18","^4=","^4?"]]],["^1L","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4I"]]],["^1L","clojure/set.cljs"],["645bb313ccc09b5f580336ae2a5f49212af9e8ea","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^C"]]],["^1L","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4=","^4["]]],["^1L","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^47",["^ ","^48",null,"^49",["^M",[]],"^4:",["^19","^4=","^4E"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/tagged_literals.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/env.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/errors.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/impl.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/default_data_readers.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes/and_or.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64_vlq.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer/passes.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/reagent/reagent/1.1.0/reagent-1.1.0.jar!/reagent/ratom.clj",1648394140000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/externs.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/data.json/2.3.1/data.json-2.3.1.jar!/clojure/data/json.clj",1656456275000,"jar:file:/C:/Users/porko/.m2/repository/reagent/reagent/1.1.0/reagent-1.1.0.jar!/reagent/interop.clj",1648394140000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/analyzer.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/impl/inspect.clj",1648318251000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/source_map/base64.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/core.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/reagent/reagent/1.1.0/reagent-1.1.0.jar!/reagent/debug.clj",1648394140000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/compiler.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/instant.clj",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/util.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojurescript/1.10.866/clojurescript-1.10.866.jar!/cljs/js_deps.cljc",1656456276000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1647753114000,"jar:file:/C:/Users/porko/.m2/repository/org/clojure/tools.reader/1.3.5/tools.reader-1.3.5.jar!/clojure/tools/reader/reader_types.clj",1648318251000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"~:shadow/protocol-prefixes",["^M",["reagent$ratom$IReactiveAtom$","reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^H",["^ ","^I","^J","^K","^J"],"^L",["^M",["^N"]],"^O",["^ ","^P",["^ ","^Q",["^R",[["^S","~$&","^T"]]],"^7",20,"^8",1,"^6","reagent/ratom.clj","^U","^V","^W","^X","^Y",true],"^Z",["^ ","^Q",["^R",[["~$&","^T"]]],"^7",8,"^8",1,"^6","reagent/ratom.clj","^U","^[","^W","^X","^Y",true],"^10",["^ ","^Q",["^R",[["~$&","^T"]]],"^11","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",12,"^8",1,"^6","reagent/ratom.clj","^U","^12","^W","^X","^Y",true]],"~:shadow/js-access-properties",["^M",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^U","^X","^14",null,"^15",["^ ","^16","^16","^17","^18","^C","^C","^19","^19","^18","^18","^1:","^1:","^1;","^1;","^1<","^16","~$s","^1;","^1=","^1:","^J","^J"],"^1>",["^M",["^1?","^1@"]],"^1A",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",107,"^8",8,"^9",107,"^:",15,"~:private",true,"^Q",["^R",["~$quote",["^R",[["~$a","~$writer","~$opts","~$s","~$v"]]]]]],"^65",true,"^U","^44","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^R",[["~$a","^67","^68","~$s","~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^8",1,"~:variadic?",false,"^7",107,"~:ret-tag","~$any","^9",107,"~:max-fixed-arity",5,"~:fn-var",true,"^Q",["^R",["^66",["^R",[["~$a","^67","^68","~$s","~$v"]]]]]],"~$->RCursor",["^ ","^64",null,"^5",["^ ","~:protocols",["^M",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2R","^3J","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",248,"^9",248,"^Q",["^R",["^66",["^R",[["~$ratom","~$path","^Z","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/RCursor."],"^6B",["^M",["^6C","^6D","^6E","^6F","^6G","^6H","^6I","^2R","^3J","^6J"]],"^U","^42","^6","reagent/ratom.cljs","^:",17,"^69",["^R",[["^6M","^6N","^Z","^6O","^6P"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^6K","^6L","^7",248,"^6=","^2M","^9",248,"^6?",5,"^6@",true,"^Q",["^R",["^66",["^R",[["^6M","^6N","^Z","^6O","^6P"]]]]],"^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",65,"^8",8,"^9",65,"^:",29,"^65",true,"^Q",["^R",["^66",["^R",[["~$derefed"]]]]],"^11","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^65",true,"^U","^2E","^6","reagent/ratom.cljs","^:",29,"^69",["^R",[["^6S"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",65,"^6=",["^M",[null,"^6>","~$clj-nil"]],"^9",65,"^6?",1,"^6@",true,"^Q",["^R",["^66",["^R",[["^6S"]]]]],"^11","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",117,"^8",8,"^9",117,"^:",19,"^65",true,"^Q",["^R",["^66",["^R",[["~$r"]]]]]],"^65",true,"^U","^2L","^6","reagent/ratom.cljs","^:",19,"^69",["^R",[["~$r"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",117,"^6=","^6>","^9",117,"^6?",1,"^6@",true,"^Q",["^R",["^66",["^R",[["~$r"]]]]]],"~$in-context",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",38,"^8",8,"^9",38,"^:",18,"^65",true,"^Q",["^R",["^66",["^R",[["^17","~$f"]]]]],"^11","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^65",true,"^U","^3[","^6","reagent/ratom.cljs","^:",18,"^69",["^R",[["^17","~$f"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",38,"^9",38,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["^17","~$f"]]]]],"^11","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",228,"^8",7,"^9",228,"^:",17,"^Q",["^R",["^66",["^R",[["~$f","~$args"]]]]]],"^U","^3M","^6","reagent/ratom.cljs","^:",17,"^69",["^R",[["~$f","^6X"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",228,"^6=","^3I","^9",228,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f","^6X"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^6B",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^2R","~$cljs.core/IMeta","^3J","^6J","~$cljs.core/IWithMeta"]],"^U","^3T","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",127,"~:record",false,"^9",127,"~:tag","~$function","^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^6[","^3J","^6J","^70"]]],"^N",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",172,"^8",7,"^9",172,"^:",11,"^Q",["^R",["^66",["^R",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^11","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^6<",true,"~:fixed-arity",1,"^6?",1,"^69",[["~$x"]],"^Q",["^R",[["~$x"],["~$x","~$&",["^ ","^75",["^76","^77"]]]]],"^6;",["^R",[null,null]]]],"^U","^3W","^6","reagent/ratom.cljs","^:",11,"^78",["^ ","^6<",true,"^79",1,"^6?",1,"^69",[["~$x"]],"^Q",["^R",[["~$x"],["~$x","~$&",["^ ","^75",["^76","^77"]]]]],"^6;",["^R",[null,null]]],"^69",[["~$x"]],"^6:",null,"^79",1,"^6;",["^R",[null,null]],"^8",1,"^6<",true,"~:methods",[["^ ","^79",1,"^6<",false,"^73","^3T"],["^ ","^79",1,"^6<",true,"^73","^3T"]],"^7",172,"^9",172,"^6?",1,"^6@",true,"^Q",["^R",[["~$x"],["~$x","~$&",["^ ","^75",["^76","^77"]]]]],"^11","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",91,"^8",8,"^9",91,"^:",16,"^65",true,"^Q",["^R",["^66",["^R",[["~$this","~$old","~$new"]]]]]],"^65",true,"^U","^33","^6","reagent/ratom.cljs","^:",16,"^69",["^R",[["^7<","^7=","^7>"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",91,"^6=","^6T","^9",91,"^6?",3,"^6@",true,"^Q",["^R",["^66",["^R",[["^7<","^7=","^7>"]]]]]],"~$->Reaction",["^ ","^64",null,"^5",["^ ","^6B",["^M",["^6C","^6D","^6E","^6F","^6G","^6H","^6I","^2R","^32","^3G","^3J","^6J"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^6K","^6L","^7",356,"^9",356,"^Q",["^R",["^66",["^R",[["~$f","^6O","~$dirty?","~$nocache?","~$watching","^6P","~$auto-run","~$caught"]]]]],"^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/Reaction."],"^6B",["^M",["^6C","^6D","^6E","^6F","^6G","^6H","^6I","^2R","^32","^3G","^3J","^6J"]],"^U","^2[","^6","reagent/ratom.cljs","^:",18,"^69",["^R",[["~$f","^6O","^7@","^7A","^7B","^6P","^7C","^7D"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^6K","^6L","^7",356,"^6=","^3R","^9",356,"^6?",8,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f","^6O","^7@","^7A","^7B","^6P","^7C","^7D"]]]]],"^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",603,"^8",7,"^9",603,"^:",19,"^Q",["^R",["^66",["^R",[["~$value","~$callback-fn","^6X"]]]]]],"^U","^2O","^6","reagent/ratom.cljs","^:",19,"^69",["^R",[["^7F","^7G","^6X"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",603,"^6=","^2W","^9",603,"^6?",3,"^6@",true,"^Q",["^R",["^66",["^R",[["^7F","^7G","^6X"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",125,"~:protocol-info",["^ ","^7:",["^ "]],"^9",125,"~:sigs",["^ "],"~:jsdoc",["^R",["@interface"]]],"^7I",true,"^U","^2R","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",125,"^7J",["^ ","^7:",["^ "]],"~:info",null,"^9",125,"^73","^6>","^7K",["^ "],"~:impls",["^M",["^2M","^3I","^3R","^3T"]],"^7L",["^R",["@interface"]]],"~$track",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",238,"^8",7,"^9",238,"^:",12,"^Q",["^R",["^66",["^R",[["~$f","~$&","^6X"]]]]],"^78",["^ ","^6<",true,"^79",1,"^6?",1,"^69",[["^R",["~$f","^6X"]]],"^Q",["^R",[["~$f","~$&","^6X"]]],"^6;",["^R",[null]]]],"^U","^2S","^6","reagent/ratom.cljs","^:",12,"^78",["^ ","^6<",true,"^79",1,"^6?",1,"^69",[["^R",["~$f","^6X"]]],"^Q",["^R",[["~$f","~$&","^6X"]]],"^6;",["^R",[null]]],"^69",[["^R",["~$f","^6X"]]],"^6:",null,"^79",1,"^6;",["^R",[null]],"^8",1,"^6<",true,"^7:",[["^ ","^79",1,"^6<",true,"^73","^3I"]],"^7",238,"^6=","^6>","^9",238,"^6?",1,"^6@",true,"^Q",["^R",[["~$f","~$&","^6X"]]]],"~$dispose!",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",338,"^8",4,"^9",338,"^:",12,"~:protocol","^3G","^11",null,"^Q",["^R",["^66",["^R",[["^7<"]]]]]],"^7Q","^3G","^U","^2Z","^6","reagent/ratom.cljs","^:",12,"^69",["^R",[["^7<"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",337,"^6=","^6>","^9",338,"^6?",1,"^6@",true,"^Q",["^R",["^66",["^R",[["^7<"]]]]],"^11",null],"~$arr-eq",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",29,"^8",17,"^9",29,"^:",23,"^73","~$boolean","^65",true,"^Q",["^R",["^66",["^R",[["~$x","~$y"]]]]]],"^65",true,"^U","^39","^6","reagent/ratom.cljs","^:",23,"^69",["^R",[["~$x","~$y"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",29,"^6=","^7S","^9",29,"^6?",2,"^73","^7S","^6@",true,"^Q",["^R",["^66",["^R",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",344,"^8",8,"^9",344,"^:",30,"^65",true,"^Q",["^R",["^66",["^R",[["^7<","~$sender","^7=","^7>"]]]]]],"^65",true,"^U","^3;","^6","reagent/ratom.cljs","^:",30,"^69",["^R",[["^7<","^7U","^7=","^7>"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",344,"^6=","^6>","^9",344,"^6?",4,"^6@",true,"^Q",["^R",["^66",["^R",[["^7<","^7U","^7=","^7>"]]]]]],"~$run",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",342,"^8",4,"^9",342,"^:",7,"^7Q","^32","^11",null,"^Q",["^R",["^66",["^R",[["^7<"]]]]]],"^7Q","^32","^U","^21","^6","reagent/ratom.cljs","^:",7,"^69",["^R",[["^7<"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",341,"^6=","^6>","^9",342,"^6?",1,"^6@",true,"^Q",["^R",["^66",["^R",[["^7<"]]]]],"^11",null],"~$add-on-dispose!",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",339,"^8",4,"^9",339,"^:",19,"^7Q","^3G","^11",null,"^Q",["^R",["^66",["^R",[["^7<","~$f"]]]]]],"^7Q","^3G","^U","^35","^6","reagent/ratom.cljs","^:",19,"^69",["^R",[["^7<","~$f"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",337,"^6=","^6>","^9",339,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["^7<","~$f"]]]]],"^11",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",526,"^8",16,"^9",526,"^:",29,"^65",true],"^65",true,"^U","^3=","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",526,"^9",526,"^73","^3R"],"~$make-track!",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",231,"^8",7,"^9",231,"^:",18,"^Q",["^R",["^66",["^R",[["~$f","^6X"]]]]]],"^U","^20","^6","reagent/ratom.cljs","^:",18,"^69",["^R",[["~$f","^6X"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",231,"^6=","^6>","^9",231,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f","^6X"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",20,"^9",14,"^:",30,"^65",true],"^65",true,"^U","^1[","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",14,"^9",14,"^73","~$number"],"~$run-in-reaction",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",529,"^8",7,"^9",529,"^:",22,"^Q",["^R",["^66",["^R",[["~$f","^17","~$key","^7V","^68"]]]]],"^11","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^U","^3B","^6","reagent/ratom.cljs","^:",22,"^69",["^R",[["~$f","^17","^81","^7V","^68"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",529,"^6=","^6>","^9",529,"^6?",5,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f","^17","^81","^7V","^68"]]]]],"^11","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^7I",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",337,"^7J",["^ ","^7:",["^ ","^7P",[["^7<"]],"^7W",[["^7<","~$f"]]]],"^9",337,"^7K",["^ ","~:dispose!",["^ ","^U","^7P","^Q",["^R",[["^7<"]]],"^11",null],"~:add-on-dispose!",["^ ","^U","^7W","^Q",["^R",[["^7<","~$f"]]],"^11",null]],"^7L",["^R",["@interface"]]],"^7I",true,"^U","^3G","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",337,"^7J",["^ ","^7:",["^ ","^7P",[["^7<"]],"^7W",[["^7<","~$f"]]]],"^7M",null,"^9",337,"^73","^6>","^7K",["^ ","^83",["^ ","^U","^7P","^Q",["^R",[["^7<"]]],"^11",null],"^84",["^ ","^U","^7W","^Q",["^R",[["^7<","~$f"]]],"^11",null]],"^7N",["^M",["^3R"]],"^7L",["^R",["@interface"]]],"~$check-watches",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",76,"^8",8,"^9",76,"^:",21,"^65",true,"^Q",["^R",["^66",["^R",[["^7=","^7>"]]]]]],"^65",true,"^U","^2G","^6","reagent/ratom.cljs","^:",21,"^69",["^R",[["^7=","^7>"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",76,"^9",76,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["^7=","^7>"]]]]]],"~$with-let-destroy",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",325,"^8",7,"^9",325,"^:",23,"^Q",["^R",["^66",["^R",[["~$v"]]]]]],"^U","^2H","^6","reagent/ratom.cljs","^:",23,"^69",["^R",[["~$v"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",325,"^6=",["^M",["^6>","^6T"]],"^9",325,"^6?",1,"^6@",true,"^Q",["^R",["^66",["^R",[["~$v"]]]]]],"~$make-reaction",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",517,"^8",7,"^9",517,"^:",20,"^Q",["^R",["^66",["^R",[["~$f","~$&",["^ ","^75",["^7C","~$on-set","~$on-dispose"]]]]]]],"^78",["^ ","^6<",true,"^79",1,"^6?",1,"^69",[["^R",["~$f",["^ ","^75",["^7C","^88","^89"]]]]],"^Q",["^R",[["~$f","~$&",["^ ","^75",["^7C","^88","^89"]]]]],"^6;",["^R",[null]]]],"^U","^31","^6","reagent/ratom.cljs","^:",20,"^78",["^ ","^6<",true,"^79",1,"^6?",1,"^69",[["^R",["~$f",["^ ","^75",["^7C","^88","^89"]]]]],"^Q",["^R",[["~$f","~$&",["^ ","^75",["^7C","^88","^89"]]]]],"^6;",["^R",[null]]],"^69",[["^R",["~$f",["^ ","^75",["^7C","^88","^89"]]]]],"^6:",null,"^79",1,"^6;",["^R",[null]],"^8",1,"^6<",true,"^7:",[["^ ","^79",1,"^6<",true,"^73","^3R"]],"^7",517,"^6=","^6>","^9",517,"^6?",1,"^6@",true,"^Q",["^R",[["~$f","~$&",["^ ","^75",["^7C","^88","^89"]]]]]],"~$add-w",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",81,"^8",8,"^9",81,"^:",13,"^65",true,"^Q",["^R",["^66",["^R",[["^7<","^81","~$f"]]]]]],"^65",true,"^U","^3N","^6","reagent/ratom.cljs","^:",13,"^69",["^R",[["^7<","^81","~$f"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",81,"^9",81,"^6?",3,"^6@",true,"^Q",["^R",["^66",["^R",[["^7<","^81","~$f"]]]]]],"~$Reaction",["^ ","^6Z",8,"^6B",["^M",["^6C","^6D","^6E","^6F","^6G","^6H","^6I","^2R","^32","^3G","^3J","^6J"]],"^U","^3R","^6","reagent/ratom.cljs","^:",18,"^71",true,"^8",10,"^7",356,"^72",false,"^9",356,"^73","^74","^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^3J","^6J"]]],"~$flush!",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",505,"^8",7,"^9",505,"^:",13,"^Q",["^R",["^66",["^R",[[]]]]]],"^U","^2D","^6","reagent/ratom.cljs","^:",13,"^69",["^R",[[]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",505,"^6=","^6T","^9",505,"^6?",0,"^6@",true,"^Q",["^R",["^66",["^R",[[]]]]]],"~$RCursor",["^ ","^6Z",5,"^6B",["^M",["^6C","^6D","^6E","^6F","^6G","^6H","^6I","^2R","^3J","^6J"]],"^U","^2M","^6","reagent/ratom.cljs","^:",17,"^71",true,"^8",10,"^7",248,"^72",false,"^9",248,"^73","^74","^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^3J","^6J"]]],"~$cached-reaction",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",8,"^9",182,"^:",23,"^65",true,"^Q",["^R",["^66",["^R",[["~$f","~$o","~$k","^17","~$destroy"]]]]]],"^65",true,"^U","^2V","^6","reagent/ratom.cljs","^:",23,"^69",["^R",[["~$f","~$o","~$k","^17","^8?"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",182,"^6=","^6>","^9",182,"^6?",5,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f","~$o","~$k","^17","^8?"]]]]]],"~$Track",["^ ","^6Z",3,"^6B",["^M",["^6E","^6F","^2R","^3J","^6J"]],"^U","^3I","^6","reagent/ratom.cljs","^:",15,"^71",true,"^8",10,"^7",206,"^72",false,"^9",206,"^73","^74","^6Q",["^M",["^6E","^6F","^3J","^6J"]]],"~$debug",["^ ","^U","^2K","^6","reagent/ratom.cljs","^7",13,"^8",1,"^9",13,"^:",24,"^73","^7S","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",19,"^9",13,"^:",24,"^73","^7S"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",20,"^9",15,"^:",28,"^65",true],"^65",true,"^U","^3Q","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",15,"^9",15,"^73","~$cljs.core/Atom"],"~$cursor",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",311,"^8",7,"^9",311,"^:",13,"^Q",["^R",["^66",["^R",[["~$src","^6N"]]]]]],"^U","^3K","^6","reagent/ratom.cljs","^:",13,"^69",["^R",[["^8E","^6N"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",311,"^6=","^2M","^9",311,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["^8E","^6N"]]]]]],"~$Wrapper",["^ ","^6Z",4,"^6B",["^M",["^6C","^6D","^6E","^6H","^6I","^3J","^6J"]],"^U","^2W","^6","reagent/ratom.cljs","^:",17,"^71",true,"^8",10,"^7",556,"^72",false,"^9",556,"^73","^74","^6Q",["^M",["^6C","^6D","^6E","^6H","^6I","^3J","^6J"]]],"~$running",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",7,"^9",23,"^:",14,"^Q",["^R",["^66",["^R",[[]]]]]],"^U","^30","^6","reagent/ratom.cljs","^:",14,"^69",["^R",[[]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",23,"^6=","^7[","^9",23,"^6?",0,"^6@",true,"^Q",["^R",["^66",["^R",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^7I",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",341,"^7J",["^ ","^7:",["^ ","^7V",[["^7<"]]]],"^9",341,"^7K",["^ ","~:run",["^ ","^U","^7V","^Q",["^R",[["^7<"]]],"^11",null]],"^7L",["^R",["@interface"]]],"^7I",true,"^U","^32","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",341,"^7J",["^ ","^7:",["^ ","^7V",[["^7<"]]]],"^7M",null,"^9",341,"^73","^6>","^7K",["^ ","^8I",["^ ","^U","^7V","^Q",["^R",[["^7<"]]],"^11",null]],"^7N",["^M",["^3R"]],"^7L",["^R",["@interface"]]],"~$reactive?",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",17,"^8",16,"^9",17,"^:",25,"^73","^7S","^Q",["^R",["^66",["^R",[[]]]]]],"^U","^3V","^6","reagent/ratom.cljs","^:",25,"^69",["^R",[[]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",17,"^6=","^7S","^9",17,"^6?",0,"^73","^7S","^6@",true,"^Q",["^R",["^66",["^R",[[]]]]]],"~$deref-capture",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",46,"^8",8,"^9",46,"^:",21,"^65",true,"^Q",["^R",["^66",["^R",[["~$f","~$r"]]]]],"^11","Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^65",true,"^U","^3X","^6","reagent/ratom.cljs","^:",21,"^69",["^R",[["~$f","~$r"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",46,"^6=","^6>","^9",46,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f","~$r"]]]]],"^11","Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",20,"^9",115,"^:",29,"^65",true],"^65",true,"^U","^34","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",115,"^9",115,"^73","^6T"],"~$with-let-values",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",329,"^8",7,"^9",329,"^:",22,"^Q",["^R",["^66",["^R",[["^81"]]]]]],"^U","^40","^6","reagent/ratom.cljs","^:",22,"^69",["^R",[["^81"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",329,"^6=",["^M",["^6>","~$array"]],"^9",329,"^6?",1,"^6@",true,"^Q",["^R",["^66",["^R",[["^81"]]]]]],"~$track!",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",242,"^8",7,"^9",242,"^:",13,"^Q",["^R",["^66",["^R",[["~$f","~$&","^6X"]]]]],"^78",["^ ","^6<",true,"^79",1,"^6?",1,"^69",[["^R",["~$f","^6X"]]],"^Q",["^R",[["~$f","~$&","^6X"]]],"^6;",["^R",[null]]]],"^U","^2Y","^6","reagent/ratom.cljs","^:",13,"^78",["^ ","^6<",true,"^79",1,"^6?",1,"^69",[["^R",["~$f","^6X"]]],"^Q",["^R",[["~$f","~$&","^6X"]]],"^6;",["^R",[null]]],"^69",[["^R",["~$f","^6X"]]],"^6:",null,"^79",1,"^6;",["^R",[null]],"^8",1,"^6<",true,"^7:",[["^ ","^79",1,"^6<",true,"^73","^6>"]],"^7",242,"^6=","^6>","^9",242,"^6?",1,"^6@",true,"^Q",["^R",[["~$f","~$&","^6X"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",35,"~:dynamic",true,"~:declared",true],"^U","^3F","^6","reagent/ratom.cljs","^:",35,"^8",1,"^8Q",true,"^7",12,"^8R",true,"^9",12,"^73","^6>"],"~$check-derefs",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",548,"^8",7,"^9",548,"^:",19,"^Q",["^R",["^66",["^R",[["~$f"]]]]]],"^U","^1Z","^6","reagent/ratom.cljs","^:",19,"^69",["^R",[["~$f"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",548,"^6=","~$cljs.core/IVector","^9",548,"^6?",1,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f"]]]]]],"~$remove-w",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",86,"^8",8,"^9",86,"^:",16,"^65",true,"^Q",["^R",["^66",["^R",[["^7<","^81"]]]]]],"^65",true,"^U","^22","^6","reagent/ratom.cljs","^:",16,"^69",["^R",[["^7<","^81"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",86,"^9",86,"^6?",2,"^6@",true,"^Q",["^R",["^66",["^R",[["^7<","^81"]]]]]],"~$->Wrapper",["^ ","^64",null,"^5",["^ ","^6B",["^M",["^6C","^6D","^6E","^6H","^6I","^3J","^6J"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^6K","^6L","^7",556,"^9",556,"^Q",["^R",["^66",["^R",[["^6O","~$callback","~$changed","^6P"]]]]],"^6Q",["^M",["^6C","^6D","^6E","^6H","^6I","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/Wrapper."],"^6B",["^M",["^6C","^6D","^6E","^6H","^6I","^3J","^6J"]],"^U","^3H","^6","reagent/ratom.cljs","^:",17,"^69",["^R",[["^6O","^8W","^8X","^6P"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^6K","^6L","^7",556,"^6=","^2W","^9",556,"^6?",4,"^6@",true,"^Q",["^R",["^66",["^R",[["^6O","^8W","^8X","^6P"]]]]],"^6Q",["^M",["^6C","^6D","^6E","^6H","^6I","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^64",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",16,"^9",26,"^:",23,"^73","^7[","^65",true,"^Q",["^R",["^66",["^R",[["~$x"]]]]]],"^65",true,"^U","^2?","^6","reagent/ratom.cljs","^:",23,"^69",["^R",[["~$x"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^7",26,"^6=","^7[","^9",26,"^6?",1,"^73","^7[","^6@",true,"^Q",["^R",["^66",["^R",[["~$x"]]]]]],"~$->RAtom",["^ ","^64",null,"^5",["^ ","^6B",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^2R","^6[","^3J","^6J","^70"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6K","^6L","^7",127,"^9",127,"^Q",["^R",["^66",["^R",[["^6O","^76","^77","^6P"]]]]],"^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^6[","^3J","^6J","^70"]],"^11","Positional factory function for reagent.ratom/RAtom."],"^6B",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^2R","^6[","^3J","^6J","^70"]],"^U","^25","^6","reagent/ratom.cljs","^:",15,"^69",["^R",[["^6O","^76","^77","^6P"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^6K","^6L","^7",127,"^6=","^3T","^9",127,"^6?",4,"^6@",true,"^Q",["^R",["^66",["^R",[["^6O","^76","^77","^6P"]]]]],"^6Q",["^M",["^6C","^6D","^6E","^6F","^6H","^6I","^6[","^3J","^6J","^70"]],"^11","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^64",null,"^5",["^ ","^6B",["^M",["^6E","^6F","^2R","^3J","^6J"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6K","^6L","^7",206,"^9",206,"^Q",["^R",["^66",["^R",[["~$f","^6X","^Z"]]]]],"^6Q",["^M",["^6E","^6F","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/Track."],"^6B",["^M",["^6E","^6F","^2R","^3J","^6J"]],"^U","^3C","^6","reagent/ratom.cljs","^:",15,"^69",["^R",[["~$f","^6X","^Z"]]],"^6:",null,"^6;",["^R",[null,null]],"^8",1,"^6<",false,"^6K","^6L","^7",206,"^6=","^3I","^9",206,"^6?",3,"^6@",true,"^Q",["^R",["^66",["^R",[["~$f","^6X","^Z"]]]]],"^6Q",["^M",["^6E","^6F","^3J","^6J"]],"^11","Positional factory function for reagent.ratom/Track."]],"^1@",["^ ","^X","^X","^J","^J","^C","^C"],"~:cljs.analyzer/constants",["^ ","^1>",["^M",["~:path","~:on-set","^7D","^7B","^7S","^Z","^8W","^5","~:else","^6N","^6X","~:validator","^6P","^76","~:val","^77","^7@","~:no-cache","^6M","^6O","~:auto-run","~:on-dispose","~:f","^73","~:mutable","^8X","^7C","^7A","~$f"]],"~:order",["^95","^6O","^99","^76","^77","^6P","^5","^94","^93","^98","~:f","~$f","^6X","^Z","^97","^91","^6M","^6N","^92","^96","^7@","^73","^7S","^7A","^7B","^7C","^7D","^8W","^8X"]],"^1H",["^ ","^1@",["^M",[]],"^1?",["^M",[]]],"^1I",["^ "],"^1J",["^19","^C","^16","^J","^1:","^1;","^18"]],"^W","^X","~:ns-specs",["^ "],"~:ns-spec-vars",["^M",[]],"~:compiler-options",["^46",[["^9=","~:static-fns"],true,["^9=","~:shadow-tweaks"],null,["^9=","~:source-map-inline"],null,["^9=","~:elide-asserts"],true,["^9=","~:optimize-constants"],null,["^9=","^1O"],null,["^9=","~:external-config"],null,["^9=","~:tooling-config"],null,["^9=","~:emit-constants"],null,["^9=","~:load-tests"],false,["^9=","~:form-size-threshold"],null,["^9=","~:data-readers"],null,["^9=","~:infer-externs"],"~:auto",["^9=","^1Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^9=","~:fn-invoke-direct"],null,["^9=","~:source-map"],null]]]
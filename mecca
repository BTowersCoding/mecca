#!/bin/bash

echo "MECCA Music Platform"
echo "1 - New song"
echo "2 - Load song"
echo -n "> "
read -n1 launch
echo ""
if [ "$launch" = "1" ]; then
	echo "Name your song:"
	echo -n "> "
	read song
	echo ""
	if [ -w "$song"1.wav ]; then
    		echo "Song exists. Overwrite?"
			read -n1 ans
			echo ""
			if [ "$ans" = "y" ] || [ "$ans" = "Y" ]; then
				mv "$song".mec "$song".mak
			else
				exit 1
			fi
	fi

elif [ "$launch" = "2" ]; then
	echo "Enter song name"
	echo -n "> "
	read song
	echo ""
else
	exit 1
fi

# Define Functions

create_drum_track () {
	echo "Creating drum samples..."
	# hi-hat
	sox -n h.wav synth 0.01 noise fade 0 0.7 0.25 trim 0.0 0.5 &>/dev/null
	sox h.wav hh.wav trim 0.0 0.25
	sox hh.wav hhs.wav trim 0 0.125	
	# snare
	sox -n s.wav synth 0.25 noise fade 0 0.3 0.25 trim 0 0.25 &>/dev/null
	# create pattern and loop it
	sox hh.wav hhs.wav hhs.wav s.wav hhs.wav hhs.wav drums.wav
	sox drums.wav drums.wav drums.wav drums.wav drums2.wav
	sox drums2.wav drums2.wav drums2.wav drums2.wav drums4.wav
	sox drums4.wav drums4.wav drums8.wav
	sox drums8.wav drums8.wav drums16.wav
}

create_notes () {
	if [ ! -f "$note"-"$synth"-half.wav ]; then
		echo "Creating sample "$j"..."
		case "$note" in
			c2) freq=65.41 ;; cs2) freq=69.3 ;; d2) freq=73.42 ;;
			ds2) freq=77.78 ;; e2) freq=82.41 ;; f2) freq=87.31 ;;
			fs2) freq=92.5 ;; g2) freq=98 ;; gs2) freq=103.83 ;;
			a2) freq=110 ;; as2) freq=116.54 ;; b2) freq=123.47 ;;
			c3) freq=130.81 ;; cs3) freq=138.59 ;; d3) freq=146.83 ;;
			ds3) freq=155.56 ;; e3) freq=164.81 ;; f3) freq=174.61 ;;
			fs3) freq=185 ;; g3) freq=196 ;; gs3) freq=207.65 ;;
			a3) freq=220 ;; as3) freq=233.08 ;; b3) freq=246.94 ;;
			c4) freq=261.63 ;; cs4) freq=277.18 ;; d4) freq=293.66 ;;
			ds4) freq=311.13 ;; e4) freq=329.63 ;; f4) freq=349.23 ;; 
			fs4) freq=369.99 ;; g4) freq=392 ;; gs4) freq=415.30 ;;
			a4) freq=440 ;; as4) freq=466.16 ;; b4) freq=493.88 ;;
			c5) freq=523.25 ;; r) freq=0 ;;
		esac
		sox -n "$note"-"$synth"-half.wav synth 0.5 "$synth" "$freq" fade 0 0.7 0.25 trim 0 0.5 &>/dev/null
		sox "$note"-"$synth"-half.wav "$note"-"$synth"-quarter.wav trim 0.25 0.5 &>/dev/null
		sox "$note"-"$synth"-half.wav "$note"-"$synth"-triplet.wav trim 0.333 0.5 &>/dev/null
		sox "$note"-"$synth"-half.wav "$note"-"$synth"-eighth.wav trim 0.375 0.5 &>/dev/null
	fi
}

# Initialize synth
i=1
len=quarter
synth=tri
track=bass

# Start main song loop
while true; do
	# Display "virtual keyboard" and prompt
	echo "  -------------------------"
	echo "  | 2 | 3 |   | 5 | 6 | 7 |"
	echo "---------------------------------"
	echo "| q | w | e | r | t | y | u | i |"
	echo "---------------------------------"
	echo "  | s | d |    | g | h | j |"
	echo "---------------------------------"
	echo "| z | x | c | v | b | n | m | , |"
	echo "---------------------------------"
	echo ""
	echo "Synth ready. Press <spacebar> for options"
	echo -n "> "
	# Grab single keypress from user
	read -n1 key
	echo ""

	# Map key to its note
	case $key in
		z) note=c2 ;; s) note=cs2 ;; x) note=d2 ;; d) note=ds2 ;; c) note=e2 ;;
		v) note=f2 ;; g) note=fs2 ;; b) note=g2 ;; h) note=gs2 ;; n) note=a2 ;;
		j) note=as2 ;; m) note=b2 ;; ,) note=c3 ;; \;) note=r ;;
		q) note=c3 ;; 2) note=cs3 ;; w) note=d3 ;; 3) note=ds3 ;; e) note=e3 ;;
		r) note=f3 ;; 5) note=fs3 ;; t) note=g3 ;; 6) note=gs3 ;; y) note=a3 ;;
		7) note=as3 ;; u) note=b3 ;; i) note=c4 ;;
	esac

	# Define other keys
	
	case $key in
		8)
			len=eighth
			echo ""
			echo "Inserting eighth-notes..."
			;;
		9)
			len=triplet
			echo ""
			echo "Inserting triplets..."
			;;
		0)
			len=quarter
			echo ""
			echo "Inserting quarter-notes..."
			;;
		-)
			len=half
			echo ""
			echo "Inserting half-notes..."
			;;
	esac
	
	# Spacebar (or enter) activates menu
	if [ "$key" = '' ]; then
		echo "[1] Undo last note"
		echo "[2] Record lead"
		echo "[8] Add eighth-notes"
		echo "[9] Add triplets"
		echo "[0] Add quarter-notes"
		echo "[-] Add half-notes"
		echo ""
		echo -n "Select option (<space> to play) > "
		read -n1 menu
		echo ""
		case "$menu" in 
		1)
			i=$((i-1))
			echo "Undo successful!"
			echo ""
			;;
		2)
			synth=square
			track=lead
			echo ""
			echo "Bassline saved! Recording lead..."
			;;
		8)
			len=eighth
			echo ""
			echo "Inserting eighth-notes..."
			;;
		9)
			len=triplet
			echo ""
			echo "Inserting triplets..."
			;;
		0)
			len=quarter
			echo ""
			echo "Inserting quarter-notes..."
			;;
		-)
			len=half
			echo ""
			echo "Inserting half-notes..."
			;;
		*)
			# Assemble bass track
			echo "Creating bass samples"
			sox -n -c 1 temp1.wav trim 0.0 0.0
			j=1
			while read -r note synth len; do
				create_notes
				sox temp"$j".wav "$note"-"$synth"-"$len".wav temp"$((j+1))".wav
				j=$((j+1))
			done < "$song"-bass.mec
			mv temp"$j".wav "$song"-bass.wav
			rm temp*.wav

			# Assemble lead track
			echo "Creating lead samples"
			sox -n -c 1 temp1.wav trim 0.0 0.0
			j=1
			while read -r note synth len; do
				create_notes
				sox temp"$j".wav "$note"-"$synth"-"$len".wav temp"$((j+1))".wav
				j=$((j+1))
			done < "$song"-lead.mec
			sox temp"$j".wav "$song"-lead.wav pitch +1200 gain -15 &>/dev/null
			rm temp*.wav

			# create song mix and play it
			create_drum_track
			sox -m drums8.wav "$song"-bass.wav "$song"-lead.wav "$song"-mix.wav
			play "$song"-mix.wav
			;;
		esac
	
	else

		# Play note and append to song
		create_notes
		play "$note"-"$synth"-"$len".wav &>/dev/null &
		if [ $track = bass ]; then
			echo "$note" "$synth" "$len" >> "$song"-bass.mec
		elif [ $track = lead ]; then
			echo "$note" "$synth" "$len" >> "$song"-lead.mec
		fi

		# increment note counter
		i=$((i+1))
	fi
done

{"version":3,"sources":["mecca/castle.cljs"],"mappings":"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","names":["mecca.castle/mortar-row","x","y","width","mecca.castle/brick-row","offset","mecca.castle/mortar-columns","mecca.castle/brick-row-pair","mecca.castle/castle-arch","iter__4582__auto__","s__44793","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__44795","cljs.core/chunk-buffer","i__44794","vec__44796","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__44792","cljs.core/chunk-rest","vec__44799","cljs.core/first","cljs.core/cons","cljs.core/rest","dy","dx","mecca.castle/castle-door","mecca.castle/castle-roof","mecca.castle/brick-face","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-first"],"sourcesContent":["(ns mecca.castle)\n\n(defn mortar-row [x y width]\n  [:line {:x1 x :x2 (+ x (* width 8))\n          :y1 (+ y 3.5) :y2 (+ y 3.5)\n          :stroke \"black\"}])\n\n(defn brick-row [x y width offset]\n  [:line {:x1 x :x2 (+ x (* 8 width))\n          :y1 (+ 1.5 y) :y2 (+ 1.5 y)\n          :stroke-width 3\n          :stroke-dasharray \"7 1\"\n          :stroke-dashoffset offset\n          :stroke \"#c74a0a\"}])\n\n(defn mortar-columns [x y width offset]\n  [:line {:x1 x :x2 (+ x (* 8 width))\n          :y1 (+ 1.5 y) :y2 (+ 1.5 y)\n          :stroke-width 3\n          :stroke-dasharray \"1 7\"\n          :stroke-dashoffset offset\n          :stroke \"black\"}])\n\n(defn brick-row-pair [x y width]\n  [:g\n   [brick-row x y width 0]\n   [mortar-columns x y width 1]\n   [mortar-row x y width]\n   [brick-row x (+ y 4) width 4]\n   [mortar-columns x (+ y 4) width 5]\n   [mortar-row x (+ y 4) width]])\n\n(defn castle-arch [x y]\n  [:g (for [[dy dx] [[16.5 3] [17.5 5] [18.5 6] [20.5 7] [21.5 7] [22.5 8]]]\n        ^{:key [dy dx]}\n        [:line {:x1 (+ x (- 40 dx)) :x2 (+ x 40 dx)\n                :y1 (+ 48.5 dy) :y2 (+ 48.5 dy)\n                :stroke \"black\"\n                :stroke-width 2.1}])])\n\n(defn castle-door [x y]\n  [:g\n   [:rect {:x x :y y\n           :width 16\n           :height 24\n           :fill \"black\"}]\n   [castle-arch (- x 32) y]])\n\n(defn castle-roof [x y width]\n  [:g\n   [:line {:x1 x :x2 (+ x width)\n           :y1 (+ y 0.5) :y2 (+ y 0.5)\n           :stroke-width 1\n           :stroke-dasharray \"9 7\"\n           :stroke-dashoffset -11\n           :stroke \"#fbbbaf\"}]\n   [:line {:x1 x :x2 (+ x width)\n           :y1 (+ y 4) :y2 (+ y 4)\n           :stroke-width 6\n           :stroke-dasharray \"1 7\"\n           :stroke-dashoffset 5\n           :stroke \"#fbbbaf\"}]\n   [:line {:x1 x :x2 (+ x width)\n           :y1 (+ y 4) :y2 (+ y 4)\n           :stroke-width 6\n           :stroke-dasharray \"7 9\"\n           :stroke-dashoffset 4\n           :stroke \"#c74a0a\"}]\n   [:line {:x1 x :x2 (+ x width)\n           :y1 (+ y 7.5) :y2 (+ y 7.5)\n           :stroke-width 1\n           :stroke-dasharray \"9 7\"\n           :stroke-dashoffset -11\n           :stroke \"black\"}]\n   [:line {:x1 x :x2 (+ x width)\n           :y1 (+ y 7.5) :y2 (+ y 7.5)\n           :stroke-width 1\n           :stroke-dasharray \"9 7\"\n           :stroke-dashoffset 13\n           :stroke \"#fbbbaf\"}]])\n\n(defn brick-face [x y width]\n  [:g {:transform \"scale (0.15)\"\n       :opacity 1}\n   [castle-roof x y (* 8 width)]\n   [brick-row-pair x (+ y 8) width]\n   [brick-row-pair x (+ y 16) width]\n   [brick-row-pair x (+ y 24) width]\n   [brick-row-pair x (+ y 32) width]\n   [brick-row-pair x (+ y 40) width]\n   (if (= width 10)\n     [castle-door (+ 32 x) (+ y 24)])])"]}
{"version":3,"sources":["mecca/core.cljs"],"mappings":";AAYA,4BAAA,mFAAA,/GAACA;AAED,4BAAA,mFAAA,+HAAA,9OAACA;AAED,sBAAA,tBAAMC,oDAAUC;AAAhB,AACE,IAAA,AAAK,4DAAA,2CAAA,2DAAA,2CAAA,AAAA,iEAAA,wDAAA,/TAACE,mDAAqBF,wMAAiBG;gBAA5C,QAAAF,JACqBG;AADrB,AAEO,mDAAKA;;gBAEb,sDAAA,mFAAA,zIAACC;AAEF,uBAAA,mFAAA,1GAACC,0KAAyB,4CAAK,AAACP,oBAAS,4CAAK,iBAAAQ,WAAA,AAAAC,gBAASC;IAATF,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,AAAAA;IAAAA,eAAA,EAAA,CAAAA,gBAAA,OAAA,KAAA,AAAAA;AAAA,AAAA,GAAA,CAAAA,gBAAA;AAAA;;AAAA,mDAAAA;;;AAE9C,uBAAA,mFAAA,4GAAA,2CAAA,iEAAA,mFAAA,mFAAA,mFAAA,3jBAACD,2nBAG6B,4CAAK,AAACP,oBAAS,4CAAK,iBAAAW,WAAA,AAAAF,gBAASC;IAATC,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,AAAAA;IAAAA,eAAA,EAAA,CAAAA,gBAAA,OAAA,KAAA,AAAAA;AAAA,AAAA,GAAA,CAAAA,gBAAA;AAAA;;AAAA,mDAAAA;;gBAHlD,mFAAA,2CAAA,2DAAA,KAAA,6DAAA,qCAAA,gFAAA,mFAAA,2CAAA,2DAAA,KAAA,6DAAA,qBAAA,qFAAA,mFAAA,2CAAA,2DAAA,KAAA,6DAAA;AAUA,mBAAA,nBAAuBC;AAAvB,AACE,AAACC;;AACD,wDAAA,jDAACC,oIAAaC,yBACJ,wBAAA,xBAAiBC;;AAE7B,kBAAA,lBAAeC;AAAf,AACE,OAACL","names":["re-frame.core/dispatch-sync","mecca.core/eval-all","s","e85265","sci.core.eval_string","goog/global","e","re_frame.core.subscribe","re-frame.core/dispatch","G__85270","cljs.core/deref","mecca.sci-editor/!points","G__85274","mecca.core/start","re-frame.core/clear-subscription-cache!","reagent.dom.render","mecca.view/mecca","js/document","mecca.core/init"],"sourcesContent":["(ns mecca.core\r\n  (:require\r\n   [reagent.core :as r]\r\n   [reagent.dom :as rdom]\r\n   [mecca.sci-editor :as sci-editor :refer [!points points eval-result !result]]\r\n   [re-frame.core :as rf]\r\n   [re-pressed.core :as rp]\r\n   [mecca.events]\r\n   [mecca.sci]\r\n   [mecca.subs]\r\n   [mecca.view :as view]))\r\n\r\n(rf/dispatch-sync [:initialize-db])\r\n\r\n(rf/dispatch-sync [::rp/add-keyboard-event-listener \"keydown\"])\r\n\r\n(defn eval-all [s]\r\n  (try (sci.core/eval-string s {:classes {'js goog/global :allow :all}})\r\n       (catch :default e\r\n         (str e))))\r\n\r\n@(rf/subscribe [:eval-result])\r\n\r\n(rf/dispatch [:set-result (str (eval-all (str (some-> @!points .-state .-doc str))))])\r\n\r\n(rf/dispatch\r\n [::rp/set-keydown-rules\r\n  {:event-keys [[\r\n                 [:set-result (str (eval-all (str (some-> @!points .-state .-doc str))))]\r\n                  [{:keyCode   13\r\n                    :shiftKey true}]]]\r\n   :always-listen-keys [{:keyCode   13 :shiftKey true}]\r\n   :prevent-default-keys [{:keyCode   13 :shiftKey true}]\r\n   }])\r\n\r\n(defn ^:dev/after-load start []\r\n  (rf/clear-subscription-cache!)\r\n  (rdom/render [view/mecca]\r\n            (.getElementById js/document \"app\")))\r\n\r\n(defn ^:export init []\r\n  (start))"]}
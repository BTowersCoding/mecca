{"version":3,"sources":["mecca/songs/confuzion.cljs"],"mappings":"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","names":["mecca.songs.confuzion/note-beats","cljs.core.sort.cljs$core$IFn$_invoke$arity$1","cljs.core/deref","cljs.core.map.cljs$core$IFn$_invoke$arity$2","G__26683","re-frame.core/subscribe","mecca.songs.confuzion/delay-note","beats","note","p1__26684#","cljs.core.update.cljs$core$IFn$_invoke$arity$3","mecca.songs.confuzion/loop-notes","notes","length","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/max","p1__26685#","cljs.core.into.cljs$core$IFn$_invoke$arity$2","p1__26686#","G__26687","re-frame.core/dispatch","mecca.songs.confuzion/bass1","time","mecca.songs.confuzion/bass2","m","p1__26688#","mecca.songs.confuzion/bass3","p1__26689#","mecca.songs.confuzion/bass4","p1__26690#","mecca.songs.confuzion/bass5","p1__26691#","mecca.songs.confuzion/bass-pat-1","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","mecca.songs.confuzion/bass6","p1__26692#","mecca.songs.confuzion/bass7","p1__26693#","mecca.songs.confuzion/bass-pat-2","mecca.songs.confuzion/bass-pat-3","mecca.songs.confuzion/bass-pat-4","mecca.songs.confuzion/bass-pat-5","G__26694","mecca.songs.confuzion/drums1","p1__26695#","mecca.songs.confuzion/drums2","p1__26696#","mecca.songs.confuzion/drums-pat-1","mecca.songs.confuzion/drums-pat-2","mecca.songs.confuzion/glis","chord","cljs.core/reverse","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2","times","iter__4582__auto__","s__26701","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__26703","cljs.core/chunk-buffer","i__26702","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__26700","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core.range.cljs$core$IFn$_invoke$arity$1","p1__26697#","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","pitches","s__26705","b__26707","i__26706","iter__26704","p1__26698#","last-note","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","cljs.core/last","s__26709","b__26711","i__26710","iter__26708","cljs.core.range.cljs$core$IFn$_invoke$arity$2","p1__26699#","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","mecca.songs.confuzion/lead1","G__26712","G__26713","p1__26714#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__26715","G__26717","p1__26716#","G__26718","cljs.core/chunk-first"],"sourcesContent":["(ns mecca.songs.confuzion\r\n  (:require\r\n   [mecca.music :as music]\r\n   [re-frame.core :as rf :refer [subscribe dispatch]]))\r\n\r\n(defn note-beats []\r\n  (sort\r\n   (map :time\r\n        @(subscribe [:notes]))))\r\n\r\n(defn delay-note [beats note]\r\n  (update note :time #(+ beats %)))\r\n\r\n(defn loop-notes [notes]\r\n  (let [length (apply max (map #(:time %) notes))]\r\n    (into notes\r\n          (map #(delay-note (inc length) %) notes))))\r\n\r\n@(dispatch\r\n  [:set-tempo 156.5])\r\n\r\n(defn bass1 [time]\r\n  [{:time (+ time 0), :instrument 15, :pitch 71} {:time (+ time 1.5) :instrument 15, :pitch 71} {:time (+ time 2) :instrument 15, :pitch 71} {:time (+ time 3) :instrument 15, :pitch 73} {:time (+ time 3.5) :instrument 15, :pitch 69} {:time (+ time 4) :instrument 15, :pitch 69} {:time (+ time 5.5) :instrument 15, :pitch 69} {:time (+ time 6) :instrument 15, :pitch 69} {:time (+ time 8) :instrument 15, :pitch 64} {:time (+ time 9.5) :instrument 15, :pitch 64} {:time (+ time 10) :instrument 15, :pitch 64} {:time (+ time 12) :instrument 15, :pitch 64} {:time (+ time 13.5) :instrument 15, :pitch 64} {:time (+ time 14) :instrument 15, :pitch 64}])\r\n\r\n(defn bass2 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n  [{:time 29.5, :instrument 15, :pitch 69} {:time 29, :instrument 15, :pitch 64} {:time 31, :instrument 15, :pitch 64} {:time 26, :instrument 15, :pitch 69} {:time 25.5, :instrument 15, :pitch 69} {:time 24, :instrument 15, :pitch 69} {:time 23, :instrument 15, :pitch 67} {:time 22.5, :instrument 15, :pitch 66} {:time 17.5, :instrument 15, :pitch 64} {:time 0, :instrument 15, :pitch 71} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 64} {:time 2.5, :instrument 15, :pitch 62} {:time 3.5, :instrument 15, :pitch 59} {:time 5.5, :instrument 15, :pitch 66} {:time 6, :instrument 15, :pitch 64} {:time 7, :instrument 15, :pitch 62} {:time 8, :instrument 15, :pitch 69} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 62} {:time 10.5, :instrument 15, :pitch 61} {:time 11.5, :instrument 15, :pitch 57} {:time 13.5, :instrument 15, :pitch 64} {:time 14, :instrument 15, :pitch 62} {:time 15, :instrument 15, :pitch 61} {:time 16, :instrument 15, :pitch 64} {:time 18.5, :instrument 15, :pitch 64} {:time 19, :instrument 15, :pitch 66} {:time 19.5, :instrument 15, :pitch 67} {:time 20.5, :instrument 15, :pitch 66} {:time 21, :instrument 15, :pitch 64} {:time 21.5, :instrument 15, :pitch 64}]))\r\n\r\n(defn bass3 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n  [{:time 0, :instrument 15, :pitch 66} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 66} {:time 3, :instrument 15, :pitch 69} {:time 4, :instrument 15, :pitch 64} {:time 5.5, :instrument 15, :pitch 64} {:time 6, :instrument 15, :pitch 64} {:time 8, :instrument 15, :pitch 64} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 64} {:time 11, :instrument 15, :pitch 61} {:time 12, :instrument 15, :pitch 62} {:time 13.5, :instrument 15, :pitch 62} {:time 14, :instrument 15, :pitch 62} {:time 16, :instrument 15, :pitch 62} {:time 17.5, :instrument 15, :pitch 62} {:time 18, :instrument 15, :pitch 62} {:time 20, :instrument 15, :pitch 61} {:time 21.5, :instrument 15, :pitch 61} {:time 22, :instrument 15, :pitch 61} {:time 24, :instrument 15, :pitch 61} {:time 25.5, :instrument 15, :pitch 73} {:time 26.5, :instrument 15, :pitch 71} {:time 27, :instrument 15, :pitch 69} {:time 27.5, :instrument 15, :pitch 68}]))\r\n\r\n(defn bass4 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n  [{:time 0, :instrument 15, :pitch 66} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 66} {:time 4, :instrument 15, :pitch 64} {:time 5.5, :instrument 15, :pitch 64} {:time 6, :instrument 15, :pitch 64} {:time 7, :instrument 15, :pitch 61} {:time 8, :instrument 15, :pitch 62} {:time 9.5, :instrument 15, :pitch 62} {:time 10, :instrument 15, :pitch 62} {:time 12, :instrument 15, :pitch 69} {:time 13.5, :instrument 15, :pitch 69} {:time 14, :instrument 15, :pitch 69}]))\r\n\r\n(defn bass5 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n  [{:time 0, :instrument 15, :pitch 67} {:time 8, :instrument 15, :pitch 66} {:time 16, :instrument 15, :pitch 64} {:time 17, :instrument 15, :pitch 62} {:time 18, :instrument 15, :pitch 61} {:time 19, :instrument 15, :pitch 59}]))\r\n\r\n(def bass-pat-1 \r\n  (concat (bass1 0) (bass1 16) (bass2 32) (bass3 64) (bass4 92) (bass4 108) (bass5 124)))\r\n\r\n(defn bass6 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n  [{:time 0, :instrument 15, :pitch 71} {:time 1.5, :instrument 15, :pitch 66} {:time 2, :instrument 15, :pitch 71} {:time 2.5, :instrument 15, :pitch 66} {:time 3.5, :instrument 15, :pitch 66} {:time 4, :instrument 15, :pitch 69} {:time 5.5, :instrument 15, :pitch 69} {:time 6, :instrument 15, :pitch 69} {:time 8, :instrument 15, :pitch 68} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 68} {:time 10.5, :instrument 15, :pitch 64} {:time 11.5, :instrument 15, :pitch 64} {:time 12, :instrument 15, :pitch 66} {:time 13.5, :instrument 15, :pitch 66} {:time 14, :instrument 15, :pitch 66}]))\r\n\r\n(defn bass7 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n    [{:time 0, :instrument 15, :pitch 67} {:time 1, :instrument 15, :pitch 62} {:time 1.5, :instrument 15, :pitch 64} {:time 2, :instrument 15, :pitch 67} {:time 2.5, :instrument 15, :pitch 62} {:time 3, :instrument 15, :pitch 67} {:time 3.5, :instrument 15, :pitch 67} {:time 4, :instrument 15, :pitch 66} {:time 5.5, :instrument 15, :pitch 66} {:time 6, :instrument 15, :pitch 66} {:time 8, :instrument 15, :pitch 67} {:time 9, :instrument 15, :pitch 62} {:time 9.5, :instrument 15, :pitch 64} {:time 10, :instrument 15, :pitch 67} {:time 10.5, :instrument 15, :pitch 62} {:time 11, :instrument 15, :pitch 67} {:time 11.5, :instrument 15, :pitch 66} {:time 12, :instrument 15, :pitch 64} {:time 13.5, :instrument 15, :pitch 64} {:time 14, :instrument 15, :pitch 64} {:time 16, :instrument 15, :pitch 64} {:time 17.5, :instrument 15, :pitch 64} {:time 18, :instrument 15, :pitch 64}]))\r\n\r\n(def bass-pat-2\r\n  (concat (bass6 144) (bass6 160) (bass7 176) (bass1 196) (bass1 212)))\r\n\r\n(def bass-pat-3 \r\n  (concat (bass2 228) (bass3 260) (bass4 288) (bass4 304) (bass5 320)))\r\n\r\n(def bass-pat-4\r\n  (concat (bass6 340) (bass6 356) (bass7 372) (bass1 392) (bass1 408)))\r\n\r\n(def bass-pat-5\r\n  (concat (bass6 424) (bass6 440) (bass7 456) (bass1 476) (bass1 492)))\r\n\r\n@(dispatch \r\n  [:set-notes (concat bass-pat-1 bass-pat-2 bass-pat-3 bass-pat-4 bass-pat-5 (bass1 508) (bass1 524) (bass1 540) (bass1 556))])\r\n\r\n(defn drums1 [time]\r\n    (map (fn [m] (update m :time #(+ % time)))\r\n  [{:time 15, :instrument 3, :pitch 67} {:time 14, :instrument 13, :pitch 77} {:time 13, :instrument 13, :pitch 77} {:time 12, :instrument 13, :pitch 77} {:time 11, :instrument 3, :pitch 67} {:time 10, :instrument 13, :pitch 77} {:time 9, :instrument 13, :pitch 77} {:time 8, :instrument 13, :pitch 77} {:time 7, :instrument 3, :pitch 67} {:time 6, :instrument 13, :pitch 77} {:time 5, :instrument 13, :pitch 77} {:time 4, :instrument 13, :pitch 77} {:time 3, :instrument 3, :pitch 67} {:time 2, :instrument 13, :pitch 77} {:time 1, :instrument 13, :pitch 77} {:time 0, :instrument 13, :pitch 77}]))\r\n\r\n(defn drums2 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n       [{:time 7.5, :instrument 3, :pitch 67} {:time 7, :instrument 13, :pitch 77} {:time 6.5, :instrument 13, :pitch 77} {:time 6, :instrument 13, :pitch 77} {:time 5.5, :instrument 3, :pitch 67} {:time 5, :instrument 13, :pitch 77} {:time 4.5, :instrument 13, :pitch 77} {:time 4, :instrument 13, :pitch 77} {:time 3.5, :instrument 3, :pitch 67} {:time 3, :instrument 13, :pitch 77} {:time 2.5, :instrument 13, :pitch 77} {:time 2, :instrument 13, :pitch 77} {:time 1.5, :instrument 3, :pitch 67} {:time 1, :instrument 13, :pitch 77} {:time 0.5, :instrument 13, :pitch 77} {:time 0, :instrument 13, :pitch 77}]))\r\n\r\n(def drums-pat-1\r\n  (concat (drums1 0) (drums1 16) (drums1 32) (drums1 48) (drums1 64) (drums1 80) (drums1 96) (drums1 112)\r\n   [{:time 131, :instrument 3, :pitch 67} {:time 130, :instrument 13, :pitch 77} {:time 129, :instrument 13, :pitch 77} {:time 128, :instrument 13, :pitch 77}]))\r\n\r\n(def drums-pat-2\r\n  (drums2 132))\r\n\r\n(defn glis [notes]\r\n  (let [chord (reverse (sort-by :pitch notes))\r\n        times (for [note (range (count chord))]\r\n                (update (nth chord note) :time #(+ % (* 0.1 note))))\r\n        pitches (for [note (range (count times))]\r\n                  (update (nth times note) :pitch #(- % note)))\r\n        last-note (repeat 3 (last pitches))\r\n        last-note (for [note (range 1 3)]\r\n                    (update (nth last-note note) :time #(+ % (/ note 10.0))))]\r\n(concat pitches last-note)))\r\n\r\n(glis (repeat 12 {:time 10 :instrument 8, :pitch 71}))\r\n\r\n(def lead1\r\n  (concat [{:time 1.5, :instrument 14, :pitch 69} {:time 2, :instrument 14, :pitch 71} {:time 2.5, :instrument 14, :pitch 74} {:time 3, :instrument 14, :pitch 76} {:time 3.5, :instrument 14, :pitch 78} {:time 4, :instrument 14, :pitch 78} {:time 4.5, :instrument 14, :pitch 78} {:time 5, :instrument 14, :pitch 76} {:time 5.5, :instrument 14, :pitch 76} {:time 6, :instrument 14, :pitch 74} {:time 6.5, :instrument 14, :pitch 76} {:time 7, :instrument 14, :pitch 76} {:time 7.5, :instrument 14, :pitch 74} {:time 7.75, :instrument 14, :pitch 76} {:time 8, :instrument 14, :pitch 74} {:time 8.5, :instrument 14, :pitch 74} {:time 9, :instrument 14, :pitch 74} {:time 9.5, :instrument 14, :pitch 71} {:time 10 :instrument 14, :pitch 71}]\r\n    (glis (repeat 12 {:time 10 :instrument 8, :pitch 71}))\r\n    [{:time 12, :instrument 14, :pitch 74} {:time 12.5, :instrument 14, :pitch 74} {:time 13.5, :instrument 14, :pitch 74} {:time 14.5, :instrument 14, :pitch 71} {:time 15.5, :instrument 14, :pitch 69} {:time 16, :instrument 14, :pitch 71}]\r\n    (glis (repeat 8 {:time 16, :instrument 8, :pitch 71}))\r\n    [{:time 17.5, :instrument 14, :pitch 64} {:time 18, :instrument 14, :pitch 66} {:time 18.5, :instrument 14, :pitch 69} {:time 19, :instrument 14, :pitch 71} {:time 20, :instrument 14, :pitch 71} {:time 20.5, :instrument 14, :pitch 73} {:time 21.5, :instrument 14, :pitch 69} {:time 22, :instrument 14, :pitch 69} {:time 22.5, :instrument 14, :pitch 69} {:time 24, :instrument 14, :pitch 66} {:time 24.5, :instrument 14, :pitch 64} {:time 25.5, :instrument 14, :pitch 64}]))\r\n\r\n@(dispatch\r\n  [:set-notes lead1])\r\n\r\n@(dispatch\r\n  [:set-notes\r\n   (concat\r\n    ;(bass1 0)\r\n    ;(bass1 16)\r\n    ;(drums1 0)\r\n    ;(drums1 16)\r\n    (bass2 0)\r\n    (drums1 0)\r\n    (drums1 16)\r\n    ;lead1\r\n    )])\r\n\r\n(reverse\r\n (filter #(= 14 (:instrument %))\r\n         @(subscribe [:notes])))\r\n\r\n@(dispatch\r\n  [:set-notes\r\n(sort-by :time\r\n         (filter #(or (= 14 (:instrument %))\r\n                      (= 8 (:instrument %)))\r\n         @(subscribe [:notes])))])"]}
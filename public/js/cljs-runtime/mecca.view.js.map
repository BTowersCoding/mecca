{"version":3,"sources":["mecca/view.cljs"],"mappings":"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","names":["mecca.view/note-guides","editor-x","re_frame.core.subscribe","cljs.core.into","iter__4622__auto__","s__71920","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__71922","cljs.core/chunk-buffer","i__71921","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__71919","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","beat","cljs.core.range","cljs.core._EQ_","cljs.core/mod","cljs.core/deref","mecca.view/eval-all","s","e71923","sci.core.eval_string","goog/global","e","mecca.view/note-targets","instrument","sharp?","s__71925","xs__6308__auto__","iterys__4618__auto__","s__71927","b__71929","i__71928","iter__71926","fs__4619__auto__","cljs.core.concat","iter__71924","time","pitch","cljs.core/not","and__4221__auto__","re-frame.core/dispatch","pitches","mecca.music/play-sample","cljs.core.get","mecca.sci-editor/update-editor!","cljs.core.conj","mecca.sci-editor/update-result!","G__71933","G__71938","mecca.sci-editor/!points","mecca.view/note-cursor","focused","x","y","cljs.core/last","mecca.editor.svg_paths","mecca.editor/eraser-cursor","mecca.editor/repeat-sign","G__71940","js/Error","mecca.mario/mario-icon","mecca.mario/shroom","mecca.mario/yoshi","mecca.mario/star","mecca.mario/flower","mecca.mario/gb","mecca.mario/dog","mecca.mario/kitty","mecca.mario/pig","mecca.mario/swan","mecca.mario/face","mecca.mario/plane","mecca.mario/boat","mecca.mario/car","mecca.mario/heart","mecca.view/score-notes","notes","s__71942","b__71944","i__71943","map__71945","cljs.core/--destructure-map","iter__71941","map__71947","pitch-map","cljs.core/zipmap","G__71946","G__71948","mecca.mario/mario-note","or__4223__auto__","mecca.view/editor","mario-run","mecca.mario/cloud","mecca.mario/hill","mecca.castle/brick-face","mecca.mario/mario-sm","mecca.editor/current-note-display","mecca.editor/note-blocks","mecca.mario/floor-tile","mecca.editor/staff-lines","mecca.editor/retract-editor","mecca.editor/treble-clef","mecca.editor/advance-editor","mecca.editor/advance-measure","mecca.editor/advance-end","mecca.view/load-song","dom","goog.object/get","file","goog.object/getValueByKeys","reader","js/FileReader","p1__71949#","clojure.edn.read_string","mecca.view/demo","mecca.view/mecca","mecca.sci-editor/editor","mecca.sci-editor/result","mecca.sci-editor/!result","mecca.transport/transport","mecca.editor/toolbar","file-blob","js/Blob","link","js/document","js/URL","cljs.core/chunk-first"],"sourcesContent":["(ns mecca.view\r\n  (:require [mecca.music :as music]\r\n            [re-frame.core :as rf :refer [subscribe dispatch]]\r\n            [reagent.core :as r]\r\n            [mecca.castle :as castle]\r\n            [mecca.transport :as transport]\r\n            [mecca.editor :as editor :refer [svg-paths]]\r\n            [mecca.mario :as mario]\r\n            [sci.core :as sci]\r\n            [mecca.sci-editor :as sci-editor :refer [!points points result !result]]\r\n            [clojure.pprint :as pp]\r\n            [goog.object :as o]\r\n            [clojure.edn :as edn]))\r\n\r\n(defn note-guides []\r\n  (let [editor-x (subscribe [:editor-beat-start])]\r\n    (fn []\r\n      (into [:g]\r\n            (for [beat (range 0 9 0.5)]\r\n              (if (= 0\r\n                     (mod (+ (dec @editor-x) beat) 4))\r\n                [:g\r\n                 ;[bar-number (/ beat 4) (+ 296 (* 120 (mod beat 8))) 64 0.05]\r\n                 [:line {:x1 (+ 8 (* 6 beat)) :x2 (+ 8 (* 6 beat))\r\n                         :y1 4 :y2 21 :stroke \"orange\"\r\n                         :stroke-width 0.25\r\n                         :stroke-dasharray 0.5}]]\r\n                [:line {:x1 (+ 8 (* 6 beat)) :x2 (+ 8 (* 6 beat))\r\n                        :y1 4 :y2 21 :stroke \"black\"\r\n                        :stroke-width 0.075\r\n                        :stroke-dasharray 0.5}]))))))\r\n\r\n(defn eval-all [s]\r\n  (try (sci/eval-string s {:classes {'js goog/global :allow :all}})\r\n       (catch :default e\r\n         (str e))))\r\n\r\n(defn note-targets []\r\n  (let [instrument (subscribe [:instrument])\r\n        editor-x (subscribe [:editor-beat-start])\r\n        sharp? (subscribe [:sharp?])]\r\n    (fn []\r\n      (into [:g]\r\n            (for [time (range 0 9 0.5)\r\n                  pitch (range 19)]\r\n              ^{:key [time pitch]}\r\n              [:rect {:transform \"translate(6.5,4)\"\r\n                      :x (* 6 time)\r\n                      :y (- pitch 1)\r\n                      :height 1 :width 3\r\n                      :stroke \"black\"\r\n                      :stroke-width 0.2\r\n                      :fill \"gray\"\r\n                      :visibility \"hidden\"\r\n                      :opacity 0.2\r\n                      :pointer-events \"all\"\r\n                      :on-mouse-over #(if-not (and \r\n                                               @sharp?\r\n                                               (or (= pitch 12)\r\n                                                   (= pitch 15)\r\n                                                   (= pitch 8)\r\n                                                   (= pitch 5)\r\n                                                   (= pitch 1)\r\n                                                   (= pitch 0)))\r\n                                        (dispatch [:update-focus-note [time pitch]]))\r\n                      :on-mouse-out #(dispatch [:update-focus-note [nil nil]])\r\n                      :on-click (let [pitches [84 83 81 79 77 76 74 72 71 69 67 65 64 62 60 59 57 55 53]]\r\n                                  (cond\r\n                                    @(subscribe [:eraser?])\r\n                                    #(do (music/play-sample 18 63)\r\n                                       (dispatch [:remove-note (+ time (dec @editor-x))\r\n                                                  (get pitches pitch)]))\r\n                                    @(subscribe [:repeat?])\r\n                                    #(dispatch [:set-loop-end time])\r\n                                    :else\r\n                                    #(do\r\n                                      (dispatch [:add-note @instrument\r\n                                                  (+ time (dec @editor-x))\r\n                                                  (get pitches pitch)])\r\n                                       (sci-editor/update-editor! \r\n                                        (str (conj @(subscribe [:notes]) \r\n                                                   {:instrument @instrument\r\n                                                    :time       (+ time (dec @editor-x))\r\n                                                    :pitch      (get pitches pitch)})))\r\n                                       (sci-editor/update-result!\r\n                                        (str \"Output\ua789\u00a0\" (eval-all (str (some-> @!points .-state .-doc str))))))))}])))))\r\n\r\n(defn note-cursor []\r\n  (let [focused (subscribe [:focused-note-pos])\r\n        instrument (subscribe [:instrument])\r\n        sharp? (subscribe [:sharp?])]\r\n       (when-not (= @focused [nil nil])\r\n         (let [x (first @focused) y (last @focused)]\r\n           [:g\r\n            (if @sharp? (svg-paths [[\"black\" \"M15 46C15 47 14 47 13 47 13 47 12 47 12 46V37L7 39V49C7 49 6 50 6 50 5 50 5 49 5 49V40L3 40C3 40 2 40 2 40 2 40 1 40 1 39V35C1 35 1 34 2 34L5 33V23L3 24C3 24 2 24 2 24 2 24 1 23 1 23V19C1 19 1 18 2 18L5 17V7C5 6 5 6 6 6 6 6 7 6 7 7V16L12 14V4C12 4 13 3 13 3 14 3 15 4 15 4V13L17 13C17 12 17 12 17 12 18 12 18 13 18 14V17C18 18 18 18 17 19L15 20V30L17 29C17 29 17 29 17 29 18 29 18 29 18 30V34C18 34 18 35 17 35L15 36V46ZM7 22V32L12 31V21Z\"]]\r\n                                   (+ 68 (* 86 x)) (+ 18 (* 15 y)) 0.07))\r\n            (cond\r\n              @(subscribe [:eraser?])\r\n              [editor/eraser-cursor (+ 36 (* 30 x)) (+ (* 5 y) 20) 0.2]\r\n              @(subscribe [:repeat?])\r\n              [editor/repeat-sign (+ 7 (* 6 x)) 8 0.13]\r\n              :else\r\n              (case @instrument\r\n                1 [mario/mario-icon (+ 2 (* 30 x)) (+ (* 5 y) 9) 0.2]\r\n                2 [mario/shroom (+ 32 (* 30 x)) (+ (* 5 y) 12) 0.2]\r\n                3 [mario/yoshi (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                4 [mario/star (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                5 [mario/flower (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                6 [mario/gb (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                7 [mario/dog (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                8 [mario/kitty (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                9 [mario/pig (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                10 [mario/swan (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                11 [mario/face (+ 32 (* 30 x)) (+ (* 5 y) 10) 0.2]\r\n                12 [mario/plane (+ 32 (* 30 x)) (+ (* 5 y) 15) 0.2]\r\n                13 [mario/boat (+ 32  (* 30 x)) (+ (* 5 y) 12) 0.2]\r\n                14 [mario/car (+ 32 (* 30 x)) (+ (* 5 y) 12) 0.2]\r\n                15 [mario/heart (+ 32 (* 30 x)) (+ (* 5 y) 15) 0.2]))]))))\r\n\r\n(defn score-notes []\r\n   (let [notes (subscribe [:notes])\r\n         editor-x (subscribe [:editor-beat-start])]\r\n     (into [:g]\r\n           (for [{:keys [time instrument pitch]} @notes\r\n                 :when (<= (dec @editor-x) time (+ 16 (dec @editor-x)))]\r\n                    ^{:key [instrument time pitch]}\r\n                    (let [x (- time (dec @editor-x))\r\n                          pitch-map (zipmap [84 83 81 79 77 76 74 72 71 69 67 65 64 62 60 59 57 55 53]\r\n                                            (range 19))]\r\n                      [:g\r\n                       (if-not (get pitch-map pitch)\r\n                        (svg-paths [[\"black\" \"M15 46C15 47 14 47 13 47 13 47 12 47 12 46V37L7 39V49C7 49 6 50 6 50 5 50 5 49 5 49V40L3 40C3 40 2 40 2 40 2 40 1 40 1 39V35C1 35 1 34 2 34L5 33V23L3 24C3 24 2 24 2 24 2 24 1 23 1 23V19C1 19 1 18 2 18L5 17V7C5 6 5 6 6 6 6 6 7 6 7 7V16L12 14V4C12 4 13 3 13 3 14 3 15 4 15 4V13L17 13C17 12 17 12 17 12 18 12 18 13 18 14V17C18 18 18 18 17 19L15 20V30L17 29C17 29 17 29 17 29 18 29 18 29 18 30V34C18 34 18 35 17 35L15 36V46ZM7 22V32L12 31V21Z\"]]\r\n                                   (+ 68 (* 86 x)) (+ 18 (* 15 (get pitch-map (dec pitch)))) 0.07))\r\n                      (case instrument\r\n                        1 [mario/mario-note (+ 2 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 9) 0.2]\r\n                        2 [mario/shroom (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 12) 0.2]\r\n                        3 [mario/yoshi (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        4 [mario/star (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        5 [mario/flower (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        6 [mario/gb (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        7 [mario/dog (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        8 [mario/kitty (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        9 [mario/pig (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        10 [mario/swan (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        11 [mario/face (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 10) 0.2]\r\n                        12 [mario/plane (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 15) 0.2]\r\n                        13 [mario/boat (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 12) 0.2]\r\n                        14 [mario/car (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 12) 0.2]\r\n                        15 [mario/heart (+ 32 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 15) 0.2]\r\n                        [mario/mario-note (+ 2 (* 30 x)) (+ (* 5 (or (get pitch-map pitch) (get pitch-map (dec pitch)))) 9) 0.2])])))))\r\n\r\n(defn editor []\r\n  (let [editor-x (subscribe [:editor-beat-start])\r\n        mario-run (subscribe [:mario-run])]\r\n    (fn []\r\n      (when (= 20 @mario-run)\r\n        (dispatch [:jump-reset]))\r\n      [:svg {:width \"100%\"\r\n             :view-box \"0 0 64 36\"\r\n             :style {:cursor \"url(/mecca/public/images/hand.png),pointer\"}}\r\n       [mario/cloud 1 1]\r\n       [mario/hill 40]\r\n       [castle/brick-face 363 18 6]\r\n       [castle/brick-face 348 48 10]\r\n       [mario/mario-sm]\r\n       [editor/current-note-display 47 0 0.22]\r\n       [editor/note-blocks]\r\n       [mario/floor-tile 16]\r\n       [:rect#editorframe\r\n          {:stroke \"black\"\r\n           :stroke-width 0.2\r\n           :fill \"none\"\r\n           :height 20 :width 63.5 :x 0.25 :y 14.5}]\r\n       [:g.staff {:transform \"translate(0,13.5) scale(1)\"}\r\n        [editor/staff-lines]\r\n        [editor/retract-editor 2]\r\n         [editor/treble-clef\r\n          (- 0.8 (* 6 (dec @editor-x)))\r\n          6.3]\r\n        [editor/advance-editor]\r\n        [editor/advance-measure]\r\n        [editor/advance-end]\r\n        [note-targets]\r\n        [note-guides]\r\n        [note-cursor]\r\n        [score-notes]\r\n        (when @(subscribe [:loop-end])\r\n          [editor/repeat-sign (+ 7 (* 6 @(subscribe [:loop-end]))) 8 0.13])]])))\r\n\r\n(defn load-song []\r\n  [:input#input\r\n   {:type      \"file\"\r\n    :on-change\r\n    (fn [e]\r\n      (let [dom    (o/get e \"target\")\r\n            file   (o/getValueByKeys dom #js [\"files\" 0])\r\n            reader (js/FileReader.)]\r\n        (.readAsText reader file)\r\n        (set! (.-onload reader)\r\n              #(dispatch [:set-notes\r\n                          (edn/read-string (-> % .-target .-result))]))))}])\r\n\r\n(def demo \"(defn bass1 [time]\r\n  [{:time (+ time 0), :instrument 15, :pitch 71} {:time (+ time 1.5) :instrument 15, :pitch 71} {:time (+ time 2) :instrument 15, :pitch 71} {:time (+ time 3) :instrument 15, :pitch 73} {:time (+ time 3.5) :instrument 15, :pitch 69} {:time (+ time 4) :instrument 15, :pitch 69} {:time (+ time 5.5) :instrument 15, :pitch 69} {:time (+ time 6) :instrument 15, :pitch 69} {:time (+ time 8) :instrument 15, :pitch 64} {:time (+ time 9.5) :instrument 15, :pitch 64} {:time (+ time 10) :instrument 15, :pitch 64} {:time (+ time 12) :instrument 15, :pitch 64} {:time (+ time 13.5) :instrument 15, :pitch 64} {:time (+ time 14) :instrument 15, :pitch 64}])\r\n\r\n(def bass-pat-1\r\n  (concat (bass1 0) (bass1 16)))\r\n\r\n(defn drums1 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n    [{:time 15,:instrument 2,:pitch 67} {:time 14,:instrument 13,:pitch 77} {:time 13,:instrument 13,:pitch 77} {:time 12,:instrument 13,:pitch 77} {:time 11,:instrument 2,:pitch 67} {:time 10,:instrument 13,:pitch 77} {:time 9,:instrument 13,:pitch 77} {:time 8,:instrument 13,:pitch 77} {:time 7,:instrument 2,:pitch 67} {:time 6,:instrument 13,:pitch 77} {:time 5,:instrument 13,:pitch 77} {:time 4,:instrument 13,:pitch 77} {:time 3,:instrument 2,:pitch 67} {:time 2,:instrument 13,:pitch 77} {:time 1,:instrument 13,:pitch 77} {:time 0,:instrument 13,:pitch 77}]))\r\n\r\n(defn drums-pat-1 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n       (concat (drums1 0) (drums1 16))))\r\n\r\n(defn glis [notes]\r\n  (let [chord (reverse (sort-by :pitch notes))\r\n        times (for [note (range (count chord))]\r\n                (update (nth chord note) :time #(+ % (* 0.1 note))))\r\n        pitches (for [note (range (count times))]\r\n                  (update (nth times note) :pitch #(- % note)))\r\n        last-note (repeat 3 (last pitches))\r\n        last-note (for [note (range 1 3)]\r\n                    (update (nth last-note note) :time #(+ % (/ note 10.0))))]\r\n    (concat pitches last-note)))\r\n\r\n(defn lead1 [time]\r\n  (map (fn [m] (update m :time #(+ % time)))\r\n       (concat [{:time 1.5, :instrument 14, :pitch 69} {:time 2, :instrument 14, :pitch 71} {:time 2.5, :instrument 14, :pitch 74} {:time 3, :instrument 14, :pitch 76} {:time 3.5, :instrument 14, :pitch 78} {:time 4, :instrument 14, :pitch 78} {:time 4.5, :instrument 14, :pitch 78} {:time 5, :instrument 14, :pitch 76} {:time 6, :instrument 14, :pitch 74} {:time 6.5, :instrument 14, :pitch 76} {:time 7.5, :instrument 14, :pitch 74} {:time 7.75, :instrument 14, :pitch 76} {:time 8, :instrument 14, :pitch 74} {:time 9, :instrument 14, :pitch 74} {:time 9.5, :instrument 14, :pitch 71}]\r\n               (glis (repeat 12 {:time 10 :instrument 14, :pitch 71}))\r\n               [{:time 12, :instrument 14, :pitch 74} {:time 12.5, :instrument 14, :pitch 74} {:time 13.5, :instrument 14, :pitch 74} {:time 14.5, :instrument 14, :pitch 71} {:time 15.5, :instrument 14, :pitch 69} {:time 16, :instrument 14, :pitch 71}]\r\n               (glis (repeat 8 {:time 16, :instrument 14, :pitch 71}))\r\n               [{:time 17.5, :instrument 14, :pitch 64} {:time 18, :instrument 14, :pitch 66} {:time 18.5, :instrument 14, :pitch 69} {:time 19, :instrument 14, :pitch 71} {:time 20, :instrument 14, :pitch 71} {:time 20.5, :instrument 14, :pitch 73} {:time 21.5, :instrument 14, :pitch 69} {:time 22.5, :instrument 14, :pitch 69} {:time 24, :instrument 14, :pitch 66} {:time 24.5, :instrument 14, :pitch 64} {:time 25.5, :instrument 14, :pitch 64}])))\r\n\r\n(def rhythm\r\n  (concat\r\n   bass-pat-1\r\n   (drums-pat-1 0)\r\n    (lead1 0)))\r\n\r\nrhythm\")\r\n\r\n(defn mecca []\r\n  [:div\r\n   [editor]\r\n   [:div.flex-container\r\n    [:div.flex-item\r\n     [sci-editor/editor demo !points {:eval? true}]\r\n     [:p]\r\n     [:p \"Evaluation results\"]\r\n     [sci-editor/editor @result !result {:eval? true}]]\r\n    [:div.flex-item\r\n     [transport/transport 0 -0.5 0.5]\r\n    [editor/toolbar 0 0]\r\n     [:button\r\n      {:on-click #(let [file-blob (js/Blob. [@(subscribe [:notes])] #js {\"type\" \"text/plain\"})\r\n                        link (.createElement js/document \"a\")]\r\n                    (set! (.-href link) (.createObjectURL js/URL file-blob))\r\n                    (.setAttribute link \"download\" \"mecca.txt\")\r\n                    (.appendChild (.-body js/document) link)\r\n                    (.click link)\r\n                    (.removeChild (.-body js/document) link))}\r\n      \"Download\"]\r\n     [load-song]]]])\r\n"]}
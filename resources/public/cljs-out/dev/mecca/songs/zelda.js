// Compiled by ClojureScript 1.10.339 {:static-fns true, :optimize-constants true}
goog.provide('mecca.songs.zelda');
goog.require('cljs.core');
goog.require('cljs.core.constants');
mecca.songs.zelda.bass_triad = (function mecca$songs$zelda$bass_triad(time,pitch){
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,time,cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (4)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,(pitch + (7))], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (8)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,(pitch + (12))], null)], null);
});
mecca.songs.zelda.bass_ostinato = (function mecca$songs$zelda$bass_ostinato(time,pitch){
return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (0)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (4)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (2)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (3)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (6)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (7)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (8)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (10)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (11)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (12)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (14)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$time,(time + (15)),cljs.core.cst$kw$instrument,(15),cljs.core.cst$kw$pitch,pitch], null)], null);
});
mecca.songs.zelda.bass1 = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(mecca.songs.zelda.bass_triad((0),(60)),mecca.songs.zelda.bass_triad((16),(58)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([mecca.songs.zelda.bass_triad((32),(56)),mecca.songs.zelda.bass_triad((48),(55))], 0));
mecca.songs.zelda.bass2 = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(mecca.songs.zelda.bass_ostinato((64),(60)),mecca.songs.zelda.bass_ostinato((80),(60)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([mecca.songs.zelda.bass_ostinato((96),(60)),mecca.songs.zelda.bass_ostinato((112),(58)),mecca.songs.zelda.bass_ostinato((128),(56)),mecca.songs.zelda.bass_ostinato((144),(55)),mecca.songs.zelda.bass_ostinato((160),(60)),mecca.songs.zelda.bass_ostinato((176),(58)),mecca.songs.zelda.bass_ostinato((192),(56)),mecca.songs.zelda.bass_ostinato((208),(63)),mecca.songs.zelda.bass_ostinato((224),(61)),mecca.songs.zelda.bass_ostinato((240),(60)),mecca.songs.zelda.bass_ostinato((256),(62)),mecca.songs.zelda.bass_ostinato((272),(55)),mecca.songs.zelda.bass_ostinato((288),(60)),mecca.songs.zelda.bass_ostinato((304),(58)),mecca.songs.zelda.bass_ostinato((320),(56)),mecca.songs.zelda.bass_ostinato((336),(55))], 0));
mecca.songs.zelda.zelda = cljs.core.into.cljs$core$IFn$_invoke$arity$2(mecca.songs.zelda.bass1,mecca.songs.zelda.bass2);

(ns ^:figwheel-hooks mecca.components
  (:require [mecca.music :as music]
            [mecca.subs :as subs]
            [reagent.core :as r]
            [re-frame.core :as rf :refer [subscribe dispatch]]
            [mecca.events :as events :refer [mouse-pos mouse-down-handler selected]]
            [mecca.music.melody :as melody]
            [mecca.music.scale :as scale]
            [mecca.mario :refer [editor-bg mario]]))

(defn brace []
  [:path {:transform "translate (0.7,7.825) scale(0.6, 0.91)"
          :d "M1.731 28.982H1.576v-.084-.084h-.113-.113v-.113-.113h-.113-.113v-.225-.225h-.113-.113v-.225-.225h-.113-.113v-.225-.225H.562.45V26.787 26.337H.338.225v-1.914-1.914h.113.113v-.562-.562h.113.113v-.675-.675h.113.113v-.788-.788h.113.113v-.675-.675h-.113-.113v-.562-.562h-.113-.113v-.338-.338h-.113-.113v-.113-.113H.338.225v-.225-.225H.113 0v-.225-.225h.113.113v-.113-.113h.113.113v-.225-.225h.113.113v-.225-.225h.113.113v-.562-.562h.113.113V11.255 10.58H1.013.901V9.792 9.004H.788.675V8.329 7.654H.562.45V7.09 6.528H.338.225V4.614 2.702h.113.113V2.251 1.801h.113.113v-.225-.225h.113.113v-.225-.225h.113.113v-.225-.225h.113.113V.338.225h.113.113V.113 0H1.731 1.885V.113.225H1.843 1.801v.113.113h-.113-.113v.225.225h-.113-.113v.113.113h-.113-.113v.338.338h-.113-.113v1.801 1.801h.113.113v.675.675h.113.113v.562.562h.113.113v2.026 2.026h-.113-.113v.45.45h-.113-.113v.225.225h-.113-.113v.225.225h-.113-.113v.225.225h-.113-.113v.113.113H.338.225v.113.113h.113.113v.113.113h.113.113v.225.225h.113.113v.225.225h.113.113v.225.225h.113.113v.338.338h.113.113v2.026 2.026h-.113-.113v.675.675h-.113-.113v.675.675h-.113-.113v1.801 1.801h.113.113v.225.225h.113.113v.225.225h.113.113v.225.225h.154.154v.197.197z"}])

(defn bar-line [x]
   [:line {:transform "translate(3.825,-0.09)"
           :x1 x :x2 x :y1 8 :y2 34.19 :stroke "black"
           :stroke-width 0.35}])

(defn bar-number [n]
  [:path {:transform (str "translate(" (+ 0.3 (* 24 (dec n))) "," 6.3 ")")
          :d (case n
               0 "M.286.999H.143V.928.857H.071 0V.5.143H.071.143V.071 0H.286.428V.071.143H.5.571V.5.857H.5.428V.928.999ZM.286.857H.428V.5.143H.286.143v.357.357z"
               1 "M.393 1.34H.106V1.245 1.149H.202.297V.765.383H.202.106V.287.191H.202.297V.096 0h.096.096v.574.574H.584.68V1.245 1.34Z"
               2 "M.542 1.337H.159V1.146.956H.255.35V.86.765H.446.542V.669.573H.637.733V.382.191H.542.35V.382.573H.255.159V.382.191H.255.35V.096 0h.191.191V.096.191H.828.924V.382.573H.828.733V.669.765H.637.542V.86.956H.446.35v.096.096h.287.287v.096.096z"
               3 "M6 21H3V19.5 18H1.5 0V16.5 15H1.5 3V16.5 18H6 9V15 12H6 3V10.5 9H6 9V6 3H6 3V4.5 6H1.5 0V4.5 3H1.5 3V1.5 0H6 9V1.5 3H10.5 12V6 9H10.5 9v1.5 1.5h1.5 1.5v3 3H10.5 9v1.5 1.5z"
               4 "M 10.5,21 H 9 V 18 15 H 4.5 0 V 12 9 H 1.5 3 V 7.5 6 H 4.5 6 V 4.5 3 H 7.5 9 V 1.5 0 h 1.5 1.5 v 6 6 H 13.5 15 V 13.5 15 H 13.5 12 v 3 3 z M 6,12 H 9 V 9 6 H 7.5 6 V 7.5 9 H 4.5 3 v 1.5 1.5 z"
               5 "M 0,15 H 1.5 3 V 16.5 18 H 6 9 V 13.5 9 H 4.5 0 V 4.5 0 h 6 6 V 1.5 3 H 7.5 3 V 4.5 6 H 6 9 V 7.5 9 H 10.5 12 V 13.5 18 H 10.5 9 V 19.5 21 H 6 3 V 19.5 18 H 1.5 0 v -1.5 z"
               6 "M 6,21 H 3 V 19.5 18 H 1.5 0 V 10.5 3 H 1.5 3 V 1.5 0 H 6 9 V 1.5 3 H 10.5 12 V 4.5 6 H 10.5 9 V 4.5 3 H 6 3 v 3 3 h 3 3 v 1.5 1.5 h 1.5 1.5 v 3 3 H 10.5 9 V 19.5 21 Z M 6,18 H 9 V 15 12 H 6 3 v 3 3 z"
               7 "M 4.5,21 H 3 V 18 15 H 4.5 6 V 12 9 H 7.5 9 V 6 3 H 6 3 V 4.5 6 H 1.5 0 V 3 0 h 6 6 V 4.5 9 H 10.5 9 v 3 3 H 7.5 6 v 3 3 z"
               8 "M 6,21 H 3 V 19.5 18 H 1.5 0 V 15 12 H 1.5 3 V 10.5 9 H 1.5 0 V 6 3 H 1.5 3 V 1.5 0 H 6 9 V 1.5 3 H 10.5 12 V 6 9 H 10.5 9 v 1.5 1.5 h 1.5 1.5 v 3 3 H 10.5 9 V 19.5 21 Z M 6,18 H 9 V 15 12 H 6 3 v 3 3 z M 6,9 H 9 V 6 3 H 6 3 v 3 3 z"
               9 "M 6,21 H 3 V 19.5 18 H 1.5 0 V 16.5 15 H 1.5 3 V 16.5 18 H 6 9 V 15 12 H 6 3 V 10.5 9 H 1.5 0 V 6 3 H 1.5 3 V 1.5 0 H 6 9 V 1.5 3 H 10.5 12 V 10.5 18 H 10.5 9 V 19.5 21 Z M 6,9 H 9 V 6 3 H 6 3 v 3 3 z")}])

(defn bar-line-dotted [x]
  [:g {:transform "translate(14,0)"}
   [bar-number (inc (/ (/ x 6) 4))]
   [:line {:x1 x :x2 x :y1 6 :y2 36 :stroke "orange"
           :stroke-width 0.25
           :stroke-dasharray 0.5}]])

(defn beat-line [x]
  [:line {:transform "translate(14,0)"
          :x1 x :x2 x :y1 6 :y2 36 :stroke "black"
          :stroke-width 0.075
          :stroke-dasharray 0.5}])

(defn ending-bar []
  [:g {:transform "translate(1.2,0.06)"}
   [:rect {:x 22.25 :y 3 :width 0.24 :height 11.25 :ry 0 :fill "black"}]
   [:line {:x1 22.125 :x2 22.125 :y1 3 :y2 14.25 :stroke "black"
           :stroke-width 0.1}]])

(defn ending-bar-repeat []
  [:g 
   [:rect {:x 62.5 :y 8 :width 1 :height 28 :ry 0 :fill "black"}]
   [:line {:x1 61.8 :x2 61.8 :y1 8 :y2 36 :stroke "black"
           :stroke-width 0.35}]
   [:circle {:cx 60.8 :cy 11 :r 0.4}]
   [:circle {:cx 60.8 :cy 13 :r 0.4}]
   [:circle {:cx 60.8 :cy 23 :r 0.4}]
   [:circle {:cx 60.8 :cy 25 :r 0.4}]
   [:circle {:cx 60.8 :cy 33 :r 0.4}]
   [:circle {:cx 60.8 :cy 35 :r 0.4}]])

(defn eighth-note-flag []
    [:path {:transform "scale(0.007,-0.007)" :d "M179 -646c15 29 28.5449 55.0752 46 102c18.3213 49.2549 30 108.298 30 138c0 105 -80 173 -168 200c-18 5 -47 9 -87 16v190h22c8 0 33 -61 71 -95c4 -3 -2 3 61 -56c62 -58 122 -137 122 -241c0 -37.5245 -12.6807 -106.071 -35 -163 c-19.9111 -50.7861 -43 -99 -66 -132c-6 -5 -10 -7 -13 -7s-5 2 -5 5l4 10c1.17241 2.93103 13.7644 24.8111 18 33z"}])

(defn beam []
  [:polygon {:points "2981,475 3499,424 3499,484 2981,535"}])

(defn kill-note []
  [:path {:d "M 0.75,0.3 L 1.75,-0.7 M 1.75,0.3 L 0.75,-0.7"
          :stroke "red"
          :stroke-linecap "round"
          :stroke-width 0.35}])

(defn drum-hit [color [x y]]
    (let [mouseover? (r/atom false)]
      (fn [color [x y]]
        [:g {:on-mouse-over #(reset! mouseover? true)
             :on-mouse-out #(reset! mouseover? false)
             :on-click #(dispatch [:remove-note x y])
             :transform (str "translate(" (+ 12.78 (* 6 x)) "," (inc y) ") ")}
         [:path {:d "m1.24.27 .9.74c.02.01 .04.03 .07.03 .02 0 .05-.01.08-.03l.15-.12c.02-.02.04-.06.04-.09 0-.03-.02-.06-.04-.08L1.56 0 2.43-.71c.02-.02.04-.05.04-.08 0-.03-.02-.07-.04-.09l-.15-.12c-.02-.01-.05-.03-.08-.03-.02 0-.04.01-.07.03L1.24-.27.33-1.01c-.02-.01-.04-.03-.07-.03-.02 0-.05.01-.08.03l-.15.12c-.02.02-.04.06-.04.09 0 .03.02 .06.04 .08L.91 0 .04.71c-.02.02-.04.05-.04.08 0 .03.02 .07.04 .09l.15.12c.02.01 .05.03 .08.03 .02 0 .04-.01.07-.03z"
                 :fill color}]
         [:rect {:x (if (< 31 y)
                      2.2 0)
                 :y (if (< 31 y)
                      -6.3
                      0.8)
                 :height 5.5 :width 0.25
                 :fill color}]
         (if @mouseover?
           [kill-note])])))

(defn ledger-line [[x y]]
  [:rect {:transform (str "scale (1,1) translate(" (+ 8.875 (* 6.9 x)) "," (- 25.0375 y) ") ")
          :height 0.2
          :width 2.085
          :ry 0.1
          :x x :y y}])

(defn quarter-note [color [x y]]
  (let [mouseover? (r/atom false)]
    (fn [color [x y]]
      [:g {:on-mouse-over #(reset! mouseover? true)
           :on-mouse-out #(reset! mouseover? false)
           :on-click #(dispatch [:remove-note x y])
           :transform (str "translate(" (+ 13 (* 6 x)) "," (inc y) ") ")}
       [:path {:d "m1.62-1.06c.41 0 .8.21 .8.67 0 .53-.41.89-.76 1.1-.27.16-.56.27-.86.27-.41 0-.8-.21-.8-.67 0-.53.41-.89.76-1.1.27-.16.56-.27.86-.27z"
               :fill color}]
       [:rect {:x (if (or (< 11 y 18) (< 23 y))
                    2.15 0.02)
               :y (if (or (< 11 y 18) (< 23 y))
                    -7.1 0)
               :height 6.794 :width 0.25
               :fill color}]
       (if (or (= y 1)
               (= y 3)
               (= y 5)
               (= y 17)
               (= y 29))
         [:rect {:transform "scale (1.75,1.75)"
                 :height 0.2
                 :width 2.085
                 :ry 0.1
                 :x -0.334 :y -0.1}])
       (if @mouseover?
        [kill-note])])))

(defn drum-clef []
  [:path {:transform "scale(0.75, 0.5) translate(5.5,65.334)"
          :d "M2.5-1.3h-.7c0 0-.1 0-.1.1v3.7c0 0 0 .1.1 .1h.7c0 0 .1 0 .1-.1v-3.7c0 0 0-.1-.1-.1zM.8-1.3h-.7c0 0-.1 0-.1.1v3.7c0 0 0 .1.1 .1h.7c0 0 .1 0 .1-.1v-3.7c0 0 0-.1-.1-.1z" :fill "black"}])

(defn bass-clef []
  (fn []
     [:path {:transform "translate(2.5,20)"
             :d "M.187 6.323H0V6.244 6.165H.094.187V6.072 5.978H.467.747v-.094-.094h.187.187v-.094-.094h.094.094v-.094-.094h.094.094v-.094-.094h.187.187v-.094-.094h.094.094v-.094-.094h.094.094v-.094-.094h.094.094v-.187-.187h.094.094v-.094-.094h.094.094v-.187-.187h.094.094V3.456 3.176h.094.094V2.428 1.681H3.083 2.989V1.308.934H2.896 2.802V.841.747H2.709 2.616V.654.56H2.523 2.428V.467.373H1.868 1.308V.467.56H1.121.934V.654.747H.841.747V.934 1.121H1.215 1.681v.094.094h.094.094v.56.56h-.094-.094v.094.094H1.121.56V2.523 2.428H.467.373V2.241 2.055H.28.187V1.681 1.308H.28.373V1.028.747H.467.56V.654.56H.654.747V.467.373H.841.934V.28.187H1.121 1.308V.094 0H1.961 2.616V.094.187h.28.28v.094.094h.094.094v.094.094h.094.094v.094.094h.094.094v.094.094h.094.094v.187.187h.094.094v.934.934h-.094-.094v.187.187h-.094-.094v.187.187h-.094-.094v.187.187h-.094-.094v.094.094h-.094-.094v.094.094h-.094-.094v.094.094h-.094-.094v.094.094h-.094-.094v.094.094h-.187-.187v.094.094h-.094-.094v.094.094h-.187-.187v.094.094H1.495 1.308v.094.094H1.121.934v.094.094H.654.373v.079.079z
                 M4.844 1.721H4.588V1.636 1.551H4.503 4.418V1.295 1.038h.086.086V.953.868h.256.256v.086.086h.086.086V1.295 1.551h-.086-.086v.086.086z
                 M4.801 3.289H4.548V3.205 3.12H4.463 4.378V2.867 2.613h.085.085V2.529 2.445h.252.252v.085.085h.085.085V2.867 3.12h-.085-.085v.085.085z"}]))

(defn treble-clef []
    [:path {:transform "translate(2.65,6.3)"
            :d "M2.214 12.37H1.55v-.097-.097h-.221-.221v-.111-.111h-.111-.111v-.553-.553h.111.111v-.111-.111h.111.111v-.111-.111h.332.332v.111.111h.111.111v.111.111h.111.111v.332.332h-.111-.111v.111.111h-.111-.111v.111.111h.443.443v-.111-.111h.111.111v-.996-.996h-.111-.111v-.111-.111H2.214 1.55v-.111-.111h-.221-.221v-.111-.111h-.111-.111v-.111-.111h-.111-.111v-.111-.111h-.111-.111v-.111-.111H.332.221v-.221-.221H.111 0v-.996-.996h.111.111v-.221-.221h.111.111v-.221-.221h.111.111v-.111-.111h.111.111v-.111-.111h.111.111v-.111-.111h.111.111v-.111-.111h.111.111v-.111-.111h.111.111V3.653 3.321H1.66 1.55V2.324 1.328h.111.111V.996.664h.111.111V.443.221h.111.111V.111 0h.332.332v.111.111h.111.111v.221.221h.111.111v.332.332h.111.111v.664.664h-.111-.111v.443.443h-.111-.111v.221.221h-.111-.111v.221.221h-.111-.111v.111.111h-.111-.111v.553.553h.111.111v.111.111h.443.443v.111.111h.111.111v.111.111h.111.111v.111.111h.111.111v.221.221h.069.069v.664.664h-.069-.069v.221.221h-.111-.111v.111.111h-.111-.111v.111.111h-.221-.221v.443.443h.111.111v.775.775h-.111-.111v.221.221h-.221-.221v.097.097zM1.992 9.077h.664v-.553-.553h-.111-.111v-.553-.553h-.111-.111v.111.111h-.111-.111v.111.111h-.111-.111v.332.332h.111.111v.221.221h.221.221v.111.111H2.103 1.771v-.111-.111h-.111-.111v-.111-.111h-.111-.111v-.221-.221h-.111-.111v-.332-.332h.111.111v-.221-.221h.111.111v-.111-.111h.111.111v-.111-.111h.111.111v-.111-.111h.111.111v-.111-.111h-.111-.111v-.332-.332h-.111-.111v.111.111h-.111-.111v.111.111h-.111-.111v.111.111h-.111-.111v.221.221h-.111-.111v.111.111h-.111-.111v.332.332h-.111-.111v.332.332h.111.111v.332.332h.111.111v.111.111h.111.111v.111.111h.111.111v.111.111zm1.328-.221h.221v-.221-.221h.111.111v-.443-.443h-.111-.111v-.221-.221h-.221-.221v-.111-.111h-.111-.111v.553.553h.111.111v.443.443zM2.214 3.321h.221v-.221-.221h.111.111v-.111-.111h.111.111v-.221-.221h.111.111V1.66 1.107H2.767 2.435v.221.221h-.111-.111v.221.221h-.111-.111v.664.664z"}])

(defn sharp [x y]
  [:path {:transform (str "translate(" x "," (+ 0.5 y) ")") :d "M.18.04V-.91l.4-.11v.95zM.98-.19.7-.11V-1.05l.28-.08v-.39l-.28.08V-2.42h-.11v1l-.4.12V-2.24h-.11v.98l-.28.08v.39l.28-.08v.95l-.28.08V.55L.08.47v.96h.11V.43l.4-.11v.94h.11V.29L.98.21Z"}])

(defn flat [x y]
  [:path {:d "m .94 1.62s-.06-1.2-.06-2c0-.32.02-.56.04-.64.08-.24.6-.68.88-.84.18-.1.36-.14.52-.14.2 0 .38.08.5.22.2.22.32.56.32.94 0 .36-.1.78-.34 1.2-.26.48-.84 1.12-1.44 1.5-.08.04-.14.06-.2.06-.18 0-.22-.2-.22-.3m-.7 1.78c.06.08.12.1.18.1s.12-.04.12-.04c.6-.34 1.08-.88 1.58-1.22 1.78-1.24 2.4-2.46 2.4-3.38 0-1.14-.88-1.86-1.8-1.92-.14 0-.28.02-.42.06-.22.06-.46.14-.68.28-.12.1-.34.28-.44.28-.04 0-.06 0-.1-.02-.14-.06-.22-.2-.22-.34.02-.44.14-5.24.14-5.64 0-.22-.18-.34-.38-.34-.28 0-.6.2-.62.56 0 0 .08 11.42.24 11.62"}])

(defn c-sharp-minor []
  [:g [sharp 6.6 8]
   [sharp 7.4 11]
   [sharp 8.2 7]
   [sharp 9 10]
   [sharp 9.8 13]
   [sharp 10.6 9]
   [sharp 11.4 12]])

(defn note-button [value color x]
  [:g {:transform (str "translate(" x ",0)")}
     [:path {:fill (if (= color "pink") "#e6b08e" "#c0c0c0")
             :d "m2 14h-1v-6-6h.5.5v-.5-.5h6 6v1 1h-.5-.5v-.5-.5H8 3v.5.5h-.5-.5v5 5h.5.5v.5.5zm3.5-2h-.5v-.5-.5h-.5-.5v-.5-.5h.5.5V9.5 9h.5.5v.5.5h.5.5v.5.5h-.5-.5v.5.5zm0-1h.5v-.5-.5h-.5-.5v.5.5z"}]
     [:path {:fill (if (= color "pink") "#b78160" "#707070")
             :d "m8 15h-6v-.5-.5h5.5 5.5v-.5-.5h.5.5V7.5 1.999h.5.5V8 14h-.5-.5v.5.5zM4.5 12h-.5v-.5-.5h.5.5v.5.5zm2-2h-.5v-.5-.5h.5.5v.5.5z"}]
     [:path {:fill (if (= color "pink") "#fed5bc" "#e8f0f8")
             :d "M8 14H3V13.5 13h-.5-.5v-5-5h.5.5v-.5-.5h3 3v3 3h-1.5-1.5v.5.5H5 4V9.5 10h-.5-.5v1 1h.5.5v.5.5h1.5 1.5V12.5 12h1 1V11.5 11h.5.5v-4.5-4.5h1.5 1.5v.5.5h.5.5v5 5h-.5-.5v.5.5zm-2.5-3h-.5v-.5-.5h.5.5v.5.5z"}]
     [:path {:d
             (case value
               "quarter" "M8 16H2v-.5-.5H1.5 1v-.5-.5H.5 0V8 2H.5 1V1.5 1H1.5 2V.5 0h6 6v.5.5h.5.5V1.5 2h.5.5v6 6h-.5-.5v.5.5h-.5-.5v.5.5zm0-1h6v-.5-.5h.5.5V8 2h-.5-.5V1.5 1H8 2V1.5 2H1.5 1v6 6H1.5 2v.5.5zm-2.5-2h-1.5v-.5-.5H3.5 3v-1-1h.5.5v-.5-.5h.5.5v.5.5h-.5-.5v1 1h1 1v-.5-.5h.5.5v-1-1h-.5-.5V8.5 8h1.5 1.5V5 2h.5.5v4.5 4.5h-.5-.5v.5.5h-1-1v.5.5z"
               "eighth" "M8 16H2V15.5 15H1.5 1V14.5 14H.5 0V8 2H.5 1V1.5 1H1.5 2V.5 0H8 14V.5 1H14.5 15V1.5 2H15.5 16V8 14H15.5 15V14.5 15H14.5 14V15.5 16ZM8 15H14V14.5 14H14.5 15V8 2H14.5 14V1.5 1H8 2V1.5 2H1.5 1V8 14H1.5 2V14.5 15ZM5.5 13H4V12.5 12H3.5 3V11 10H3.5 4V9.5 9H4.5 5V9.5 10H4.5 4V11 12H5 6V11.5 11H6.5 7V10 9H6.5 6V8.5 8H7.5 9V5 2H10 11V2.5 3H11.5 12V3.5 4H12.5 13V5.5 7H12.5 12V7.5 8H11.5 11V7.5 7H11.5 12V6 5H11.5 11V4.5 4H10.5 10V7.5 11H9.5 9V11.5 12H8 7V12.5 13Z"
               "sixteenth" "m8 16h-6v-.5-.5h-.5-.5v-.5-.5h-.5-.5v-6-6h.5.5v-.5-.5h.5.5v-.5-.5h6 6v.5.5h.5.5v.5.5h.5.5v6 6h-.5-.5v.5.5h-.5-.5v.5.5zm0-1h6v-.5-.5h.5.5v-6-6h-.5-.5v-.5-.5h-6-6v.5.5h-.5-.5v6 6h.5.5v.5.5zm-2.5-2h-1.5v-.5-.5h-.5-.5v-1-1h.5.5v-.5-.5h.5.5v.5.5h-.5-.5v1 1h1 1v-.5-.5h.5.5v-1-1h-.5-.5v-.5-.5h1.5 1.5v-3-3h1 1v.5.5h.5.5v.5.5h.5.5v3 3h-.5-.5v.5.5h-.5-.5v-.5-.5h.5.5v-1-1h-.5-.5v-.5-.5h-.5-.5v2 2h-.5-.5v.5.5h-1-1v.5.5zm6-7h.5v-.5-.5h-.5-.5v-.5-.5h-.5-.5v.5.5h.5.5v.5.5z")}]])

#_(defn play-button []
     [:g {:transform "scale (0.35,0.35) translate(285,893)"
          :on-click #(music/play-bassline!)}
      [:path {:d "m 17.333333,38.666667 v -24 H 26.666667 36 V 18 21.333333 h 6 6 V 24 26.666667 h 6 6 V 30 33.333333 h 2.666667 2.666666 V 36 38.666667 H 62.666667 60 V 36 33.333333 H 54 48 V 30 26.666667 H 42 36 V 24 21.333333 H 30 24 V 42 62.666667 h -3.333333 -3.333334 z"
              :style {:fill "#c4e5dd"}}]
      [:path {:d "m 24,54 v -3.333333 h 6 6 V 48 45.333333 h 6 6 V 42 38.666667 h 2.666667 2.666666 V 36 33.333333 H 56.666667 60 v 6 6 H 54 48 V 48 50.666667 H 42 36 V 54 57.333333 h -6 -6 z"
              :style {:fill "#cdcdcd"}}]
      [:path {:d "m 17.333333,90 v -3.333333 h 6 6 V 84 81.333333 h 6 6 V 78 74.666667 h 6 6 V 72 69.333333 h 6 6 V 66 62.666667 H 68.666667 72 V 60 57.333333 h 2.666667 2.666666 v -6 -6 H 80.666667 84 v 6 6 H 80.666667 77.333333 V 60 62.666667 H 74.666667 72 V 66 69.333333 H 68.666667 65.333333 V 72 74.666667 h -6 -6 V 78 81.333333 h -6 -6 V 84 86.666667 h -6 -6 V 90 93.333333 h -6 -6 z m 0,-18 V 69.333333 H 20.666667 24 V 66 62.666667 h 6 6 V 60 57.333333 h 6 6 V 54 50.666667 h 6 6 V 48 45.333333 h 2.666667 2.666666 V 48 50.666667 H 62.666667 60 V 54 57.333333 H 54 48 V 60 62.666667 H 42 36 V 66 69.333333 H 30 24 V 72 74.666667 h -3.333333 -3.333334 z m 12,-36 V 26.666667 H 32.666667 36 V 30 33.333333 h 6 6 V 36 38.666667 H 42 36 V 42 45.333333 h -3.333333 -3.333334 z"
              :style {:fill "#a4a4a4"}}]
      [:path {:d "M 17.333333,84 V 81.333333 H 20.666667 24 V 78 74.666667 h 6 6 V 72 69.333333 h 6 6 V 66 62.666667 h 6 6 V 60 57.333333 h 2.666667 2.666666 V 54 50.666667 H 68.666667 72 V 48 45.333333 h 2.666667 2.666666 v 6 6 H 74.666667 72 V 60 62.666667 H 68.666667 65.333333 V 66 69.333333 h -6 -6 V 72 74.666667 h -6 -6 V 78 81.333333 h -6 -6 V 84 86.666667 h -6 -6 z M 12,38.666667 V 2.6666667 h 6 6 V 6 9.3333333 h 6 6 V 12 14.666667 h 6 6 V 18 21.333333 h 6 6 V 24 26.666667 h 2.666667 2.666666 V 30 33.333333 H 68.666667 72 V 36 38.666667 H 68.666667 65.333333 V 42 45.333333 H 62.666667 60 V 48 50.666667 H 54 48 V 54 57.333333 H 42 36 V 60 62.666667 H 30 24 V 66 69.333333 H 20.666667 17.333333 V 72 74.666667 H 14.666667 12 Z M 24,60 v -2.666667 h 6 6 V 54 50.666667 h 6 6 V 48 45.333333 h 6 6 V 42 38.666667 h 2.666667 2.666666 V 36 33.333333 H 62.666667 60 V 30 26.666667 H 54 48 V 24 21.333333 H 42 36 V 18 14.666667 H 30 24 V 12 9.3333333 H 20.666667 17.333333 V 36 62.666667 H 20.666667 24 Z M 24,36 V 21.333333 h 6 6 V 24 26.666667 h 6 6 V 30 33.333333 h 2.666667 2.666666 V 36 38.666667 H 50.666667 48 V 42 45.333333 H 42 36 V 48 50.666667 h -6 -6 z m 12,6 v -3.333333 h 6 6 V 36 33.333333 H 42 36 V 30 26.666667 H 32.666667 29.333333 V 36 45.333333 H 32.666667 36 Z"
              :style {:fill "#727272"}}]
      [:path {:d "M 17.333333,78 V 74.666667 H 20.666667 24 V 72 69.333333 h 6 6 V 66 62.666667 h 6 6 V 60 57.333333 h 6 6 V 54 50.666667 h 2.666667 2.666666 v -6 -6 H 68.666667 72 v 6 6 H 68.666667 65.333333 V 54 57.333333 H 62.666667 60 V 60 62.666667 H 54 48 V 66 69.333333 H 42 36 V 72 74.666667 H 30 24 V 78 81.333333 h -3.333333 -3.333334 z"
              :style {:fill "#000000"}}]])

#_(defn play-button-on []
  (fn []
    [:svg 
     [:g {:transform "scale (0.35,0.35) translate(285,893)"}
      [:path {:d "M 12.655368,40.632764 V 25.966097 h 6 6 v 2.666667 2.666667 h 6 6 v 3.333333 3.333333 h 6 6 v 2.666667 2.666667 h -6 -6 v 3.333333 3.333333 h -6 -6 v 2.666667 2.666667 h -6 -6 z"
              :style {:fill "#f6f600"}}]
      [:path {:d "m 7.322035,64.632764 v -2.666667 h 2.6666667 2.6666663 v -3.333333 -3.333333 h 6 6 v -2.666667 -2.666667 h 6 6 v -3.333333 -3.333333 h 6 6 v 3.333333 3.333333 h -6 -6 v 2.666667 2.666667 h -6 -6 v 3.333333 3.333333 h -6 -6 v 2.666667 2.666667 H 9.9887017 7.322035 Z"
              :style {:fill "#f69300"}}]
      [:path {:d "m 7.322035,76.632764 v -2.666667 h 2.6666667 2.6666663 v -3.333333 -3.333333 h 6 6 v -2.666667 -2.666667 h 6 6 v -3.333333 -3.333333 h 6 6 v -2.666667 -2.666667 h 3.333334 3.333333 v -3.333333 -3.333333 h 6 6 v 3.333333 3.333333 h -3.333333 -3.333334 v 2.666667 2.666667 h -2.666666 -2.666667 v 3.333333 3.333333 h -6 -6 v 2.666667 2.666667 h -6 -6 v 3.333333 3.333333 h -6 -6 v 2.666667 2.666667 h -6 -6 z"
              :style {:fill "#727272"}}]
      [:path {:d "M 0.65536833,40.632764 V 7.2994306 H 6.6553683 12.655368 v 3.3333334 3.333333 h 6 6 v 2.666667 2.666667 h 6 6 v 3.333333 3.333333 h 6 6 v 2.666667 2.666667 h 3.333334 3.333333 v 3.333333 3.333333 h 2.666667 2.666666 v 2.666667 2.666667 h -2.666666 -2.666667 v 3.333333 3.333333 h -3.333333 -3.333334 v 2.666667 2.666667 h -6 -6 v 3.333333 3.333333 h -6 -6 v 2.666667 2.666667 h -6 -6 v 3.333333 3.333333 H 6.6553683 0.65536833 Z m 11.99999967,24 v -2.666667 h 6 6 v -3.333333 -3.333333 h 6 6 v -2.666667 -2.666667 h 6 6 v -3.333333 -3.333333 h 3.333334 3.333333 v -2.666667 -2.666667 h -3.333333 -3.333334 v -3.333333 -3.333333 h -6 -6 v -2.666667 -2.666667 h -6 -6 v -3.333333 -3.333333 h -6 -6 V 16.632764 13.966097 H 9.9887017 7.322035 v 26.666667 26.666667 h 2.6666667 2.6666663 z"
              :style {:fill "#000000"}}]]]))

(defn scale-picker []
  [:label
   "Scale: "
   [:select
    {:value @(subscribe [:scale])
     :on-change
     (fn [e]
       (.preventDefault e)
       (dispatch [:set-scale (-> e .-target .-value)]))}
    (doall
     (for [scale (keys music/scales)]
       ^{:key scale}
       [:option scale]))]])

(defn key-picker []
  [:label " Key: "
   [:select {:value @(subscribe [:key])
             :on-change
             (fn [e]
               (.preventDefault e)
               (dispatch [:set-key (-> e .-target .-value)]))}
    (for [note music/notes]
      ^{:key note}
      [:option note])]])

(defn octave-input []
  [:label " Octave: "
   [:input
    {:style {:width "6%"
             :background-color "lightgray"}
     :type "number"
     :value @(subscribe [:octave])
     :on-change (fn [e]
                  (.preventDefault e)
                  (dispatch [:set-octave (-> e .-target .-value)]))}]])

(defn tempo-input []
  [:label " Tempo: "
   [:input
    {:style {:width "8%"
             :background-color "lightgray"}
     :type "number"
     :value @(subscribe [:tempo])
     :on-change (fn [e]
                  (.preventDefault e)
                  (dispatch [:set-tempo
                             (-> e .-target .-value)]))}]])

(defn staff []
  (let [focused (r/atom [nil nil])
        lead (subscribe [:lead])
        bassline (subscribe [:bassline])
        drums (subscribe [:drums])
        current-position (subscribe [:current-position])]
    (fn []
      [:g.staff {:transform "translate(0,9) scale(1)"}
       [:g#lines
        (doall
         (for [y (range 36)]
           ^{:key y}
           [:line {:x1 2.25 :x2 63 :y1 y :y2 y
                   :stroke "black"
                   :stroke-width (if (or (= y 30) (= y 18)) 0.06 0.15)
                   :stroke-dasharray (if (or (= y 30) (= y 18)) 0.25)
                   :visibility (if (and (> y 7)
                                        (even? y)
                                        (< y 42)) "visible" "hidden")
                   :stroke-linecap "butt" :stroke-linejoin "bevel"}]))]
       [brace]
       [bar-line -1.68]
       [:g#clefs
        [bass-clef]
        [treble-clef]
        [drum-clef]
        ;[c-sharp-minor]
        [bar-line-dotted 0]
        [beat-line 6]
        [beat-line 12]
        [beat-line 18]
        [bar-line 31.5]
        [bar-line-dotted 24]
        [beat-line 30]
        [beat-line 36]
        [beat-line 42]
        [bar-line 59]]
       (doall (for [x (range 8)
                    y (conj (range 31) 31 33 35)]
                ^{:key [x y]}
                [:g {:transform "translate(12.5,0)"}
                 [:rect {:x (* 6 x)
                         :y (+ 0.5 y)
                         :height 1 :width 3
                         :fill "gray"
                         :visibility "hidden"
                         :pointer-events "all"
                         :on-mouse-over (fn [e]
                                          (reset! focused [x y]))
                         :on-mouse-out #(reset! focused [nil nil])
                         :on-click #(dispatch [:add-note x y])}]
                 (if (= @focused [x y])
                   (if (< 30 y)
                     [:g {:transform (str "translate(" (+ 0.35 (* 6 x)) "," (inc y) ") ")
                          :pointer-events "none"}
                      [:path {:d "m1.24.27 .9.74c.02.01 .04.03 .07.03 .02 0 .05-.01.08-.03l.15-.12c.02-.02.04-.06.04-.09 0-.03-.02-.06-.04-.08L1.56 0 2.43-.71c.02-.02.04-.05.04-.08 0-.03-.02-.07-.04-.09l-.15-.12c-.02-.01-.05-.03-.08-.03-.02 0-.04.01-.07.03L1.24-.27.33-1.01c-.02-.01-.04-.03-.07-.03-.02 0-.05.01-.08.03l-.15.12c-.02.02-.04.06-.04.09 0 .03.02 .06.04 .08L.91 0 .04.71c-.02.02-.04.05-.04.08 0 .03.02 .07.04 .09l.15.12c.02.01 .05.03 .08.03 .02 0 .04-.01.07-.03z"
                              :fill "gray"}]
                      [:rect {:x (if (< 31 y)
                                   2.2 0)
                              :y (if (< 31 y)
                                   -6.3
                                   0.8)
                              :height 5.5 :width 0.25
                              :fill "gray"}]]
                     [:g {:transform (str "translate(" (+ 0.5 (* 6 x)) "," (inc y) ")")
                          :pointer-events "none"}
                      [:path {:d "m1.62-1.06c.41 0 .8.21 .8.67 0 .53-.41.89-.76 1.1-.27.16-.56.27-.86.27-.41 0-.8-.21-.8-.67 0-.53.41-.89.76-1.1.27-.16.56-.27.86-.27z"
                              :fill "gray"}]
                      [:rect {:x (if (or (< 11 y 18) (< 23 y))
                                   2.15 0.02)
                              :y (if (or (< 11 y 18) (< 23 y))
                                   -7.1 0)
                              :height 6.794 :width 0.25
                              :fill "gray"}]
                      (if (or (= y 1)
                              (= y 3)
                              (= y 5)
                              (= y 17)
                              (= y 29))
                        [:rect {:transform "scale (1.75)"
                                :height 0.2
                                :width 2.085
                                :ry 0.1
                                :x -0.334 :y -0.1
                                :fill "gray"}])]))]))
       (doall (for [{:keys [time pitch]} @lead]
                ^{:key [time pitch]}
                [quarter-note "black" [time (- 77 pitch)]]))
       (doall (for [{:keys [time pitch]} @bassline]
                ^{:key [time pitch]}
                [quarter-note "black" [time (- 77 pitch)]]))
       (doall (for [{:keys [time pitch]} @drums]
                ^{:key [time pitch]}
                [drum-hit "black" [time (- 77 pitch)]]))
       #_(doall (for [x (range 8)
                      :let [y (melody/chromatic->diatonic
                               (- (get @bassline x)
                                  (music/root-note-midi-num)))]
                      :when (number? y)]
                  ^{:key x}
                  [quarter-note (if (= @current-position (inc x)) "red" "black") [x y]]))])))

(defn mortar-row [x y width]
  [:line {:x1 x :x2 (+ x (* width 8))
          :y1 (+ y 3.5) :y2 (+ y 3.5)
          :stroke "black"}])

(defn brick-row [x y width offset]
  [:line {:x1 x :x2 (+ x (* 8 width))
          :y1 (+ 1.5 y) :y2 (+ 1.5 y)
          :stroke-width 3
          :stroke-dasharray "7 1"
          :stroke-dashoffset offset
          :stroke "#c74a0a"}])

(defn mortar-columns [x y width offset]
  [:line {:x1 x :x2 (+ x (* 8 width))
          :y1 (+ 1.5 y) :y2 (+ 1.5 y)
          :stroke-width 3
          :stroke-dasharray "1 7"
          :stroke-dashoffset offset
          :stroke "black"}])

(defn brick-row-pair [x y width]
  [:g
   [brick-row x y width 0]
   [mortar-columns x y width 1]
   [mortar-row x y width]
   [brick-row x (+ y 4) width 4]
   [mortar-columns x (+ y 4) width 5]
   [mortar-row x (+ y 4) width]])

(defn castle-arch [y]
  [:g (for [[dy dx] [[16.5 3] [17.5 5] [18.5 6] [20.5 7] [21.5 7] [22.5 8]]]
        ^{:key [dy dx]}
        [:line {:x1 (- 40 dx) :x2 (+ 40 dx)
                :y1 (+ 32 dy) :y2 (+ 32 dy)
                :stroke "black"}])])

(defn castle-door [x y]
  [:g 
   [castle-arch y]
   [:rect {:x x :y y
           :width 16
           :height 24
           :fill "black"}]])

(defn castle-roof [x y width]
  [:g 
   [:line {:x1 x :x2 (+ x width)
           :y1 (+ y 0.5) :y2 (+ y 0.5)
           :stroke-width 1
           :stroke-dasharray "9 7"
           :stroke-dashoffset -11
           :stroke "#fbbbaf"}]
   [:line {:x1 x :x2 (+ x width)
           :y1 (+ y 4) :y2 (+ y 4)
           :stroke-width 6
           :stroke-dasharray "1 7"
           :stroke-dashoffset 5
           :stroke "#fbbbaf"}]
   [:line {:x1 x :x2 (+ x width)
           :y1 (+ y 4) :y2 (+ y 4)
           :stroke-width 6
           :stroke-dasharray "7 9"
           :stroke-dashoffset 4
           :stroke "#c74a0a"}]
   [:line {:x1 x :x2 (+ x width)
           :y1 (+ y 7.5) :y2 (+ y 7.5)
           :stroke-width 1
           :stroke-dasharray "9 7"
           :stroke-dashoffset -11
           :stroke "black"}]
   [:line {:x1 x :x2 (+ x width)
           :y1 (+ y 7.5) :y2 (+ y 7.5)
           :stroke-width 1
           :stroke-dasharray "9 7"
           :stroke-dashoffset 13
           :stroke "#fbbbaf"}]])

(defn brick-face [x y width]
  [:g {:transform "scale (0.18)"}
   [castle-roof x y (* 8 width)]
   [brick-row-pair x (+ y 8) width]
   [brick-row-pair x (+ y 16) width]
   [brick-row-pair x (+ y 24) width]
   [brick-row-pair x (+ y 32) width]
   [brick-row-pair x (+ y 40) width]
   (if (= width 10)
     [castle-door 32 (+ y 24)])])

(defn controls []
  [:g {:transform "scale (0.8) translate (24,0)"}
   [:path {:d "M 15.980521,7.613225 0.42857114,7.607391 0.21428596,7.378536 0,7.149667 V 3.808607 0.467532 L 0.23376627,0.233767 0.46753329,0 H 15.999999 31.532464 L 31.766239,0.233767 32,0.467532 V 3.809531 7.151509 L 31.766239,7.38529 31.532464,7.61905 15.980521,7.61325 Z m 0,-0.190477 15.361467,0.0058 0.233773,-0.233756 0.233758,-0.233772 V 3.809541 0.658023 L 31.575761,0.424258 31.341988,0.190492 H 15.999952 0.65796607 L 0.42419962,0.424258 0.1904332,0.658023 v 3.150596 3.15058 l 0.2142863,0.228874 0.21428465,0.22887 15.36146885,0.0058 z M 15.983521,6.66305 1.1908176,6.659128 1.0716125,6.524063 0.95256497,6.388844 V 3.806716 1.224461 L 1.0885172,1.088416 1.2245715,0.95236 h 14.7754815 14.7755 l 0.136057,0.136056 0.136055,0.136056 V 3.809505 6.394546 L 30.91161,6.530587 30.775553,6.666643 15.983047,6.662743 Z m 0,-0.190473 14.602041,0.0039 0.136051,-0.13605 0.136051,-0.136052 V 3.809561 1.414998 L 30.721142,1.278936 30.585104,1.142879 H 15.999952 1.4149235 L 1.2788678,1.278936 1.1428134,1.414988 v 2.391767 2.391778 l 0.1190484,0.135229 0.1190479,0.135206 14.6020393,0.0039 z M 18.933396,5.327509 18.714781,5.321709 18.500489,5.092841 18.286206,4.86399 V 4.665759 4.46755 L 18.51997,4.233798 18.753734,4.000017 H 18.952866 19.152 l 0.233772,0.233781 0.233763,0.233752 V 4.666688 4.865831 L 19.385772,5.099587 19.152,5.333365 18.933386,5.327565 Z m 0.003,-0.188272 0.221085,0.0039 0.136058,-0.136059 0.136046,-0.136044 V 4.666753 4.462671 L 19.293255,4.32658 19.157198,4.190523 H 18.953031 18.74895 L 18.612894,4.32658 18.476848,4.462631 V 4.66393 4.865227 l 0.119045,0.135217 0.119048,0.135216 0.22109,0.0039 z m 0.01703,-0.377311 h -0.285903 v -0.09526 -0.09523 h 0.285714 0.285723 v 0.09523 0.09526 z M 29.791068,5.327509 29.572455,5.321709 29.358167,5.092841 29.143886,4.863991 V 4.665773 4.467564 l 0.233762,-0.233753 0.233768,-0.233778 h 0.199133 0.199133 l 0.233764,0.233778 0.233769,0.233753 v 0.199139 0.199142 l -0.233769,0.233756 -0.233764,0.233778 -0.218614,-0.0058 z m 0.003,-0.188272 0.221083,0.0039 0.13606,-0.136059 0.136051,-0.136044 V 4.666803 4.462722 L 30.150858,4.3267 30.014802,4.190647 H 29.810588 29.606507 L 29.470453,4.3267 29.334396,4.46275 v 0.201294 0.2013 l 0.11905,0.135224 0.11905,0.135205 0.221082,0.0039 z m 0,-0.190464 -0.03059,-0.0039 -0.124269,-0.140807 -0.124276,-0.140812 0.148079,-0.148081 0.148089,-0.148091 0.149656,0.149667 0.149661,0.149652 -0.142854,0.142866 -0.142859,0.142846 -0.03054,-0.0039 z m -5.411572,0.0039 h -3.809978 v -0.1905 -0.190481 h 3.809518 3.809529 V 4.762184 4.95265 Z M 2.2858336,2.857164 H 1.90488 V 2.761934 2.666694 H 2.1905952 2.4763084 V 2.571454 2.476214 H 2.1905952 1.90488 V 2.190498 1.904786 h 0.3809536 0.3809525 v 0.09524 0.09524 H 2.3810716 2.0953564 v 0.09524 0.09524 h 0.2857152 0.2857145 v 0.285713 0.285713 z m 1.0476189,0 H 3.2382145 V 2.476213 2.09526 H 3.0475757 2.8571004 V 2.00002 1.90478 H 3.3332905 3.8094801 V 2.00002 2.09526 H 3.6190057 3.428528 v 0.380953 0.380951 z m 1.0476153,0 H 4.0001219 V 2.380974 1.904786 h 0.3809459 0.3809587 v 0.476188 0.47619 z m 0,-0.190476 h 0.190484 V 2.380974 2.09526 H 4.3809138 4.1904383 V 2.380974 2.666688 Z M 5.0477402,2.857164 H 4.9524931 V 2.380974 1.904786 H 5.3334577 5.7143995 V 2.190498 2.476213 H 5.4286836 5.1429702 V 2.666688 2.857164 Z M 5.3334577,2.285738 H 5.5239312 V 2.190498 2.095258 H 5.3332795 5.1428179 v 0.09524 0.09524 z M 8.0953554,2.857164 H 8.0001234 V 2.380974 1.904786 H 8.3810663 8.7620294 V 2.190498 2.476213 H 8.476319 8.1905885 V 2.666688 2.857164 Z M 8.3810667,2.285738 H 8.5715506 V 2.190498 2.095258 H 8.3809166 8.1904384 v 0.09524 0.09524 z m 0.952391,0.571426 H 8.9524899 V 2.380974 1.904786 h 0.095252 0.095228 v 0.380952 0.38095 h 0.2857134 0.2857159 v 0.09524 0.09523 z m 0.6666663,0 H 9.904874 V 2.517031 2.176895 l 0.13605,-0.136057 0.136064,-0.136052 h 0.108848 0.108842 l 0.136036,0.136052 0.136063,0.136057 v 0.340136 0.340133 h -0.09523 -0.09523 V 2.666688 2.476213 h -0.190476 -0.190486 v 0.190475 0.190476 z m 0.285717,-0.571426 h 0.190476 v -0.09524 -0.09524 h -0.190476 -0.190486 v 0.09524 0.09524 z m 1.047616,0.571426 h -0.09524 V 2.606429 2.355698 l -0.205744,-0.178439 -0.205758,-0.178446 0.06229,-0.06228 0.06227,-0.06228 0.191083,0.220318 0.191089,0.220322 0.191077,-0.220322 0.191084,-0.220318 0.06227,0.06228 0.06228,0.06228 -0.205743,0.178446 -0.205745,0.178439 v 0.250731 0.250735 z m 3.142858,0 H 14.095358 V 2.380974 1.904786 h 0.09523 0.09525 v 0.380952 0.38095 h 0.28571 0.285705 v 0.09524 0.09523 z m 0.952368,0 H 15.047742 V 2.380974 1.904786 h 0.380941 0.380965 v 0.476188 0.47619 z m 0,-0.190476 h 0.190479 V 2.380974 2.09526 h -0.190479 -0.19046 v 0.285714 0.285714 z m 0.952385,0.190476 H 16.000124 V 2.380974 1.904786 h 0.380944 0.380962 v 0.476188 0.47619 z m 0,-0.190476 H 16.57155 V 2.380974 2.09526 h -0.190482 -0.190479 v 0.285714 0.285714 z m 0.666674,0.190476 h -0.09525 V 2.380974 1.904786 h 0.380966 0.380941 V 2.190498 2.476213 H 17.428683 17.14297 v 0.190475 0.190476 z m 0.285716,-0.571426 h 0.190476 V 2.190498 2.095258 H 17.333458 17.14297 v 0.09524 0.09524 z m 5.047608,0.571426 h -0.09523 V 2.476213 2.09526 H 22.095349 21.904875 V 2.00002 1.90478 h 0.476187 0.47619 V 2.00002 2.09526 H 22.666777 22.47631 v 0.380953 0.380951 z m 1.047617,0 h -0.38094 V 2.380974 1.904786 h 0.38094 0.38096 v 0.09524 0.09524 h -0.285714 -0.28571 v 0.09524 0.09524 h 0.28571 0.285714 v 0.09524 0.09524 h -0.285714 -0.28571 v 0.09524 0.09524 h 0.28571 0.285714 v 0.09524 0.09523 z m 0.66667,0 h -0.09523 V 2.380974 1.904786 h 0.06024 0.06027 l 0.177834,0.205046 0.177847,0.205054 0.177836,-0.205054 0.177829,-0.205046 h 0.06026 0.06025 v 0.476188 0.47619 h -0.09523 -0.09523 V 2.571451 2.285738 h -0.08731 -0.0873 l -0.05555,0.11905 -0.05556,0.119048 -0.05556,-0.119048 -0.05555,-0.11905 h -0.0873 -0.08731 v 0.285713 0.285713 z m 1.142866,0 h -0.09525 V 2.380974 1.904786 h 0.380959 0.38095 v 0.285712 0.285715 h -0.285716 -0.285703 v 0.190475 0.190476 z m 0.28571,-0.571426 h 0.19047 v -0.09524 -0.09524 h -0.19047 -0.19047 v 0.09524 0.09524 z m 0.952385,0.571426 H 26.095353 V 2.380974 1.904786 h 0.380961 0.380942 v 0.476188 0.47619 z m 0,-0.190476 h 0.190468 V 2.380974 2.09526 H 26.476314 26.28584 v 0.285714 0.285714 z"}]
   [:path {:d "M 15.789998,7.234483 0.42852798,7.230773 0.30948065,7.095568 0.1904332,6.960342 V 3.809211 0.657999 L 0.42419962,0.424232 0.65796607,0.190466 H 15.904721 31.151477 l 0.233756,0.233766 0.233779,0.233767 v 3.05627 3.056295 L 31.385233,7.004314 31.151477,7.23809 15.789998,7.23419 Z m 0.09772,-0.190487 15.2687,0.0039 0.136053,-0.136057 0.136064,-0.136058 V 3.714311 0.653095 L 31.292469,0.517026 31.156416,0.38097 H 15.904721 0.65301777 l -0.1360539,0.136056 -0.1360543,0.136056 v 3.058437 3.058436 l 0.11904676,0.135226 0.11904782,0.13521 15.26871185,0.0039 z M 1.0713848,6.66305 0.99995617,6.659437 0.88090996,6.524211 0.76186204,6.389008 V 3.809211 1.229431 L 0.99562827,0.995666 1.229393,0.761895 h 14.770559 14.770565 l 0.233774,0.233767 0.233756,0.233765 v 2.582554 2.582576 l -0.147382,0.147391 -0.147403,0.147379 -0.06689,-0.072 -0.06689,-0.072 0.119046,-0.04254 0.119049,-0.04254 V 3.842391 1.224483 L 30.911519,1.088425 30.775472,0.95237 H 15.999952 1.2244463 L 1.0883921,1.088425 0.95233657,1.224481 V 3.850329 6.47617 h 0.095239 0.095238 v 0.09525 0.09523 l -0.071429,-0.004 z M 15.959146,6.476189 H 1.3332909 V 6.380949 6.285729 H 15.999952 30.666628 V 3.809533 1.33334 h 0.09523 0.09524 v 2.435371 2.435382 l -0.136054,0.136055 -0.136049,0.136043 z m 0.0408,-0.380943 H 1.523766 V 3.809531 1.523813 H 15.999952 30.476143 V 2.952381 4.38095 h -0.0742 -0.07422 L 30.190438,4.190479 30.053148,4.00001 H 29.83175 29.610351 L 29.376575,4.233771 29.142818,4.46753 v 0.199136 0.199142 l 0.233757,0.233758 0.233776,0.233777 h 0.221399 0.221398 l 0.13729,-0.190485 0.137285,-0.19048 h 0.07422 0.0742 v 0.57144 0.571428 z m 2.932905,-0.76774 0.21862,0.0058 0.23376,-0.233779 0.233774,-0.233756 V 4.666636 4.46751 L 19.385243,4.233738 19.151482,3.999986 h -0.199136 -0.199143 l -0.233759,0.233753 -0.233775,0.233776 v 0.198197 0.198217 l 0.214293,0.228866 0.214285,0.228861 z M 24.380907,4.952378 H 28.19043 V 4.761921 4.571439 H 24.380913 20.571376 V 4.761921 4.952378 Z M 3.8094801,3.047628 H 5.9047208 V 2.380954 1.71429 H 3.8094801 1.7142431 v 0.666664 0.666674 z m 6.095241,0 H 11.999953 V 2.380954 1.71429 H 9.9047211 7.8094763 v 0.666664 0.666674 z m 5.9999999,0 h 2 V 2.380954 1.71429 h -2 -2 v 0.666664 0.666674 z m 8.476194,0 h 2.666656 V 2.380954 1.71429 h -2.666656 -2.666672 v 0.666664 0.666674 z"
           :fill "#9fbfaf"}]
   [:path {:d "M 15.956661,7.428569 H 0.57138494 V 7.333339 7.238089 H 15.861422 31.151477 L 31.385233,7.004334 31.619012,6.770569 V 3.705974 0.641393 l -0.205753,-0.178441 -0.205742,-0.178443 0.05711,-0.05712 0.05712,-0.05712 0.24385,0.243867 0.243875,0.243867 V 3.809521 6.961034 L 31.575715,7.194801 31.341939,7.428559 Z M 1.2380522,6.285727 H 1.1428132 V 3.85034 1.41497 L 1.2788676,1.278917 1.4149233,1.142862 h 14.6258547 14.62585 v 0.09524 0.09524 H 15.999952 1.3332909 v 2.476193 2.476196 z"
           :fill "#777776"}]])

(defn editor []
  (let [current-position (subscribe [:current-position])
        playing? (subscribe [:playing?])
        mario-sprite (subscribe [:mario-sprite])
        jump (subscribe [:mario-jump])
        selected-note-value (subscribe [:selected-note-value])]
      (fn []
        [:svg {:width "100%"
               :view-box "0 0 64 64"}
         [brick-face 16 0 6]
         [brick-face 0 32 10]
         (if (even? @mario-sprite)
           [mario :run1 (nth (into (reverse (range 32))
                                   (reverse (range 32)))
                             (mod @mario-sprite 64))]
           [mario :run2 (nth (into (reverse (range 32))
                                   (reverse (range 32)))
                             (mod @mario-sprite 64))])
         [:g {:transform "scale(0.2) translate(56,10)"}
          [note-button "quarter" "pink" 180]
          [note-button "eighth" "white" 196]
          [note-button "sixteenth" "white" 212]]
         [:rect#editorframe
          {:stroke "black"
           :stroke-width 0.5
           :fill "none"
           :height 31 :width 64 :x 0 :y 14.5}]
         [staff]
         #_(if @playing?
             [play-button-on]
             [play-button])
         [controls]])))

(defn mecca []
  [:div
   [editor]
   [:div
    [scale-picker]
    [key-picker]
    [octave-input]
    [tempo-input]]
   [:button
    {:on-click
     (fn [e]
       (music/play-bassline!))}
    "Play Bassline"]
   [:p]
   ;[note-grid]
   ;[:p (str "Mouse-pos: " @mouse-pos)]
   [:p]
   [:p (str "Absolute time: " @(subscribe [:time]))]
   [:p (str "Lead: " @(subscribe [:lead]))]
   [:p (str "Bassline: " @(subscribe [:bassline]))]
   [:p (str "Drums: " @(subscribe [:drums]))]
   [:p (str "Mario Sprite: " @(subscribe [:mario-sprite]))]
   [:p (str @(subscribe [:scale])
            " scale from MIDI number "
            (music/root-note-midi-num) " ("
            @(subscribe [:key]) @(subscribe [:octave]) "):")]
   [:p #_(let [scale (subscribe [:scale])
               key (subscribe [:key])
               octave (subscribe [:octave])
               root (music/root-note-midi-num)
               intervals (subscribe [:bassline])
               scale-region (take 16 (scale/scale (get music/scales @scale) root))]
           (str (map #(nth scale-region (dec %)) @intervals)))]
   [:p (str "Tempo: " @(subscribe [:tempo]))]
    [:p (str "Current position: " @(subscribe [:current-position]))]])